{"version":3,"file":"static/js/main.d7418d11.js","mappings":"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","sources":["webpack://website/./src/components/BaseLayout/index.module.less?4ff2","webpack://website/./src/components/SideMenu/index.module.less?33ed","components/SideMenu/index.tsx","components/BaseLayout/index.tsx","components/NoMatch/index.tsx","router.tsx","index.tsx","../../../node_modules/@remix-run/router/history.ts","../../../node_modules/@remix-run/router/utils.ts","../../../node_modules/@remix-run/router/router.ts","../../../node_modules/object-assign/index.js","../../index.tsx","../../dom.ts","../../lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../../lib/use-sync-external-store-shim/index.ts","../../lib/context.ts","../../lib/hooks.tsx","../../lib/components.tsx","../../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../../node_modules/dom-helpers/esm/removeClass.js","../../../node_modules/react-transition-group/esm/config.js","../../../node_modules/react-transition-group/esm/TransitionGroupContext.js","../../../node_modules/react-transition-group/esm/utils/reflow.js","../../../node_modules/react-transition-group/esm/Transition.js","../../../node_modules/react-transition-group/esm/CSSTransition.js","../../../node_modules/dom-helpers/esm/addClass.js","../../../node_modules/dom-helpers/esm/hasClass.js","../../../node_modules/scheduler/cjs/scheduler.production.min.js","../../../node_modules/scheduler/index.js","../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../node_modules/@babel/runtime/helpers/esm/construct.js","../../../node_modules/@babel/runtime/helpers/esm/createClass.js","../../../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../../node_modules/@babel/runtime/helpers/esm/createSuper.js","../../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/@babel/runtime/helpers/esm/extends.js","../../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../node_modules/@babel/runtime/helpers/esm/inherits.js","../../../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../../../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../../node_modules/uiw/node_modules/@babel/runtime/helpers/esm/extends.js","../../../node_modules/uiw/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/css loading","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"subMenu\":\"index_subMenu__+mEZK\",\"layoutWrap\":\"index_layoutWrap__I7K7K\",\"layoutSider\":\"index_layoutSider__RxsVb\",\"header\":\"index_header__7861n\",\"title\":\"index_title__1F54T\"};","// extracted by mini-css-extract-plugin\nexport default {\"side\":\"index_side__kUxPB\",\"logo\":\"index_logo__038c9\",\"menus\":\"index_menus__vhYPT\",\"divider\":\"index_divider__NNyG+\"};","import { NavLink } from 'react-router-dom';\nimport DomainVerify from '@uiw/react-domain-verify';\nimport menus from '../../menus.json';\nimport styles from './index.module.less';\nimport React from 'react';\n\nexport default function SideMenu(props: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={styles.side} {...props}>\n      <div className={styles.menus}>\n        {menus.map(({ label, path, divider, ...otherItem }, idx) => {\n          if (divider) {\n            return (\n              <div key={idx} className={styles.divider}>\n                {label}\n              </div>\n            );\n          }\n          if (path && /^https?:\\/\\//.test(path)) {\n            // 只有在 github web 的时候显示\n            if (/^https?:\\/\\/uiw.gitee.io/.test(path)) {\n              return (\n                <DomainVerify key={idx} href=\"uiwjs.github.io\">\n                  <a href={path} target=\"__blank\" {...otherItem}>\n                    {label}\n                    <svg viewBox=\"0 0 1024 1024\" width={14}>\n                      <path d=\"M821.1456 276.8384c-235.9296 25.1392-449.1776 226.7136-490.5472 452.352a38.4 38.4 0 1 1-75.5712-13.824c45.568-248.576 269.312-468.48 526.6944-510.6688l-117.8112-69.1712a38.4 38.4 0 0 1 38.912-66.2528l223.3344 131.1744a38.4 38.4 0 0 1 10.1376 57.6l-170.752 206.6432a38.4 38.4 0 1 1-59.1872-48.9472l114.7904-138.9056z\" />\n                      <path d=\"M832 620.0832a38.4 38.4 0 0 1 76.8 0v158.208c0 85.9648-61.5936 157.8496-140.8 157.8496H204.8c-79.2064 0-140.8-71.8848-140.8-157.9008V300.3904c0-86.016 61.5936-157.8496 140.8-157.8496h220.2112a38.4 38.4 0 1 1 0 76.8H204.8c-33.8944 0-64 35.072-64 81.0496V778.24c0 45.9776 30.1056 81.1008 64 81.1008h563.2c33.8944 0 64-35.1232 64-81.1008v-158.1568z\" />\n                    </svg>\n                  </a>\n                </DomainVerify>\n              );\n            }\n            return (\n              <a key={idx} href={path} target=\"__blank\" {...otherItem}>\n                {label}\n                <svg viewBox=\"0 0 1024 1024\" width={14}>\n                  <path d=\"M821.1456 276.8384c-235.9296 25.1392-449.1776 226.7136-490.5472 452.352a38.4 38.4 0 1 1-75.5712-13.824c45.568-248.576 269.312-468.48 526.6944-510.6688l-117.8112-69.1712a38.4 38.4 0 0 1 38.912-66.2528l223.3344 131.1744a38.4 38.4 0 0 1 10.1376 57.6l-170.752 206.6432a38.4 38.4 0 1 1-59.1872-48.9472l114.7904-138.9056z\" />\n                  <path d=\"M832 620.0832a38.4 38.4 0 0 1 76.8 0v158.208c0 85.9648-61.5936 157.8496-140.8 157.8496H204.8c-79.2064 0-140.8-71.8848-140.8-157.9008V300.3904c0-86.016 61.5936-157.8496 140.8-157.8496h220.2112a38.4 38.4 0 1 1 0 76.8H204.8c-33.8944 0-64 35.072-64 81.0496V778.24c0 45.9776 30.1056 81.1008 64 81.1008h563.2c33.8944 0 64-35.1232 64-81.1008v-158.1568z\" />\n                </svg>\n              </a>\n            );\n          }\n          return (\n            <NavLink key={idx} to={path || ''}>\n              {label}\n            </NavLink>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { Outlet, Link } from 'react-router-dom';\nimport { Layout, Affix } from 'uiw';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport pkg from 'uiw-admin/package.json';\nimport styles from './index.module.less';\nimport SiderMenu from '../SideMenu';\n\nconst { Header, Sider, Content } = Layout;\nexport interface ComponentsProps {\n  siderMenu?: boolean;\n}\n\nexport default function Components(props: ComponentsProps) {\n  return (\n    <Layout className={styles.layout}>\n      <Affix offsetTop={0} style={{ zIndex: 999 }}>\n        <GitHubCorners\n          size={53}\n          target=\"_blank\"\n          href=\"https://github.com/uiwjs/uiw-admin\"\n        />\n        <Header\n          className={styles.header}\n          style={{ display: 'flex', alignItems: 'center' }}\n        >\n          <svg viewBox=\"0 0 20 20\" version=\"1.1\">\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <path\n                d=\"M5.70480219,0 L10.4096044,3.41834667 L8.61252986,8.94934776 L2.79707453,8.94934776 L1,3.41834667 L5.70480219,0 Z M5.70480219,20 L1,16.5816533 L2.79707453,11.0506522 L8.61252986,11.0506522 L10.4096044,16.5816533 L5.70480219,20 Z M18.8709653,12.9678909 L13.3400514,14.7649021 L9.92167142,10.0599974 L13.3399103,5.35519519 L18.8708781,7.15237223 L18.8709653,12.9678909 Z\"\n                fill=\"#FFFFFF\"\n              />\n            </g>\n          </svg>\n          <Link className={styles.title} to=\"/\">\n            uiw admin<sup>{pkg.version}</sup>\n          </Link>\n        </Header>\n      </Affix>\n      <Layout className={styles.layoutWrap}>\n        <Sider width={220} className={styles.layoutSider}>\n          <SiderMenu style={{ width: 220, height: 'calc(100vh - 53px)' }} />\n        </Sider>\n        <Content>\n          <Outlet />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function NoMatch() {\n  return (\n    <div>\n      <h2>It looks like you're lost...</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n","import { lazy, Suspense } from 'react';\nimport { RouteObject } from 'react-router-dom';\nimport Layout from './components/BaseLayout';\nimport NoMatch from './components/NoMatch';\n\nconst Loadable = (Component: any) => (props: any) =>\n  (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </Suspense>\n  );\n\n// const Home = Loadable(lazy(() => import('./pages/home')));\nconst Example = Loadable(lazy(() => import('./pages/example')));\nconst Authorized = Loadable(lazy(() => import('./pages/authorized')));\nconst QuickStart = Loadable(lazy(() => import('./pages/quick-start')));\nconst Proxy = Loadable(lazy(() => import('./pages/proxy')));\nconst Mocker = Loadable(lazy(() => import('./pages/mocker')));\nconst BasicLayouts = Loadable(lazy(() => import('./pages/basic-layouts')));\nconst Components = Loadable(lazy(() => import('./pages/components')));\nconst Config = Loadable(lazy(() => import('./pages/config')));\nconst Models = Loadable(lazy(() => import('./pages/models')));\nconst DocumentTitle = Loadable(lazy(() => import('./pages/document-title')));\nconst LayoutTabs = Loadable(lazy(() => import('./pages/layout-tabs')));\nconst Exceptions = Loadable(lazy(() => import('./pages/exceptions')));\nconst Plugins = Loadable(lazy(() => import('./pages/plugins')));\nconst Utils = Loadable(lazy(() => import('./pages/utils')));\nconst RouterControl = Loadable(lazy(() => import('./pages/router-control')));\nconst UserLogin = Loadable(lazy(() => import('./pages/user-login')));\nconst Protable = Loadable(lazy(() => import('./pages/components/Protable')));\nconst ProDrawer = Loadable(lazy(() => import('./pages/components/ProDrawer')));\nconst ProForm = Loadable(lazy(() => import('./pages/components/ProForm')));\nconst Skeleton = Loadable(lazy(() => import('./pages/components/Skeleton')));\nconst EslintConfig = Loadable(lazy(() => import('./pages/eslint-config')));\n// eslint-config\n\nexport const routes: RouteObject[] = [\n  {\n    path: '/example',\n    element: <Example />,\n  },\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      { index: true, element: <QuickStart /> },\n      { path: '/quick-start/*', element: <QuickStart /> },\n      { path: '/mocker/*', element: <Mocker /> },\n      { path: '/proxy/*', element: <Proxy /> },\n      { path: '/authorized/*', element: <Authorized /> },\n      { path: '/basic-layouts/*', element: <BasicLayouts /> },\n      { path: '/components/*', element: <Components /> },\n      { path: '/config/*', element: <Config /> },\n      { path: '/models/*', element: <Models /> },\n      { path: '/layout-tabs/*', element: <LayoutTabs /> },\n      { path: '/document-title/*', element: <DocumentTitle /> },\n      { path: '/exceptions/*', element: <Exceptions /> },\n      { path: '/plugins/*', element: <Plugins /> },\n      { path: '/utils/*', element: <Utils /> },\n      { path: '/router-control/*', element: <RouterControl /> },\n      { path: '/user-login/*', element: <UserLogin /> },\n      { path: '/protable/*', element: <Protable /> },\n      { path: '/prodrawer/*', element: <ProDrawer /> },\n      { path: '/proform/*', element: <ProForm /> },\n      { path: '/skeleton/*', element: <Skeleton /> },\n      { path: '/eslint-config/*', element: <EslintConfig /> },\n      { path: '*', element: <NoMatch /> },\n    ],\n  },\n  { path: '*', element: <NoMatch /> },\n];\n","import ReactDOM from 'react-dom';\nimport { useRoutes, HashRouter } from 'react-router-dom';\nimport '@uiw/reset.css';\nimport { routes } from './router';\nimport './index.less';\n\nconst App = () => useRoutes(routes);\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n      if (listener) {\n        listener({ action, location: getCurrentLocation() });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport function createClientSideURL(location: Location | string): URL {\n  // window.location.origin is \"null\" (the literal string value) in Firefox\n  // under certain conditions, notably when serving from a local HTML file\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n  let base =\n    typeof window !== \"undefined\" &&\n    typeof window.location !== \"undefined\" &&\n    window.location.origin !== \"null\"\n      ? window.location.origin\n      : window.location.href;\n  let href = typeof location === \"string\" ? location : createPath(location);\n  invariant(\n    base,\n    `No window.location.(origin|href) available to create URL for href: ${href}`\n  );\n  return new URL(href, base);\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function handlePop() {\n    action = Action.Pop;\n    if (listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createClientSideURL(\n        typeof to === \"string\" ? to : createPath(to)\n      );\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type SubmissionFormMethod = \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormMethod = \"get\" | SubmissionFormMethod;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: SubmissionFormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `${string}:${infer Param}`\n    ? Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  parentPath: number[] = [],\n  allIds: Set<string> = new Set<string>()\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !allIds.has(id),\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = { ...route, id };\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        children: route.children\n          ? convertRoutesToDataRoutes(route.children, treePath, allIds)\n          : undefined,\n      };\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  path: Path,\n  params: {\n    [key in PathParam<Path>]: string;\n  } = {} as any\n): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key: PathParam<Path>) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n      const star = \"*\" as PathParam<Path>;\n\n      if (params[star] == null) {\n        // If no splat was provided, trim the trailing slash _unless_ it's\n        // the entire path\n        return str === \"/*\" ? \"/\" : \"\";\n      }\n\n      // Apply the splat\n      return `${prefix}${params[star]}`;\n    });\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * @private\n */\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeys: Set<string | number> = new Set<string | number>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscriber?: (aborted: boolean) => void = undefined;\n  data: Record<string, unknown>;\n\n  constructor(data: Record<string, unknown>) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n  }\n\n  private trackPromise(\n    key: string | number,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string | number,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn: (aborted: boolean) => void) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport function defer(data: Record<string, unknown>) {\n  return new DeferredData(data);\n}\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\nexport function isRouteErrorResponse(e: any): e is ErrorResponse {\n  return e instanceof ErrorResponse;\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  createClientSideURL,\n  invariant,\n  parsePath,\n} from \"./history\";\nimport type {\n  DataResult,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  SubmissionFormMethod,\n} from \"./utils\";\nimport {\n  DeferredData,\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): void;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  basename?: string;\n  routes: AgnosticRouteObject[];\n  history: History;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  formMethod?: FormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Tuple of [key, href, DataRouteMatch, DataRouteMatch[]] for a revalidating\n * fetcher.load()\n */\ntype RevalidatingFetcher = [\n  string,\n  string,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteMatch[]\n];\n\n/**\n * Tuple of [href, DataRouteMatch, DataRouteMatch[]] for an active\n * fetcher.load()\n */\ntype FetchLoadMatch = [\n  string,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteMatch[]\n];\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validActionMethodsArr: SubmissionFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validActionMethods = new Set<SubmissionFormMethod>(validActionMethodsArr);\n\nconst validRequestMethodsArr: FormMethod[] = [\"get\", ...validActionMethodsArr];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes);\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  let initialScrollRestored = false;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    !initialMatches.some((m) => m.route.loader) || init.hydrationData != null;\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location }) =>\n        startNavigation(historyAction, location)\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - The location we've finished loading is different from the submission\n    //   location, indicating we redirected from the action (avoids false\n    //   positives for loading/submissionRedirect when actionData returned\n    //   on a prior submission)\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      state.navigation.state === \"loading\" &&\n      state.navigation.formAction?.split(\"?\")[0] === location.pathname;\n\n    // Always preserve any existing loaderData from re-used routes\n    let newLoaderData = newState.loaderData\n      ? {\n          loaderData: mergeLoaderData(\n            state.loaderData,\n            newState.loaderData,\n            newState.matches || []\n          ),\n        }\n      : {};\n\n    updateState({\n      // Clear existing actionData on any completed navigation beyond the original\n      // action, unless we're currently finishing the loading/actionReload state.\n      // Do this prior to spreading in newState in case we got back to back actions\n      ...(isActionReload ? {} : { actionData: null }),\n      ...newState,\n      ...newLoaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData\n        ? false\n        : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset,\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(to, opts);\n\n    let location = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    location = {\n      ...location,\n      ...init.history.encodeLocation(location),\n    };\n\n    let historyAction =\n      (opts && opts.replace) === true || submission != null\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (opts && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        router.basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(\n        state,\n        result,\n        opts && opts.replace === true\n      );\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      state,\n      matches,\n      submission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      pendingActionData,\n      pendingError,\n      fetchLoadMatches\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null,\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(([key]) => {\n        let fetcher = state.fetchers.get(key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null,\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(([key]) =>\n      fetchControllers.set(key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach(([key]) => fetchControllers.delete(key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, replace);\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: href })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, [path, match, matches]);\n    handleFetcherLoader(key, routeId, path, match, matches);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      router.basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult);\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      nextLocation,\n      abortController.signal\n    );\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(dataRoutes, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      { [match.route.id]: actionResult.data },\n      undefined, // No need to send through errors since we short circuit above\n      fetchLoadMatches\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter(([staleKey]) => staleKey !== key)\n      .forEach(([staleKey]) => {\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(([staleKey]) =>\n      fetchControllers.delete(staleKey)\n    );\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[]\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: existingFetcher && existingFetcher.data,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      router.basename\n    );\n\n    // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    replace?: boolean\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location);\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    // Check if this an external redirect that goes to a new origin\n    if (typeof window?.location !== \"undefined\") {\n      let newOrigin = createClientSideURL(redirect.location).origin;\n      if (window.location.origin !== newOrigin) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      formMethod &&\n      isSubmissionMethod(formMethod) &&\n      formEncType &&\n      formData\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          formMethod,\n          formAction: redirect.location,\n          formEncType,\n          formData,\n        },\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: formMethod || undefined,\n          formAction: formAction || undefined,\n          formEncType: formEncType || undefined,\n          formData: formData || undefined,\n        },\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\"loader\", request, match, matches, router.basename)\n      ),\n      ...fetchersToLoad.map(([, href, match, fetchMatches]) =>\n        callLoaderOrAction(\n          \"loader\",\n          createClientSideRequest(href, request.signal),\n          match,\n          fetchMatches,\n          router.basename\n        )\n      ),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map(([, , match]) => match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport function unstable_createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: {\n    basename?: string;\n  }\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to unstable_createStaticHandler\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n  let basename = (opts ? opts.basename : null) || \"/\";\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    let routeData = [result.actionData, result.loaderData].find((v) => v);\n    return Object.values(routeData || {})[0];\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isSubmissionMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, { signal: request.signal });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !routeMatch?.route.loader) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter((m) => m.route.loader);\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n    results.forEach((result) => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    });\n\n    // Process and commit output from loaders\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError\n    );\n\n    return {\n      ...context,\n      matches,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  if (opts.formMethod && isSubmissionMethod(opts.formMethod)) {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: stripHashFromPath(path),\n        formEncType:\n          (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n        formData: opts.formData,\n      },\n    };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData);\n    // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n    if (\n      isFetcher &&\n      parsedPath.search &&\n      hasNakedIndexQuery(parsedPath.search)\n    ) {\n      searchParams.append(\"index\", \"\");\n    }\n    parsedPath.search = `?${searchParams}`;\n  } catch (e) {\n    return {\n      path,\n      error: getInternalRouterError(400),\n    };\n  }\n\n  return { path: createPath(parsedPath) };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  pendingActionData?: RouteData,\n  pendingError?: RouteData,\n  fetchLoadMatches?: Map<string, FetchLoadMatch>\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : null;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter(\n    (match, index) =>\n      match.route.loader != null &&\n      (isNewLoader(state.loaderData, state.matches[index], match) ||\n        // If this route had a pending deferred cancelled it must be revalidated\n        cancelledDeferredRoutes.some((id) => id === match.route.id) ||\n        shouldRevalidateLoader(\n          state.location,\n          state.matches[index],\n          submission,\n          location,\n          match,\n          isRevalidationRequired,\n          actionResult\n        ))\n  );\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches &&\n    fetchLoadMatches.forEach(([href, match, fetchMatches], key) => {\n      // This fetcher was cancelled from a prior action submission - force reload\n      if (cancelledFetcherLoads.includes(key)) {\n        revalidatingFetchers.push([key, href, match, fetchMatches]);\n      } else if (isRevalidationRequired) {\n        let shouldRevalidate = shouldRevalidateLoader(\n          href,\n          match,\n          submission,\n          href,\n          match,\n          isRevalidationRequired,\n          actionResult\n        );\n        if (shouldRevalidate) {\n          revalidatingFetchers.push([key, href, match, fetchMatches]);\n        }\n      }\n    });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  currentLocation: string | Location,\n  currentMatch: AgnosticDataRouteMatch,\n  submission: Submission | undefined,\n  location: string | Location,\n  match: AgnosticDataRouteMatch,\n  isRevalidationRequired: boolean,\n  actionResult: DataResult | undefined\n) {\n  let currentUrl = createClientSideURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createClientSideURL(location);\n  let nextParams = match.params;\n\n  // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n  let defaultShouldRevalidate =\n    isNewRouteInstance(currentMatch, match) ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search ||\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate,\n    });\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  basename = \"/\",\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n\n  // Setup a promise we can race against so that abort signals short circuit\n  let reject: () => void;\n  let abortPromise = new Promise((_, r) => (reject = r));\n  let onReject = () => reject();\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant<Function>(\n      handler,\n      `Could not find the ${type} to run on the \"${match.route.id}\" route`\n    );\n\n    result = await Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      let isAbsolute =\n        /^[a-z+]+:\\/\\//i.test(location) || location.startsWith(\"//\");\n\n      // Support relative routing in internal redirects\n      if (!isAbsolute) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(\n          (match) => match.pathnameBase\n        );\n        let resolvedLocation = resolveTo(\n          location,\n          routePathnames,\n          new URL(request.url).pathname\n        );\n        invariant(\n          createPath(resolvedLocation),\n          `Unable to resolve redirect location: ${location}`\n        );\n\n        // Prepend the basename to the redirect location if we have one\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname =\n            path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    if (contentType && contentType.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (result instanceof DeferredData) {\n    return { type: ResultType.deferred, deferredData: result };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = createClientSideURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission) {\n    let { formMethod, formEncType, formData } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(\n      typeof value === \"string\",\n      'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' +\n        'please use \"multipart/form-data\" instead.'\n    );\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds?: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error,\n      });\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds && activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data;\n      // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data;\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key, , match] = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[]\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  matches.forEach((match) => {\n    let id = match.route.id;\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else {\n      errorMessage = \"Cannot submit binary form data using GET\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod {\n  return validRequestMethods.has(method as FormMethod);\n}\n\nfunction isSubmissionMethod(method: string): method is SubmissionFormMethod {\n  return validActionMethods.has(method as SubmissionFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  joinPaths,\n  ErrorResponse,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(resolvedAction, { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n","import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\n// Contexts for data routers\nexport const DataStaticRouterContext =\n  React.createContext<StaticHandlerContext | null>(null);\nif (__DEV__) {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n  DataStaticRouterContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RenderedRoute\n        match={match}\n        routeContext={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      >\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `useLoaderData can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData[thisRoute.route.id];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  return (\n    <DataRouterContext.Provider\n      value={{\n        router,\n        navigator,\n        static: false,\n        // Do we need this?\n        basename,\n      }}\n    >\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          basename={router.basename}\n          location={router.state.location}\n          navigationType={router.state.historyAction}\n          navigator={navigator}\n        >\n          {router.state.initialized ? <Routes /> : fallbackElement}\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactElement;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n  return <>{children}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + ({\"7474\":\"codemirror-vendor\",\"8269\":\"refractor-vendor\",\"9167\":\"babel-standalone-vendor\",\"9438\":\"parse5-vendor\"}[chunkId] || chunkId) + \".\" + {\"240\":\"5c85cc71\",\"521\":\"f42513fb\",\"572\":\"b48ae8ce\",\"665\":\"02e41885\",\"672\":\"ce384f72\",\"1094\":\"0e1a3ea6\",\"1227\":\"adda8bbe\",\"1440\":\"91116eb5\",\"1501\":\"46e7f73b\",\"1523\":\"3b751e68\",\"1826\":\"6ae362e4\",\"2138\":\"a4edd422\",\"2322\":\"66e2e88c\",\"2490\":\"8953cb11\",\"3262\":\"1930a465\",\"3299\":\"bfb2199f\",\"3719\":\"1c561907\",\"3991\":\"b00ff9f9\",\"4535\":\"72a41886\",\"4629\":\"746f7c4e\",\"4737\":\"d25e9130\",\"4771\":\"d570ec02\",\"4902\":\"c0223b2a\",\"5328\":\"b5ed278b\",\"5565\":\"d02340aa\",\"5929\":\"57df1f61\",\"6304\":\"65e2d962\",\"6790\":\"3f92c613\",\"7154\":\"3ab32656\",\"7165\":\"ee40cfdb\",\"7333\":\"195af35a\",\"7334\":\"90b808d4\",\"7474\":\"24e2806f\",\"7514\":\"69d9b10e\",\"7704\":\"dd4387d8\",\"7868\":\"bcf72c78\",\"7892\":\"a3d860dc\",\"8003\":\"d0b56c1a\",\"8031\":\"bc6a816e\",\"8095\":\"64515fcd\",\"8124\":\"961bbbe5\",\"8269\":\"a861ac04\",\"8570\":\"4fe544d8\",\"8634\":\"a3cd9e42\",\"9018\":\"d4b9b2b1\",\"9167\":\"05da5766\",\"9438\":\"aae1d1a3\",\"9476\":\"d461cf90\",\"9688\":\"5019aa20\",\"9818\":\"b4bf9ea3\",\"9909\":\"27c46d82\",\"9963\":\"a818790d\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/css/\" + chunkId + \".\" + {\"240\":\"2d434a68\",\"521\":\"2d434a68\",\"665\":\"2d434a68\",\"1094\":\"d0d065a5\",\"1227\":\"d0d065a5\",\"1501\":\"2d434a68\",\"3299\":\"2d434a68\",\"3991\":\"2d434a68\",\"4629\":\"d0d065a5\",\"4737\":\"52da6bc1\",\"4771\":\"c5c21010\",\"4902\":\"2d434a68\",\"5929\":\"2d434a68\",\"7154\":\"89b14862\",\"7334\":\"2d434a68\",\"7704\":\"2d434a68\",\"7868\":\"d0d065a5\",\"7892\":\"2d434a68\",\"8095\":\"2b7ca164\",\"9018\":\"2d434a68\",\"9963\":\"2d434a68\"}[chunkId] + \".chunk.css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"website:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"240\":1,\"521\":1,\"665\":1,\"1094\":1,\"1227\":1,\"1501\":1,\"3299\":1,\"3991\":1,\"4629\":1,\"4737\":1,\"4771\":1,\"4902\":1,\"5929\":1,\"7154\":1,\"7334\":1,\"7704\":1,\"7868\":1,\"7892\":1,\"8095\":1,\"9018\":1,\"9963\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebsite\"] = self[\"webpackChunkwebsite\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [4382,8264], function() { return __webpack_require__(89199); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SideMenu","props","_jsx","_objectSpread","className","styles","children","menus","_ref","idx","label","path","divider","otherItem","_objectWithoutProperties","_excluded","test","DomainVerify","href","_jsxs","target","viewBox","width","d","NavLink","to","Header","Layout","Sider","Content","Components","Affix","offsetTop","style","zIndex","GitHubCorners","size","display","alignItems","version","stroke","strokeWidth","fill","fillRule","Link","pkg","SiderMenu","height","Outlet","NoMatch","Loadable","Component","Suspense","fallback","Example","lazy","Authorized","QuickStart","Proxy","Mocker","BasicLayouts","Config","Models","DocumentTitle","LayoutTabs","Exceptions","Plugins","Utils","RouterControl","UserLogin","Protable","ProDrawer","ProForm","Skeleton","EslintConfig","routes","element","index","App","useRoutes","ReactDOM","HashRouter","document","getElementById","Action","ResultType","PopStateEventType","createHashHistory","options","getUrlBasedHistory","window","globalHistory","_parsePath","parsePath","location","hash","substr","_parsePath$pathname","pathname","_parsePath$search","search","_parsePath$hash","createLocation","state","usr","key","base","querySelector","getAttribute","url","hashIndex","indexOf","slice","createPath","warning$1","charAt","JSON","stringify","invariant","value","message","Error","cond","console","warn","e","getHistoryState","current","_extends","Math","random","toString","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","createClientSideURL","origin","URL","getLocation","createHref","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","v5Compat","history","action","Pop","listener","handlePop","listen","fn","addEventListener","removeEventListener","encodeLocation","push","Push","historyState","pushState","error","assign","replace","Replace","replaceState","go","n","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","siblings","length","every","i","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","forEach","route","relativePath","caseSensitive","startsWith","joinPaths","concat","computeScore","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","params","pathnameBase","normalizePathname","pattern","_compilePath","warning","endsWith","paramNames","regexpSource","_","paramName","matcher","RegExp","undefined","compilePath","_compilePath2","_slicedToArray","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","includes","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","join","fromPathname","_ref11","_ref11$search","_ref11$hash","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","_wrapNativeSuper","ErrorResponse","status","statusText","data","internal","this","isRouteErrorResponse","validActionMethodsArr","validRequestMethodsArr","Set","createElement","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","module","exports","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","letter","keys","err","shouldUseNative","source","symbols","val","TypeError","toObject","call","_ref2","historyRef","React","_React$useState3","_React$useState4","setState","Router","navigationType","navigator","_ref4","ref","onClick","relative","reloadDocument","preventScrollReset","rest","_objectWithoutPropertiesLoose","useHref","internalOnClick","_temp","_ref8","replaceProp","navigate","useNavigate","useLocation","useResolvedPath","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","_ref5","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","_ref5$className","classNameProp","_ref5$end","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","UNSAFE_NavigationContext","nextLocationPathname","navigation","isActive","isPending","ariaCurrent","Boolean","DataRouterHook","DataRouterStateHook","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","nextValue","DataStaticRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useInRouterContext","_React$useContext","_useResolvedPath","joinedPathname","_React$useContext2","routePathnamesJson","UNSAFE_getPathContributingMatches","activeRef","parse","OutletContext","_temp2","dataRouterStateContext","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","Provider","DefaultErrorElement","_state$errors","useDataRouterState","UseRouteError","thisRoute","id","errors","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","fontStyle","RenderErrorBoundary","_React$Component","_this","errorInfo","component","RenderedRoute","routeContext","dataStaticRouterContext","errorElement","_deepestRenderedBoundaryId","dataRouterState","errorIndex","findIndex","m","min","reduceRight","getChildren","hookName","AwaitRenderStatus","Navigate","_ref3","context","useOutlet","_ref4$basename","basenameProp","_ref4$children","locationProp","_ref4$navigationType","_ref4$static","static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","trailingPathname","neverSettledPromise","Promise","_inheritsLoose","subClass","superClass","create","constructor","setPrototypeOf","replaceClassName","origClass","classToRemove","forceReflow","node","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","getDerivedStateFromProps","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","nodeRef","performEnter","performExit","_this2","appearing","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","handler","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","setTimeout","render","_this$props","childProps","TransitionGroupContext","noop","contextType","propTypes","defaultProps","removeClass","classes","c","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","hasClass","_addClass","_this$appliedClasses$","done","f","g","h","k","performance","now","l","unstable_now","p","Date","q","MessageChannel","t","u","w","clearTimeout","unstable_shouldYield","unstable_forceFrameRate","z","cancelAnimationFrame","requestAnimationFrame","A","B","C","D","E","floor","F","G","port2","port1","onmessage","postMessage","H","I","J","K","v","r","sortIndex","L","M","N","O","P","Q","R","S","T","startTime","expirationTime","U","V","priorityLevel","W","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_wrapCallback","_arrayLikeToArray","arr","len","arr2","_arrayWithHoles","isArray","_assertThisInitialized","self","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","then","_asyncToGenerator","instance","Constructor","_construct","Parent","Class","Reflect","construct","bind","Function","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","_e","normalCompletion","didErr","step","next","_e2","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","assertThisInitialized","_defineProperty","obj","_getPrototypeOf","__proto__","_isNativeReflectConstruct","sham","valueOf","_iterableToArray","iter","_nonIterableRest","ownKeys","object","enumerableOnly","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","excluded","sourceSymbolKeys","sourceKeys","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","arrayWithHoles","_i","_s","_x","_r","_arr","_n","_d","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","arrayLikeToArray","iterableToArray","_toPropertyKey","input","hint","prim","toPrimitive","res","Number","_typeof","_unsupportedIterableToArray","minLen","_cache","Map","has","get","set","Wrapper","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","splice","getter","__esModule","leafPrototypes","mode","ns","def","definition","chunkId","all","promises","miniCssF","globalThis","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","charset","nc","src","onScriptComplete","onerror","onload","doneFns","parentNode","removeChild","head","appendChild","loadStylesheet","fullhref","existingLinkTags","dataHref","tag","rel","existingStyleTags","findStylesheet","oldTag","linkTag","errorType","realHref","code","request","insertBefore","nextSibling","createStylesheet","installedCssChunks","miniCss","installedChunks","installedChunkData","promise","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}