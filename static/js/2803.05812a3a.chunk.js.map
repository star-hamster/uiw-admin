{"version":3,"file":"static/js/2803.05812a3a.chunk.js","mappings":"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","sources":["../../../packages/basic-layouts/src/utils.ts","../../../packages/basic-layouts/src/hook.ts","../../../packages/basic-layouts/src/LogoHeader/index.tsx","../../../packages/basic-layouts/src/Menu/index.tsx","../../../packages/basic-layouts/src/Breadcrumb/index.tsx","../../../packages/basic-layouts/src/Content/index.tsx","../../../packages/basic-layouts/src/HeaderRightMenu/index.tsx","../../../packages/basic-layouts/src/FullScreen/index.tsx","../../../packages/basic-layouts/src/useLayouts.tsx","../../../packages/basic-layouts/src/index.tsx","../../../packages/layout-tabs/src/utils.ts","../../../packages/layout-tabs/src/index.tsx",".uiw/rematch.ts","../../../packages/models/src/index.ts","../../../packages/router-control/src/index.tsx"],"sourcesContent":["import { RoutersProps } from '@uiw-admin/router-control';\nimport { matchPath } from '@uiw-admin/router-control';\n\n/** 菜单转化 去除 dom  */\nexport function getMenu(data: RoutersProps[] = []) {\n  let treeList: RoutersProps[] = [];\n  data.forEach((item) => {\n    let obj = { ...item };\n    if (item.routes) {\n      const child = getMenu(obj.routes);\n      obj.routes = child;\n    }\n    if (item.path && item.path !== '*') {\n      const { element, component, children, path, ...rest } = obj;\n      treeList.push({ ...rest, path, key: path });\n    }\n  });\n  return treeList;\n}\n\n/** 把数组扁平化 用于 选项卡渲染 */\nexport const getRoutesList = (\n  data: RoutersProps[] = [],\n  list: RoutersProps[] = [],\n) => {\n  data.forEach((item) => {\n    if (item.routes) {\n      getRoutesList(item.routes, list);\n      if (item.side) {\n        list.push(item);\n      }\n    } else {\n      list.push(item);\n    }\n  });\n  return list;\n};\n\n/** 把数组扁平化 用于 选项卡渲染 */\nexport const getMenuList = (\n  data: RoutersProps[] = [],\n  list: RoutersProps[] = [],\n) => {\n  data.forEach((item) => {\n    const { routes, ...rest } = item;\n    if (Array.isArray(routes)) {\n      getMenuList(routes, list);\n    }\n    list.push(rest);\n  });\n  return list;\n};\n\n/** 菜单 转换成 渲染面包屑导航  */\nexport class BreadcrumbMap {\n  breadcrumb: Map<string, RoutersProps[]> = new Map([]);\n  flat: RoutersProps[] = [];\n  constructor(routeData: RoutersProps[]) {\n    this.init(routeData);\n  }\n  private init(route: RoutersProps[], parent?: RoutersProps[]) {\n    route.forEach((item) => {\n      let par = (parent || []).concat([item]);\n      /** 始终把自己加载最后 */\n      if (item.routes) {\n        this.init(item.routes, par);\n      }\n      if (item.path && item.path !== '*') {\n        this.breadcrumb.set(item.path, par);\n      }\n      this.flat.push(item);\n    });\n  }\n}\n\n/**\n * 1. 根据当前路由获取对应的路由信息\n * 2. 通过路由信息判断是否是side===true,是则只在侧边展示当前路由下的所有子集路由，如果不是则展示所有或其父级是 side===true的路由\n * ***/\n\n/**\n * 1. 拆分路由，把 side===true 的放入一个存储里面\n * 2. 子集对应的第一个  side===true 存储到一个位置里面\n * ***/\nexport const getSideMenusMap = (route: RoutersProps[]) => {\n  /** 对应的下级路由 **/\n  const sideMenus = new Map<string, RoutersProps[]>([]);\n  /** 子集对应的所有 side===true 的路由地址 **/\n  const flat = new Map<string, string>([]);\n  const flatSide = new Map<string, string>([]);\n\n  const loop = (route: RoutersProps[], parent?: string) => {\n    route.forEach((item) => {\n      const { path, side, routes } = item;\n      if (Array.isArray(routes)) {\n        loop(routes, side ? path : parent);\n      }\n      if (side && path && routes) {\n        sideMenus.set(path, routes);\n      }\n      if (path) {\n        if (side) {\n          flat.set(path, path);\n        } else if (parent) {\n          flat.set(path, parent);\n        }\n        flatSide.set(path, parent || '/');\n      }\n    });\n  };\n  loop(route);\n  return {\n    sideMenus,\n    flat,\n    flatSide,\n  };\n};\n\nexport const getCurrentPath = (routes: RoutersProps[], path: string) => {\n  // matchPath;\n  // 1. 选判断直接相等的\n  const isOne = routes.find((item) => item.path === path);\n  if (isOne) {\n    return isOne;\n  }\n  // 匹配路由\n  const isTwo = routes.find(\n    (item) =>\n      item.path && item.path !== '*' && matchPath({ path: item.path }, path),\n  );\n  if (isTwo) {\n    return isTwo;\n  }\n  return undefined;\n};\n\nexport const getDiffIndex = (routes: RoutersProps[], pathname: string) => {\n  return routes.find((item) => item.index);\n};\n","import React from 'react';\nimport { RoutersProps, useLocation } from '@uiw-admin/router-control';\n\nimport { getSideMenusMap, getMenuList, getCurrentPath } from './utils';\nexport const MainContext = React.createContext<{\n  headerLayout?: 'top' | 'default';\n  headerBackground?: string;\n  headerFontColor?: string;\n}>({\n  headerLayout: 'top',\n  headerBackground: '#fff',\n  headerFontColor: '#000',\n});\nexport const useMain = () => React.useContext(MainContext);\n\nexport const useSideMenus = (props: { routeData: RoutersProps[] }) => {\n  const { routeData } = props;\n  const location = useLocation();\n\n  const sideMenusMap = React.useMemo(() => {\n    return getSideMenusMap(routeData);\n  }, [JSON.stringify(routeData)]);\n\n  const listMenus = React.useMemo(\n    () => getMenuList(routeData),\n    [JSON.stringify(routeData)],\n  );\n\n  // 获取当前路由匹配信息\n  const currentPath = getCurrentPath(listMenus, location.pathname);\n  const hiddenMainMenu = currentPath?.hiddenMainMenu;\n  // 获取子路由信息\n  const ChildMenus = React.useMemo(() => {\n    const parentPath = sideMenusMap.flat.get(currentPath?.path || '');\n    if (parentPath && parentPath !== '/') {\n      return {\n        routeData: sideMenusMap.sideMenus.get(parentPath) || [],\n        parentPath,\n      };\n    }\n    return {\n      routeData,\n      parentPath,\n    };\n  }, [JSON.stringify({ currentPath, routeData, sideMenusMap })]);\n\n  const sideItemIndex = React.useMemo(() => {\n    if (currentPath && currentPath.side) {\n      const item = ChildMenus.routeData.find((item) => item.index);\n      if (item) {\n        return item;\n      }\n    }\n    return undefined;\n  }, [location.pathname, JSON.stringify(currentPath)]);\n\n  return {\n    sideItemIndex,\n    ChildMenus,\n    sideMenusMap,\n    hiddenMainMenu,\n  };\n};\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMain } from './../hook';\n\ninterface LogoHeaderProps {\n  collapsed?: boolean;\n  projectName?: string;\n  logo?: string;\n  onLogoClick?: (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => void;\n}\n\nexport default (props: LogoHeaderProps = {}) => {\n  const { headerFontColor, headerLayout } = useMain();\n  const logo = useMemo(\n    () =>\n      props.logo && <img src={props.logo} alt={props.projectName || 'logo'} />,\n    [props.logo],\n  );\n  const name = useMemo(\n    () =>\n      props.projectName && (\n        <h1 style={headerLayout === 'top' ? { color: headerFontColor } : {}}>\n          {props.projectName}\n        </h1>\n      ),\n    [props.projectName, headerFontColor],\n  );\n  const linkProps = useMemo(() => {\n    const { onLogoClick } = props;\n    return onLogoClick && typeof onLogoClick === 'function'\n      ? {\n          onClick: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n            onLogoClick(event);\n            event.stopPropagation();\n            event.preventDefault();\n          },\n        }\n      : {};\n  }, [props.onLogoClick]);\n\n  return useMemo(\n    () => (\n      <div\n        className={\n          headerLayout === 'default'\n            ? 'uiw-admin-global-title'\n            : 'uiw-admin-global-title-top'\n        }\n      >\n        <Link\n          to=\"/\"\n          {...linkProps}\n          style={props.collapsed ? { justifyContent: 'center' } : {}}\n        >\n          {logo}\n          {!props.collapsed && name}\n        </Link>\n      </div>\n    ),\n    [props.collapsed],\n  );\n};\n","import React, { Fragment } from 'react';\nimport classnames from 'classnames';\nimport Menu, { MenuItemProps, SubMenuProps } from '@uiw/react-menu';\nimport {\n  DefaultProps,\n  RoutesBaseProps,\n  Routers,\n} from '@uiw-admin/router-control';\nimport { useLocation, useNavigate, Location } from 'react-router-dom';\nimport { matchPath, NavigateFunction } from 'react-router';\nimport { getRoutesList } from './../utils';\nimport { SearchSelect, SearchSelectOptionData } from 'uiw';\n\nimport pinyin from 'pinyin';\n\ntype ValueType = string | number;\n\ntype Options = {\n  location: Location;\n};\n\ninterface MenuProps {\n  collapsed?: boolean;\n  allRoutes?: DefaultProps['routes'];\n  routes?: DefaultProps['routes'];\n}\n\nexport const onNavigate = (\n  item: Omit<Routers, 'navigate'> & { navigate: Function | string },\n  navigate: NavigateFunction,\n  options: Options,\n) => {\n  if (item && Reflect.has(item, 'navigate') && item.navigate) {\n    if (typeof item.navigate === 'function') {\n      item.navigate(navigate, options);\n      return;\n    }\n    const Fun = new Function(`return ${item.navigate}`)();\n    if (typeof Fun === 'function') {\n      Fun(navigate, options);\n    }\n    return;\n  }\n  return true;\n};\n\nfunction renderMenuItem(\n  routes: MenuProps['routes'] = [],\n  collapsed: boolean,\n  pathName: string,\n  navigate: NavigateFunction,\n  options: Options,\n  level?: boolean,\n) {\n  return routes.map((item: any, index: number) => {\n    const props = {\n      key: index,\n      icon: item.icon,\n    } as Omit<MenuItemProps<any> & SubMenuProps<any>, 'ref'>;\n    let isAuth = true;\n    if (Reflect.has(item, 'isAuth')) {\n      isAuth = Reflect.get(item, 'isAuth');\n    }\n    if (\n      (item.index && item.redirect) ||\n      item.hideInMenu ||\n      item.hiddenMainMenu ||\n      !isAuth ||\n      item.path === '*'\n    ) {\n      return <Fragment key={index} />;\n    }\n    if (level) {\n      props.className = classnames({\n        'uiw-admin-global-sider-menu-collapsed': collapsed,\n      });\n    }\n    if (matchPath({ path: item.path }, pathName)) {\n      props.active = true;\n    }\n\n    if (item.routes && !item.side) {\n      if (collapsed) {\n        props.overlayProps = {\n          isOutside: true,\n          usePortal: true,\n        };\n      }\n      if (\n        item.routes.find((route: RoutesBaseProps) => route.path === pathName)\n      ) {\n        props.overlayProps = {\n          isOpen: true,\n        };\n      }\n\n      return (\n        <Menu.SubMenu {...props} text={item.name || '-'} collapse={collapsed}>\n          {renderMenuItem(item.routes, collapsed, pathName, navigate, options)}\n        </Menu.SubMenu>\n      );\n    }\n    return (\n      <Menu.Item\n        {...props}\n        onClick={() => {\n          const result = onNavigate(item, navigate, options);\n          if (!result) {\n            return;\n          }\n          navigate(item.path, { replace: true });\n        }}\n        // to={item.path}\n        text={item.name || '-'}\n      />\n    );\n  });\n}\n\nconst SearchMenus = (props: MenuProps) => {\n  const { routes = [] } = props || {};\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const listRouters = React.useMemo(() => {\n    return getRoutesList(routes);\n  }, [routes]);\n\n  const listMenus = React.useMemo(() => {\n    return listRouters\n      .filter((item) => {\n        return (\n          item &&\n          'name' in item &&\n          !item.hideInMenu &&\n          !item.hiddenMainMenu &&\n          !item.index &&\n          !item.redirect &&\n          item.path !== '*'\n        );\n      })\n      .map((item) => {\n        let pyInitials = pinyin(item.name || '', {\n          style: pinyin.STYLE_FIRST_LETTER,\n        });\n\n        let py = pinyin(item.name || '', {\n          style: pinyin.STYLE_NORMAL,\n        });\n\n        let pyInitialsValue = '';\n        let pyValue = '';\n\n        if (Array.isArray(py)) {\n          pyValue = py.join('');\n        }\n\n        if (Array.isArray(pyInitials)) {\n          pyInitialsValue = pyInitials.join('');\n        }\n        return {\n          label: item.name,\n          value: item.path,\n          py: pyValue,\n          pyInitials: pyInitialsValue,\n        } as SearchSelectOptionData;\n      });\n  }, [listRouters]);\n\n  const [list, setList] = React.useState<SearchSelectOptionData[]>(listMenus);\n\n  const onChange = (\n    event: SearchSelectOptionData[] | ValueType | ValueType[],\n  ) => {\n    if (Array.isArray(event)) {\n      const [obj] = event;\n      if (obj && typeof obj === 'object' && obj.value) {\n        const current: any = listRouters.find(\n          (item) => item.path === obj.value,\n        );\n        const result = onNavigate(current, navigate, { location });\n        if (!result) {\n          return;\n        }\n        navigate(current.path, { replace: true });\n      }\n    }\n  };\n\n  const handleSearch = (value: string) => {\n    if (value) {\n      const li = listMenus.filter((item) => {\n        const Reg = new RegExp(`${value}`);\n        if (\n          Reg.test(item.label) ||\n          Reg.test(item.py) ||\n          Reg.test(item.pyInitials)\n        ) {\n          return true;\n        }\n        return false;\n      });\n      setList(li);\n    } else {\n      setList(listMenus);\n    }\n  };\n\n  return (\n    <div style={{ marginBottom: 10, padding: '0px 10px' }}>\n      <SearchSelect\n        placeholder=\"请输入\"\n        mode=\"single\"\n        labelInValue\n        showSearch={true}\n        option={list}\n        onSearch={handleSearch}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\nexport default (props: MenuProps = {}) => {\n  const { routes = [], collapsed, allRoutes } = props;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const pathName = location.pathname;\n\n  // @ts-ignore\n  const searchMenu =\n    (SEARCH_MENU && collapsed) ||\n    (SEARCH_MENU ? <SearchMenus routes={allRoutes} /> : <></>);\n  return (\n    <React.Fragment>\n      {searchMenu}\n      <Menu\n        theme=\"dark\"\n        inlineCollapsed={!!collapsed}\n        style={{ padding: '0 12px' }}\n      >\n        {renderMenuItem(\n          routes,\n          !!collapsed,\n          pathName,\n          navigate,\n          { location },\n          true,\n        )}\n      </Menu>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Breadcrumb } from 'uiw';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { BreadcrumbMap } from './../utils';\nimport { matchPath } from 'react-router';\nimport { onNavigate } from '../Menu';\nimport { RoutersProps } from '@uiw-admin/router-control';\n\nimport './index.css';\ninterface BreadProps {\n  routeMap: BreadcrumbMap;\n  sideMenusMap: {\n    sideMenus: Map<string, RoutersProps[]>;\n    flat: Map<string, string>;\n    flatSide: Map<string, string>;\n  };\n}\nconst Bread = (props: BreadProps) => {\n  const { routeMap, sideMenusMap } = props;\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const domList = React.useMemo(() => {\n    const result = routeMap.breadcrumb.get(location.pathname);\n    if (!result) {\n      let paths;\n      routeMap.breadcrumb.forEach((_, key) => {\n        if (matchPath(key, location.pathname)) {\n          paths = key;\n        }\n      });\n      if (paths) {\n        return routeMap.breadcrumb.get(paths) || [];\n      }\n      return [];\n    }\n    return result;\n  }, [location.pathname]);\n  return (\n    <Breadcrumb className=\"uiw-admin-breadcrumb\">\n      {domList?.map((item, index) => {\n        return (\n          <Breadcrumb.Item\n            onClick={() => {\n              // if(index===(domList.length-1)){\n              // }\n              // 进入子集当前菜单不显示 点击当前菜单不显示\n              if (item.side && item.path) {\n                const parentPath = sideMenusMap.flatSide.get(item.path);\n                if (parentPath) {\n                  const result = onNavigate(item as any, navigate, {\n                    location,\n                  });\n                  if (!result) {\n                    return;\n                  }\n                  navigate(parentPath, { replace: true });\n                }\n                // 存在子集菜单，点击父级面包屑跳转到第一个子集菜单\n              } else if (item.path) {\n                if (item && item?.routes && item?.routes?.length > 0) {\n                  const firstChildPath = item.routes[0].path;\n                  !!firstChildPath &&\n                    navigate(firstChildPath, { replace: true });\n                }\n              }\n            }}\n            key={index}\n          >\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n\nexport default Bread;\n","import React from 'react';\nimport {\n  RoutersProps,\n  useLocation,\n  useNavigate,\n  Navigate,\n} from '@uiw-admin/router-control';\nimport { onNavigate } from '../Menu';\n\ninterface ContentProps {\n  children: React.ReactNode;\n}\nexport default (props: ContentProps) => {\n  return (\n    <div style={{ height: '100%', overflow: 'auto' }}>{props.children}</div>\n  );\n};\nexport interface WarpBodyProps {\n  children: React.ReactNode;\n  sideItemIndex: undefined | RoutersProps;\n}\nexport const WarpBody = (props: WarpBodyProps) => {\n  const { sideItemIndex } = props;\n  const location = useLocation();\n  const navigate = useNavigate();\n  if (\n    sideItemIndex &&\n    sideItemIndex.index &&\n    sideItemIndex.path &&\n    sideItemIndex.path !== '*' &&\n    sideItemIndex.path !== '/'\n  ) {\n    if (sideItemIndex.navigate) {\n      const result = onNavigate(sideItemIndex as any, navigate, { location });\n      if (!result) {\n        return <React.Fragment />;\n      }\n    }\n    return (\n      <React.Fragment>\n        <Navigate to={sideItemIndex.path} replace />\n      </React.Fragment>\n    );\n  }\n  return <React.Fragment>{props.children}</React.Fragment>;\n};\n","import React, { useMemo } from 'react';\nimport { Menu, Avatar, Popover } from 'uiw';\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\nimport { UseLayoutsProps } from '../useLayouts';\nimport './index.css';\n\nexport interface HeaderMenuItemsProps {\n  title: React.ReactNode;\n  icon: JSX.Element | string | false | null;\n  onClick?: () => void;\n  divider?: boolean;\n  render?: React.ReactNode;\n}\nexport interface HeaderRightProps {\n  // 退出登录\n  onLogout?: (navigate: NavigateFunction) => void;\n\n  /**\n   * 菜单\n   */\n  menus?: Array<HeaderMenuItemsProps>;\n  /**\n   * avatar 头像\n   * userName 用户名\n   * menuLeft 菜单左侧\n   */\n  profile?: {\n    avatar?: string;\n    userName?: string;\n    menuLeft?: React.ReactElement;\n  };\n  // 重新加载权限\n  onReloadAuth: () => void;\n  layouts?: UseLayoutsProps;\n  // 隐藏刷新权限按钮\n  hideReloadButton?: boolean;\n  // 隐藏退出登录按钮\n  hideLogoutButton?: boolean;\n  // 隐藏用户信息\n  hideUserInfo?: boolean;\n}\n\nexport default function HeaderRightMenu({\n  menus = [],\n  profile = {},\n  onReloadAuth,\n  layouts,\n  hideReloadButton,\n  hideLogoutButton,\n  hideUserInfo,\n  onLogout,\n}: HeaderRightProps) {\n  const { headerRightvisible, updateStore } = layouts || {};\n\n  const navigate = useNavigate();\n\n  const menuData: Array<HeaderMenuItemsProps & any> = [\n    ...(!hideUserInfo\n      ? [\n          {\n            title: (\n              <span style={{ fontSize: 15 }}>\n                账号 {profile?.userName || 'admin'}\n              </span>\n            ),\n            icon: 'user',\n          },\n          {\n            divider: true,\n          },\n        ]\n      : []),\n    ...menus,\n    {\n      title: '刷新权限',\n      icon: 'reload',\n      onClick: () => onReloadAuth(),\n      style: { display: hideReloadButton ? 'none' : '' },\n    },\n    {\n      title: '退出登录',\n      icon: 'logout',\n      style: { display: hideLogoutButton ? 'none' : '' },\n      onClick: () => {\n        if (onLogout) {\n          onLogout(navigate);\n          return;\n        }\n        navigate('/login', { replace: true });\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('auth');\n        localStorage.removeItem('token');\n        localStorage.removeItem('auth');\n      },\n    },\n  ];\n\n  const menuView = (\n    <div style={{ width: 150 }}>\n      <Menu>\n        {menuData.map(\n          (\n            { title, icon, onClick, divider, render, ...otherProps },\n            index: number,\n          ) => {\n            if (divider) {\n              return <Menu.Divider key={index} />;\n            }\n            if (render) {\n              return <React.Fragment key={index}>{render}</React.Fragment>;\n            }\n            return (\n              <Menu.Item\n                key={index}\n                text={title}\n                icon={icon}\n                {...otherProps}\n                onClick={onClick && onClick}\n              />\n            );\n          },\n        )}\n      </Menu>\n    </div>\n  );\n\n  const avatarWarp = useMemo(() => {\n    const avatar = profile?.avatar;\n    const userName = profile?.userName;\n    const initialsName = userName ? userName.trim().split('')[0] : ''; // 名称缩写首字母\n    let node;\n    if (avatar) {\n      node = <img src={avatar} alt={initialsName} />;\n    } else if (userName) {\n      node = <div className=\"avatar\">{initialsName}</div>;\n    } else {\n      node = <Avatar icon=\"user\" size=\"default\" />;\n    }\n    return node;\n  }, [profile?.avatar, profile?.userName]);\n\n  return (\n    <div className=\"uiw-global-header-menu\">\n      <span className=\"uiw-global-header-menu\">\n        <Popover\n          isOpen={!!headerRightvisible}\n          onVisibleChange={(visible) =>\n            updateStore?.({ headerRightvisible: visible })\n          }\n          trigger=\"click\"\n          placement=\"bottomRight\"\n          content={menuView}\n        >\n          {avatarWarp}\n        </Popover>\n      </span>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Icon } from 'uiw';\nimport { useMain } from './../hook';\n\n/**\n * 当前是否全屏\n */\nfunction isFullScreen() {\n  let el: any = document;\n  return (\n    el.mozFullScreen ||\n    el.webkitIsFullScreen ||\n    el.webkitFullScreen ||\n    el.msFullScreen\n  );\n}\n\n/**\n * 判断当前文档是否能切换到全屏\n */\nfunction isFullscreenEnabled() {\n  let el: any = document;\n  return (\n    el.fullscreenEnabled ||\n    el.mozFullScreenEnabled ||\n    el.webkitFullscreenEnabled ||\n    el.msFullscreenEnabled\n  );\n}\n\nexport default () => {\n  if (!isFullscreenEnabled()) return null;\n  const [fullscreen, setFullscreen] = useState(false);\n  if (fullscreen) {\n    let element: any = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.webkitRequestFullScreen) {\n      element.webkitRequestFullScreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  } else if (isFullScreen()) {\n    let el: any = document;\n    if (el.exitFullscreen) {\n      el.exitFullscreen();\n    } else if (el.webkitCancelFullScreen) {\n      el.webkitCancelFullScreen();\n    } else if (el.mozCancelFullScreen) {\n      el.mozCancelFullScreen();\n    } else if (el.msExitFullscreen) {\n      el.msExitFullscreen();\n    }\n  }\n  const { headerFontColor } = useMain();\n  const handle = () => {\n    if (!isFullScreen() && fullscreen) {\n      setFullscreen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handle);\n    return () => {\n      window.removeEventListener('resize', handle, false);\n    };\n  });\n\n  return useMemo(\n    () => (\n      <span\n        onClick={() => setFullscreen(!fullscreen)}\n        style={{ fontSize: 18, marginRight: 15, cursor: 'pointer' }}\n      >\n        <Icon\n          type={fullscreen ? 'shrink' : 'arrows-alt'}\n          color={headerFontColor}\n        />\n      </span>\n    ),\n    [fullscreen],\n  );\n};\n","import { useState } from 'react';\n\nexport interface Params {\n  headerRightvisible: boolean;\n}\nexport interface UseLayoutsProps {\n  headerRightvisible: boolean;\n  closeMenu: () => void;\n  updateStore: (datas: Params) => void;\n}\n\nconst useLayouts = () => {\n  const [state, setState] = useState<Params>({\n    headerRightvisible: false,\n  });\n  // 更新store\n  const updateStore = (datas: Params) => {\n    setState({\n      ...state,\n      ...datas,\n    });\n  };\n\n  // 关闭右上角menu菜单\n  const closeMenu = () => updateStore({ headerRightvisible: false });\n\n  return {\n    closeMenu,\n    updateStore,\n    ...state,\n  };\n};\n\nexport default useLayouts;\n","import React, { useMemo, Fragment, useState } from 'react';\nimport Layout from '@uiw/react-layout';\nimport Button from '@uiw/react-button';\nimport classnames from 'classnames';\nimport DocumentTitle from '@uiw-admin/document-title';\nimport { RoutersProps } from '@uiw-admin/router-control';\nimport LogoHeader from './LogoHeader';\nimport Menu from './Menu';\nimport Bread from './Breadcrumb';\nimport './index.css';\nimport { getMenu, BreadcrumbMap } from './utils';\nimport BodyContent, { WarpBody } from './Content';\nimport HeaderRightMenu, { HeaderRightProps } from './HeaderRightMenu';\nimport FullScreen from './FullScreen';\nimport { Icon } from 'uiw';\nimport { MainContext, useSideMenus } from './hook';\n\nconst { Header, Sider, Content } = Layout;\n\nexport type BasicLayoutProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  logo?: string;\n  projectName?: string;\n  /**\n   * 页脚\n   */\n  footer?: React.ReactElement;\n  routes?: RoutersProps[];\n  children?: React.ReactNode;\n  /** 头部 布局 */\n  headerLayout?: 'top' | 'default';\n  /** 头部背景色 */\n  headerBackground?: string;\n  /** 头部字体颜色 */\n  headerFontColor?: string;\n  /** 菜单隐藏 */\n  menuHide?: boolean;\n  /** 是否使用 内容区域默认样式  */\n  isDefaultContentStyle?: boolean;\n  // 隐藏刷新权限按钮\n  hideReloadButton?: boolean;\n  // 隐藏退出登录按钮\n  hideLogoutButton?: boolean;\n  // 隐藏用户信息\n  hideUserInfo?: boolean;\n  /** 标题部分 点击事件 **/\n  onLogoClick?: (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => void;\n} & HeaderRightProps;\nfunction BasicLayout(props: BasicLayoutProps) {\n  const {\n    className,\n    routes = [],\n    projectName = 'UIW Admin',\n    // 右侧菜单参数HeaderRightProps\n    profile = {},\n    menus = [],\n    onReloadAuth,\n    layouts,\n    headerLayout = 'default',\n    headerBackground = '#fff',\n    headerFontColor = '#000',\n    isDefaultContentStyle = true,\n    hideReloadButton,\n    hideLogoutButton,\n    hideUserInfo,\n    onLogoClick,\n    ...others\n  } = props || {};\n  let { menuHide } = props;\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  /** 转换 用于 侧边路由展示 */\n  const routeData = getMenu(routes);\n  const { sideItemIndex, ChildMenus, sideMenusMap, hiddenMainMenu } =\n    useSideMenus({\n      routeData,\n    });\n  /**路由带参数隐藏菜单 */\n  menuHide = hiddenMainMenu;\n  const Menus = React.useMemo(() => {\n    return (\n      <Menu\n        collapsed={collapsed}\n        routes={ChildMenus.routeData}\n        allRoutes={routeData}\n      />\n    );\n  }, [JSON.stringify(ChildMenus), collapsed]);\n\n  const mapRoute = React.useMemo(() => {\n    return new BreadcrumbMap(routeData);\n  }, [JSON.stringify(routeData)]);\n\n  const renderHeaderRightMenu = useMemo(() => {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {profile?.menuLeft}\n        <FullScreen />\n        <HeaderRightMenu\n          onReloadAuth={onReloadAuth}\n          profile={profile}\n          menus={menus}\n          layouts={layouts}\n          hideReloadButton={hideReloadButton}\n          hideLogoutButton={hideLogoutButton}\n          hideUserInfo={hideUserInfo}\n        />\n      </div>\n    );\n  }, [profile, menus, JSON.stringify(layouts)]);\n  const cls = [className, 'uiw-admin-global-header']\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  const header = (\n    <Header\n      {...others}\n      className={cls}\n      style={{\n        background: headerBackground,\n        color: headerFontColor,\n        ...props.style,\n      }}\n    >\n      <div style={{ display: 'flex' }}>\n        {headerLayout === 'top' && (\n          <div style={{ minWidth: 200 }}>\n            <LogoHeader\n              onLogoClick={onLogoClick}\n              collapsed={false}\n              projectName={projectName}\n              logo={props.logo}\n            />\n          </div>\n        )}\n        {!menuHide && (\n          <div>\n            <Button\n              basic\n              icon={\n                <Icon\n                  type={collapsed ? 'menu-unfold' : 'menu-fold'}\n                  color={headerFontColor}\n                />\n              }\n              // icon={collapsed ? 'menu-unfold' : 'menu-fold'}\n              style={{ fontSize: 12, marginRight: 20 }}\n              onClick={() => setCollapsed(!collapsed)}\n            />\n            <Bread sideMenusMap={sideMenusMap} routeMap={mapRoute} />\n          </div>\n        )}\n      </div>\n      {renderHeaderRightMenu}\n    </Header>\n  );\n\n  return (\n    <Fragment>\n      <MainContext.Provider\n        value={{ headerLayout, headerBackground, headerFontColor }}\n      >\n        <DocumentTitle title={projectName || ''} />\n        <Layout style={{ height: '100%' }}>\n          {headerLayout === 'top' && header}\n          <Layout>\n            {!menuHide && (\n              <Sider\n                collapsed={collapsed}\n                className={classnames('uiw-admin-global-sider-menu', {})}\n              >\n                {headerLayout === 'default' ? (\n                  <LogoHeader\n                    onLogoClick={onLogoClick}\n                    collapsed={collapsed}\n                    projectName={projectName}\n                    logo={props.logo}\n                  />\n                ) : (\n                  <div style={{ marginTop: 10 }} />\n                )}\n                {Menus}\n              </Sider>\n            )}\n            <Layout>\n              {headerLayout === 'default' && header}\n              {!isDefaultContentStyle ? (\n                <WarpBody sideItemIndex={sideItemIndex}>\n                  {props.children}\n                </WarpBody>\n              ) : (\n                <Content className=\"uiw-admin-global-content\">\n                  <WarpBody sideItemIndex={sideItemIndex}>\n                    <BodyContent>{props.children}</BodyContent>\n                  </WarpBody>\n                </Content>\n              )}\n            </Layout>\n          </Layout>\n        </Layout>\n      </MainContext.Provider>\n    </Fragment>\n  );\n}\n\nexport default BasicLayout;\n\nexport { default as useLayouts } from './useLayouts';\n","import { RoutersProps } from '@uiw-admin/router-control';\nimport { Location } from 'react-router-dom';\nimport { matchPath } from 'react-router';\n\n/** 把数组扁平化 用于 选项卡渲染 */\nexport const getRoutesList = (\n  data: RoutersProps[] = [],\n  list: RoutersProps[] = [],\n) => {\n  data.forEach((item) => {\n    if (item.routes) {\n      getRoutesList(item.routes, list);\n    } else {\n      list.push(item);\n    }\n  });\n  return list;\n};\n\nconst getO = (routeListData: RoutersProps[], location: Location) => {\n  return routeListData.find((item) => {\n    if (location.pathname === '/' && item.index && item.redirect) {\n      return item.index;\n    }\n    if (\n      location &&\n      location.pathname &&\n      item.path &&\n      location.pathname !== '/'\n    ) {\n      return location.pathname === item.path;\n    }\n    return false;\n  });\n};\n\nconst getM = (routeListData: RoutersProps[], location: Location) => {\n  return routeListData.find((item) => {\n    if (location.pathname === '/' && item.index && item.redirect) {\n      return item.index;\n    }\n    if (\n      location &&\n      location.pathname &&\n      item.path &&\n      location.pathname !== '/'\n    ) {\n      return matchPath({ path: item.path }, location.pathname);\n    }\n    return false;\n  });\n};\n\nexport const getMatch = (routeListData: RoutersProps[], location: Location) => {\n  const o = getO(routeListData, location);\n  if (o) {\n    return {\n      current: o,\n      isMatch: false,\n    };\n  } else {\n    const match = getM(routeListData, location);\n    return {\n      current: match,\n      isMatch: match ? true : false,\n    };\n  }\n};\n\nexport const getMatchRender = (\n  routeListData: (RoutersProps & { location: Location; isMatch: boolean })[],\n  location: Location,\n  isMatch: boolean,\n) => {\n  if (isMatch) {\n    return getM(routeListData, location) as RoutersProps & {\n      location: Location;\n      isMatch: boolean;\n    };\n  } else {\n    return getO(routeListData, location) as RoutersProps & {\n      location: Location;\n      isMatch: boolean;\n    };\n  }\n};\n","import React from 'react';\nimport { Tabs, Icon } from 'uiw';\nimport {\n  RoutersProps,\n  useNavigate,\n  useLocation,\n  Location,\n} from '@uiw-admin/router-control';\nimport { getRoutesList, getMatch, getMatchRender } from './utils';\nimport { matchPath } from 'react-router';\nimport './styles/index.css';\n\nexport interface LayoutTabsProps {\n  /** 子集路由 */\n  routes: RoutersProps[];\n}\nconst LayoutTabs = (props: LayoutTabsProps) => {\n  const { routes } = props;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [pathArr, setPathArr] = React.useState<\n    (RoutersProps & { location: Location; isMatch: boolean })[]\n  >([]);\n\n  const routeListData = React.useMemo(() => getRoutesList(routes), [routes]);\n  const Current = getMatch(routeListData, location);\n\n  React.useEffect(() => {\n    if (!Current.current) {\n      // 没找到跳转\n      navigate('/404');\n      return;\n    }\n    if (Current.current && Current.current.redirect) {\n      navigate(Current.current.redirect);\n      return;\n    }\n    const curr = getMatchRender(pathArr, location, Current.isMatch);\n    // 还有一种可能  /dom/:id 中的 id 值不一样，这种情况下需要替换\n\n    if (!curr) {\n      setPathArr((pre) =>\n        pre\n          .concat([{ ...Current.current, isMatch: Current.isMatch, location }])\n          .filter((item) => !!item),\n      );\n    } else if (\n      curr &&\n      Current.isMatch &&\n      (curr.location.pathname !== location.pathname ||\n        curr.location.search !== location.search)\n    ) {\n      setPathArr((pre) => {\n        return pre.map((item) => {\n          if (curr.location.pathname === item.location.pathname) {\n            return {\n              ...item,\n              location,\n            };\n          }\n          return item;\n        });\n      });\n    }\n  }, [location.pathname]);\n\n  React.useMemo(() => {\n    const tabData = [...pathArr].map((item) => {\n      //  /dom/1?a=2  a 是变量，替换\n      if (\n        item.location.pathname === location.pathname &&\n        location.search !== item.location.search\n      ) {\n        item.location = location;\n      }\n      return item;\n    });\n    setPathArr(() => [...tabData]);\n  }, [location.search]);\n\n  const onDelete = (\n    event: React.MouseEvent<'span', MouseEvent>,\n    index: number,\n    item: RoutersProps,\n  ) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const lg = pathArr.length - 1;\n    // 判断当前是第几个 index\n    // 默认删除当前项 展示后一项\n    // 当后一项不存在时 取前一项\n    // 当前后项都不存在则不进行删除\n    // 如果删除的项不是当前打开项，不做跳转\n    const match = matchPath({ path: item.path as string }, location.pathname);\n    if (!match) {\n      setPathArr((arr) => arr.filter((_, ind) => ind !== index));\n      return;\n    }\n    let isUpdate = false;\n    let tabs;\n    if (lg > index && match) {\n      // 后一项存在\n      tabs = pathArr.find((_, ind) => ind === index + 1);\n      isUpdate = true;\n    } else if (lg === index && index > 0 && match) {\n      // 前一项存在\n      tabs = pathArr.find((_, ind) => ind === index - 1);\n      isUpdate = true;\n    } else if (match) {\n      isUpdate = true;\n    }\n    if (isUpdate) {\n      setPathArr((arr) => arr.filter((_, ind) => ind !== index));\n    }\n    if (tabs) {\n      navigate(`${tabs.path}${tabs.location.search}`, {\n        state: tabs.location.state,\n        replace: true,\n      });\n    }\n  };\n\n  return (\n    <div className=\"uiw-layout-tabs-warp\">\n      <Tabs\n        type=\"card\"\n        activeKey={location.pathname}\n        onTabClick={(keys) => {\n          const tabs = pathArr.find((item) => item.location.pathname === keys);\n          if (tabs && location.pathname !== keys) {\n            navigate(`${keys}${tabs.location.search}`, {\n              state: tabs.location.state,\n              replace: true,\n            });\n          }\n        }}\n      >\n        {pathArr.map((item, index) => {\n          return (\n            <Tabs.Pane\n              key={item.location.pathname}\n              label={\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {item.name}\n                  {pathArr.length > 1 ? (\n                    <Icon\n                      type=\"close\"\n                      tagName=\"span\"\n                      style={{ marginLeft: 10 }}\n                      onClick={(event) => onDelete(event, index, item)}\n                    />\n                  ) : (\n                    <React.Fragment />\n                  )}\n                </div>\n              }\n            />\n          );\n        })}\n      </Tabs>\n      <div className=\"uiw-layout-tabs-body\">\n        {pathArr.map((item) => {\n          const match = item.location.pathname === location.pathname;\n          return (\n            <div\n              key={item.location.pathname}\n              style={{\n                display: match ? 'block' : 'none',\n                overflow: 'auto',\n              }}\n            >\n              {item.element}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default LayoutTabs;\n","// @ts-ignore\nimport { init, Models } from '@rematch/core';\nimport { ExtraModelsFromLoading } from '@rematch/loading';\nexport const models = {};\nexport interface RootModel extends Models<RootModel> {}\nexport type FullModel = ExtraModelsFromLoading<RootModel>;\nexport const store = init<RootModel, FullModel>({});\nexport const { dispatch, addModel } = store;\n","// @ts-nocheck\nimport {\n  RematchRootState,\n  RematchDispatch,\n  Model,\n  RematchStore,\n  init,\n} from '@rematch/core';\nimport { ExtraModelsFromLoading } from '@rematch/loading';\n/**  @@ 指向 /src/.uiw 目录 */\nimport { store, RootModel } from '@@/rematch';\nexport { store };\n\nexport type FullModel = ExtraModelsFromLoading<RootModel>;\nconst stores = store as RematchStore<RootModel, FullModel>;\nexport const { dispatch, addModel } = stores;\nexport type Store = RematchStore<RootModel, FullModel>;\nexport type AddModel = typeof addModel;\n// 对象方式的 Dispatch 类型\nexport type Dispatch = RematchDispatch<RootModel>;\nexport type RootState = RematchRootState<RootModel, FullModel>;\nexport type ModelDefault<T = any> = Model<RootModel, T>;\nexport * from '@@/rematch';\n","// @ts-nocheck\nimport React from 'react';\nimport {\n  unstable_HistoryRouter,\n  useRoutes,\n  useNavigate,\n  NavigateFunction,\n  createRoutesFromChildren,\n  HashRouter,\n  BrowserRouter,\n} from 'react-router-dom';\n\n// @ts-ignore\nimport RoutePathArr from '@@/routes';\nimport { Provider } from 'react-redux';\nimport { store } from '@uiw-admin/models';\nimport { createBrowserHistory } from 'history';\nimport { ControllerProps } from './interface';\nexport * from './interface';\nimport { useLoadModels } from './utils';\nimport { getTree, getDeepTreeRoute } from './Child';\n\nexport * from 'react-router-dom';\nexport * from 'react-router';\nexport * from 'react-redux';\n\nexport const HistoryRouter = unstable_HistoryRouter;\nexport const history = createBrowserHistory();\nexport let navigate: NavigateFunction = () => {};\n\nexport function RouteChild(props: ControllerProps = {}) {\n  // 这边取权限校验值\n  let authStr = sessionStorage.getItem('auth');\n  // @ts-ignore\n  if (STORAGE === 'local') {\n    authStr = localStorage.getItem('auth');\n  }\n  let authList: string[] = React.useMemo(() => {\n    if (authStr) {\n      return JSON.parse(authStr);\n    }\n    return [];\n  }, [authStr]);\n\n  const roue = React.useMemo(\n    () =>\n      createRoutesFromChildren(\n        getTree(\n          getDeepTreeRoute(\n            RoutePathArr,\n            authList,\n            props.notLoginMenus,\n            props.navigateTo,\n          ),\n          props.addModels,\n          !!props.isAutoAuth,\n          props.notLoginMenus,\n          props.navigateTo,\n        ),\n      ),\n    [JSON.stringify(authList)],\n  );\n  const dom = useRoutes(roue);\n  /** 赋值 用于跳转 */\n  navigate = useNavigate();\n  return dom;\n}\n\nexport default function Controller(props: ControllerProps = {}) {\n  const {\n    routeType,\n    addModels,\n    isAutoAuth = true,\n    notLoginMenus,\n    navigateTo,\n  } = props;\n  const load = useLoadModels({ path: '/', addModels });\n  // @ts-ignore\n  let base = BASE_NAME;\n  const dom = React.useMemo(() => {\n    if (routeType === 'history') {\n      return (\n        <HistoryRouter history={history} basename={base}>\n          <RouteChild\n            addModels={props.addModels}\n            isAutoAuth={isAutoAuth}\n            notLoginMenus={notLoginMenus}\n            navigateTo={navigateTo}\n          />\n        </HistoryRouter>\n      );\n    } else if (routeType === 'browser') {\n      return (\n        <BrowserRouter window={window} basename={base}>\n          <RouteChild\n            addModels={props.addModels}\n            isAutoAuth={isAutoAuth}\n            notLoginMenus={notLoginMenus}\n            navigateTo={navigateTo}\n          />\n        </BrowserRouter>\n      );\n    }\n    return (\n      <HashRouter window={window} basename={base}>\n        <RouteChild\n          addModels={props.addModels}\n          isAutoAuth={isAutoAuth}\n          notLoginMenus={notLoginMenus}\n          navigateTo={navigateTo}\n        />\n      </HashRouter>\n    );\n  }, [routeType]);\n\n  if (load) {\n    return <div>Loading...</div>;\n  }\n  return <Provider store={store}>{dom}</Provider>;\n}\n"],"names":["getMenu","data","treeList","forEach","item","obj","routes","child","path","rest","push","key","getRoutesList","list","side","getMenuList","Array","isArray","BreadcrumbMap","constructor","routeData","breadcrumb","Map","flat","this","init","route","parent","par","concat","set","MainContext","React","headerLayout","headerBackground","headerFontColor","useMain","useSideMenus","props","location","useLocation","sideMenusMap","sideMenus","flatSide","loop","getSideMenusMap","JSON","stringify","currentPath","isOne","find","matchPath","getCurrentPath","pathname","hiddenMainMenu","ChildMenus","parentPath","get","sideItemIndex","index","logo","useMemo","_jsx","src","alt","projectName","name","style","color","children","linkProps","onLogoClick","onClick","event","stopPropagation","preventDefault","className","_jsxs","Link","to","collapsed","justifyContent","onNavigate","navigate","options","Reflect","has","Fun","Function","renderMenuItem","pathName","level","map","icon","isAuth","redirect","hideInMenu","Fragment","classnames","active","overlayProps","isOutside","usePortal","isOpen","Menu","text","collapse","replace","SearchMenus","useNavigate","listRouters","listMenus","filter","pyInitials","pinyin","py","pyInitialsValue","pyValue","join","label","value","setList","marginBottom","padding","SearchSelect","placeholder","mode","labelInValue","showSearch","option","onSearch","li","Reg","RegExp","test","onChange","current","allRoutes","searchMenu","SEARCH_MENU","theme","inlineCollapsed","routeMap","domList","paths","result","_","Breadcrumb","_item$routes","length","firstChildPath","height","overflow","WarpBody","Navigate","HeaderRightMenu","_ref","menus","profile","onReloadAuth","layouts","hideReloadButton","hideLogoutButton","hideUserInfo","onLogout","headerRightvisible","updateStore","menuData","title","fontSize","userName","divider","display","sessionStorage","removeItem","localStorage","menuView","width","_ref2","render","otherProps","avatarWarp","avatar","initialsName","trim","split","Avatar","size","Popover","onVisibleChange","visible","trigger","placement","content","isFullScreen","el","document","mozFullScreen","webkitIsFullScreen","webkitFullScreen","msFullScreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","isFullscreenEnabled","useState","fullscreen","setFullscreen","element","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","handle","useEffect","window","addEventListener","removeEventListener","marginRight","cursor","Icon","type","state","setState","datas","closeMenu","Header","Layout","Sider","Content","isDefaultContentStyle","others","menuHide","setCollapsed","Menus","mapRoute","renderHeaderRightMenu","justifyItems","alignItems","menuLeft","FullScreen","cls","Boolean","header","background","minWidth","LogoHeader","Button","basic","Bread","Provider","DocumentTitle","marginTop","BodyContent","getO","routeListData","getM","pathArr","setPathArr","Current","o","isMatch","match","getMatch","curr","getMatchRender","search","pre","tabData","Tabs","activeKey","onTabClick","keys","tabs","tagName","marginLeft","lg","isUpdate","ind","arr","onDelete","store","stores","dispatch","addModel","createBrowserHistory"],"sourceRoot":""}