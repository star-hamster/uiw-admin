{"version":3,"file":"static/js/345.a52eceaf.chunk.js","mappings":"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","sources":["../../../packages/user-login/src/index.tsx","pages/user-login/index.tsx"],"sourcesContent":["import React from 'react';\n// @ts-ignore\nimport bgDefault from './assets/r2g7rm.jpg';\nimport DocumentTitle from '@uiw-admin/document-title';\nimport { Form, Row, Col, ButtonProps, Button, FormFieldsProps } from 'uiw';\nimport useSWR from 'swr';\nimport { request } from '@uiw-admin/utils';\nimport { Options } from '@uiw-admin/utils/lib/request';\n\nimport './styles/index.css';\n\nexport type FormValue = {\n  username?: string;\n  password?: string;\n  swr_Rest_Time?: number | string;\n};\n\nexport interface FieldsProps<T = any> extends FormFieldsProps<T> {\n  name: string;\n  verification?: (\n    value: any,\n    current: Record<string, any>,\n  ) => string | boolean | null;\n}\n\nexport interface UserLoginProps {\n  /** 卡片框的位置 */\n  align?: 'left' | 'right' | 'center';\n  classNameWarp?: string;\n  styleWarp?: React.CSSProperties;\n  /** 卡片的 className */\n  classNameBody?: string;\n  /** 卡片的 style */\n  styleBody?: React.CSSProperties;\n  /** 页脚 */\n  footer?: React.ReactNode;\n  /**\n   * 背景图片\n   * @deprecated 推荐使用 `styleContainer`\n   */\n  bg?: string;\n  logo?: string | null;\n  children?: React.ReactNode;\n  /** 项目名称 */\n  projectName?: string | null;\n  /** 登录接口返回 */\n  onSuccess?: (resp: any, form: FormValue | undefined) => void;\n  /** 登录按钮 属性 */\n  btnProps?: Omit<ButtonProps, 'ref'>;\n  /** 请求接口 */\n  api?: string;\n  /** 调用接口之前 , 可以通过这个添加额外参数  返回 false 则不进行登录操作  */\n  onBefore?: (store: FormValue) => Record<string, any> | boolean;\n  /** request 请求 options 配置参数 */\n  requestConfig?: Options;\n  /** 登录按钮位置 按钮组, title 为显示标题 */\n  buttons?: (Omit<ButtonProps, 'ref'> & { title?: React.ReactNode })[];\n  /**\n   * 默认输入框保存字段\n   * @deprecated 推荐使用 `defaultFieldsConfig`\n   */\n  saveField?: {\n    /** 登录账号 */\n    userName?: string;\n    /** 密码 */\n    passWord?: string;\n  };\n  /** 默认 输入框 属性配置 */\n  defaultFieldsConfig?: {\n    userName?: Partial<FieldsProps>;\n    passWord?: Partial<FieldsProps>;\n  };\n  // 渲染表单配置\n  fields?: FieldsProps[];\n  // 是否使用默认的 fields\n  isDefaultFields?: boolean;\n  /** 背景框`style` 可再次调整背景图样 */\n  styleContainer?: React.CSSProperties;\n}\n\nexport default (props: UserLoginProps) => {\n  const {\n    align = 'center',\n    classNameWarp = '',\n    styleWarp = {},\n    classNameBody = '',\n    styleBody = {},\n    footer = true,\n    bg = bgDefault,\n    logo = bgDefault,\n    children,\n    projectName = 'UIW Admin',\n    onSuccess = () => null,\n    btnProps = {},\n    api,\n    onBefore,\n    requestConfig,\n    buttons,\n    saveField,\n    fields,\n    isDefaultFields = true,\n    defaultFieldsConfig,\n    styleContainer = {},\n  } = props;\n  let { userName = 'username', passWord = 'password' } = saveField || {};\n  const userNameLabel =\n    ((defaultFieldsConfig || {})['userName'] || {})['label'] || '账号';\n  const passWordLabel =\n    ((defaultFieldsConfig || {})['passWord'] || {})['label'] || '密码';\n  userName =\n    ((defaultFieldsConfig || {})['userName'] || {})['name'] || userName;\n  passWord =\n    ((defaultFieldsConfig || {})['passWord'] || {})['name'] || passWord;\n\n  const [store, setStore] = React.useState<FormValue>();\n  const { isValidating } = useSWR(\n    store\n      ? [api, { method: 'POST', body: store, ...(requestConfig || {}) }]\n      : null,\n    request,\n    {\n      revalidateOnFocus: false,\n      onSuccess: (resp) => onSuccess(resp, store),\n    },\n  );\n\n  const defaultFields: FieldsProps[] = [\n    {\n      name: userName,\n      label: `${userNameLabel}`,\n      labelFor: userName,\n      required: true,\n      children: (\n        <input\n          type=\"text\"\n          disabled={!!isValidating}\n          id={userName}\n          placeholder={`请输入${userNameLabel}`}\n          className=\"form-field\"\n        />\n      ),\n      ...(defaultFieldsConfig?.userName || {}),\n    },\n    {\n      name: passWord,\n      label: `${passWordLabel}`,\n      labelFor: passWord,\n      required: true,\n      children: (\n        <input\n          disabled={!!isValidating}\n          id={passWord}\n          type=\"password\"\n          placeholder={`请输入${passWordLabel}`}\n          className=\"form-field\"\n        />\n      ),\n      ...(defaultFieldsConfig?.passWord || {}),\n    },\n  ];\n\n  let fieldArr = defaultFields;\n  if (fields && Array.isArray(fields)) {\n    if (isDefaultFields) {\n      fieldArr = defaultFields.concat(fields);\n    } else {\n      fieldArr = fields;\n    }\n  }\n\n  const FooterRender = React.useMemo(() => {\n    if (footer === false || footer === '') {\n      return null;\n    } else if (footer === true) {\n      return (\n        <div className=\"copyright-footer\">\n          版权所有 copyright &copy; 2022 uiw admin\n        </div>\n      );\n    }\n    return footer;\n  }, []);\n\n  return (\n    <div\n      className=\"uiw-loayout-login\"\n      style={{ background: `url(${bg})`, ...styleContainer }}\n    >\n      <DocumentTitle title={projectName} />\n      <div\n        style={styleWarp}\n        className={`uiw-loayout-login-warp ${classNameWarp} uiw-loayout-login-warp-${align}`}\n      >\n        <div\n          className={`uiw-loayout-login-body ${classNameBody}`}\n          style={styleBody}\n        >\n          {logo && <img className=\"logo\" src={logo} />}\n          {projectName && <span className=\"uiw-title\">{projectName}</span>}\n          {children ? (\n            children\n          ) : (\n            <Form\n              resetOnSubmit={false}\n              onSubmit={({ current }) => {\n                const errorObj: any = {};\n                fieldArr.forEach((item) => {\n                  if (\n                    item.verification &&\n                    typeof item.verification === 'function'\n                  ) {\n                    const result = item.verification(\n                      current[item.name],\n                      current,\n                    );\n                    if (typeof result === 'string' && result) {\n                      errorObj[item.name] = result;\n                    }\n                  } else if (item.required && !current[item.name]) {\n                    errorObj[item.name] = `${item.label}不能为空`;\n                  }\n                });\n\n                if (Object.keys(errorObj).length > 0) {\n                  const err: any = new Error();\n                  err.filed = errorObj;\n                  throw err;\n                } else {\n                  if (typeof onBefore === 'function') {\n                    const result = onBefore(current);\n                    if (typeof result === 'object') {\n                      setStore({\n                        ...current,\n                        ...(result || {}),\n                        swr_Rest_Time: new Date().getTime(),\n                      });\n                      return;\n                    }\n                    if (!result) {\n                      return;\n                    }\n                  }\n                  setStore({ ...current, swr_Rest_Time: new Date().getTime() });\n                }\n              }}\n              onSubmitError={(error: any) => {\n                if (error.filed) {\n                  return { ...error.filed };\n                }\n                return null;\n              }}\n              fields={fieldArr.reduce((pre, current) => {\n                if (!current || (current && !current.name)) {\n                  return { ...pre };\n                }\n                const { name, required, labelFor, ...rest } = current;\n                return {\n                  ...pre,\n                  [name]: { labelFor: name || labelFor, ...rest },\n                };\n              }, {})}\n            >\n              {({ fields, canSubmit }) => {\n                return (\n                  <div>\n                    {fieldArr.map((item, index) => {\n                      return (\n                        <Row key={index}>\n                          <Col>{fields[item.name]}</Col>\n                        </Row>\n                      );\n                    })}\n                    <Row>\n                      {buttons && buttons.length > 0 ? (\n                        buttons.map((item, idx) => {\n                          const { title, ...rest } = item;\n                          return (\n                            <Button\n                              key={idx}\n                              loading={\n                                !!isValidating && item.htmlType === 'submit'\n                              }\n                              disabled={!canSubmit()}\n                              className=\"btns\"\n                              type=\"danger\"\n                              {...rest}\n                            >\n                              {title}\n                            </Button>\n                          );\n                        })\n                      ) : (\n                        <Button\n                          disabled={!canSubmit()}\n                          loading={!!isValidating}\n                          className=\"btns\"\n                          block\n                          style={{ marginTop: 20 }}\n                          htmlType=\"submit\"\n                          type=\"dark\"\n                          {...btnProps}\n                        >\n                          登录\n                        </Button>\n                      )}\n                    </Row>\n                  </div>\n                );\n              }}\n            </Form>\n          )}\n        </div>\n      </div>\n      {FooterRender}\n    </div>\n  );\n};\n","import Markdown from '../../components/Markdown';\nimport UserLogin from '@uiw-admin/user-login';\nimport { Notify } from 'uiw';\nimport { Form, Row, Col, Button } from 'uiw';\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/user-login/README.md';\n  dependencies = { UserLogin, Notify, Form, Row, Col, Button };\n  getMdStr = () => import('@uiw-admin/user-login/README.md');\n}\n"],"names":["props","align","classNameWarp","styleWarp","classNameBody","styleBody","footer","bg","bgDefault","logo","children","projectName","onSuccess","btnProps","api","onBefore","requestConfig","buttons","saveField","fields","isDefaultFields","defaultFieldsConfig","styleContainer","userName","passWord","userNameLabel","passWordLabel","React","store","setStore","isValidating","useSWR","method","body","request","revalidateOnFocus","resp","defaultFields","name","label","labelFor","required","_jsx","type","disabled","id","placeholder","className","fieldArr","Array","isArray","concat","FooterRender","_jsxs","style","background","DocumentTitle","title","src","Form","resetOnSubmit","onSubmit","current","_ref","errorObj","forEach","item","verification","result","Object","keys","length","err","Error","filed","swr_Rest_Time","Date","getTime","onSubmitError","error","reduce","pre","rest","_ref2","canSubmit","map","index","Row","Col","idx","Button","loading","htmlType","block","marginTop","Page","editorUrl","dependencies","UserLogin","Notify","getMdStr","Markdown"],"sourceRoot":""}