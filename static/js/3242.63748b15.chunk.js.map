{"version":3,"file":"static/js/3242.63748b15.chunk.js","mappings":"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GACN,SAAM,eACN,WAAM,6IACN,SAAM,+JACN,IAAM,eACN,WAAM,+GACN,WAAM,SACN,SAAM,uRACN,WAAM,+DACN,WAAM,6CACN,SAAM,qEACN,YAAO,2EACP,UAAO,eACP,YAAO,mDACP,UAAO,iFACP,UAAK,iFACL,QAAK,qBACL,UAAK,qKACL,QAAK,6yBACL,YAAO,qKACP,YAAO,6FACP,UAAO,iLACP,YAAO,mSACP,UAAO,SACP,YAAO,6CACP,UAAO,qBACP,WAAM,yDACN,SAAM,mDACN,WAAM,SACN,SAAM,eACN,WAAM,mMACN,WAAM,GACN,SAAM,iFACN,YAAO,6FACP,YAAO,qKACP,UAAO,+GACP,GAAK,qBACL,UAAK,uLACL,QAAK,6aACL,UAAK,qBACL,QAAK,6CACL,UAAK,qEACL,QAAK,qBACL,UAAK,6CACL,QAAK,iLACL,UAAK,qBACL,UAAK,eACL,QAAK,eACL,WAAM,eACN,SAAM,6CACN,WAAM,iFACN,SAAM,iCACN,WAAM,iFACN,SAAM,+DACN,WAAM,mDACN,SAAM,iFACN,YAAO,iIACP,UAAO,2BACP,UAAO,SACP,WAAM,qBACN,SAAM,iFACN,WAAM,6CACN,SAAM,2BACN,QAAK,+JACL,WAAM,uCACN,SAAM,iCACN,YAAO,SACP,UAAO,6CACP,UAAO,SACP,UAAK,2EACL,QAAK,iLACL,UAAK,mDACL,QAAK,iFACL,YAAO,iOACP,UAAO,yJACP,YAAO,GACP,UAAO,qBACP,WAAM,GACN,SAAM,GACN,WAAM,GACN,SAAM,6CACN,UAAK,mDACL,QAAK,eACL,UAAK,SACL,QAAK,uIACL,YAAO,mDACP,UAAO,6CACP,UAAO,yDACP,WAAM,mGACN,WAAM,iCACN,SAAM,uLACN,WAAM,6CACN,SAAM,iCACN,WAAM,eACN,SAAM,qBACN,WAAM,6CACN,SAAM,iFACN,WAAM,SACN,SAAM,yGACN,WAAM,+GACN,SAAM,+GACN,WAAM,2BACN,SAAM,qEACN,YAAO,2BACP,UAAO,6CACP,YAAO,SACP,UAAO,uCACP,YAAO,2EACP,UAAO,2TACP,YAAO,qNACP,UAAO,uFACP,aAAQ,+G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O,mDACP,UAAO,yVACP,YAAO,mDACP,UAAO,uCACP,WAAM,6CACN,SAAM,SACN,SAAM,yMACN,WAAM,iCACN,SAAM,mDACN,WAAM,GACN,SAAM,iFACN,WAAM,+DACN,SAAM,GACN,YAAO,GACP,UAAO,qEACP,YAAO,iCACP,UAAO,2BACP,SAAM,yDACN,WAAM,iCACN,SAAM,2BACN,QAAK,SACL,UAAK,eACL,QAAK,qBACL,SAAM,2EACN,WAAM,2EACN,SAAM,uOACN,YAAO,SACP,UAAO,iCACP,QAAK,yDACL,UAAO,2QACP,YAAO,6CACP,UAAO,eACP,SAAM,6IACN,WAAM,SACN,SAAM,2BACN,UAAK,SACL,QAAK,+MACL,UAAK,uCACL,QAAK,2EACL,UAAO,qBACP,YAAO,6FACP,UAAO,SACP,SAAM,iCACN,WAAM,mDACN,SAAM,mGACN,SAAM,SACN,WAAM,GACN,SAAM,6CACN,SAAM,eACN,SAAM,mGACN,GAAK,GACL,UAAK,SACL,UAAK,mDACL,QAAK,6FACL,WAAM,+DACN,WAAM,SACN,SAAM,2BACN,IAAM,SACN,WAAM,2EACN,WAAM,2EACN,SAAM,2BACN,YAAO,2BACP,YAAO,6CACP,UAAO,SACP,WAAM,mGACN,WAAM,qBACN,SAAM,6CACN,UAAK,SACL,QAAK,6OACL,WAAM,2BACN,WAAM,GACN,YAAO,eACP,UAAO,GACP,UAAK,2TACL,QAAK,GACL,UAAK,eACL,QAAK,mSACL,YAAO,uIACP,UAAO,GACP,YAAO,uFACP,UAAO,qEACP,WAAM,qKACN,WAAM,iFACN,SAAM,iCACN,UAAK,qEACL,QAAK,eACL,UAAK,GACL,QAAK,qWACL,YAAO,qBACP,YAAO,eACP,UAAO,iCACP,WAAM,2HACN,SAAM,mDACN,WAAM,qBACN,SAAM,2NACN,WAAM,2EACN,WAAM,qEACN,SAAM,SACN,WAAM,2HACN,SAAM,GACN,WAAM,iIACN,SAAM,qBACN,WAAM,mMACN,SAAM,SACN,WAAM,eACN,SAAM,yGACN,YAAO,uCACP,YAAO,SACP,UAAO,qBACP,YAAO,+PACP,UAAO,GACP,YAAO,2EACP,UAAO,y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CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,SACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,gBACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,gBACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,eACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,UACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAAC,CAAC,aACP,SAAK,CAAC,CAAC,cACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,WACP,SAAK,CAAC,CAAC,YACP,SAAK,CAA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","sources":["../../../node_modules/redux/es/redux.js","../../../node_modules/@rematch/core/src/reduxStore.ts","../../../node_modules/@rematch/core/src/validate.ts","../../../node_modules/@rematch/core/src/dispatcher.ts","../../../node_modules/@rematch/core/src/bag.ts","../../../node_modules/@rematch/core/src/rematchStore.ts","../../../node_modules/@rematch/core/src/config.ts","../../../node_modules/@rematch/core/src/index.ts","../../../node_modules/@remix-run/router/history.ts","../../../node_modules/@remix-run/router/utils.ts","../../../node_modules/@remix-run/router/router.ts","../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../../../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../../../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../../../node_modules/pinyin/data/compound_surname.js","../../../node_modules/pinyin/data/dict-zi-web.js","../../../node_modules/pinyin/data/surname.js","../../../node_modules/pinyin/lib/phonetic-symbol.js","../../../node_modules/pinyin/lib/pinyin.js","../../../node_modules/pinyin/lib/util.js","../../../node_modules/pinyin/lib/web-pinyin.js","../../../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","../../../node_modules/react-redux/es/hooks/useSelector.js","../../../node_modules/react-redux/es/utils/batch.js","../../../node_modules/react-redux/es/index.js","../../index.tsx","../../dom.ts","../../lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../../lib/use-sync-external-store-shim/index.ts","../../lib/context.ts","../../lib/hooks.tsx","../../lib/components.tsx","../../../packages/basic-layouts/node_modules/classnames/index.js","../../../../packages/react-router/index.tsx","../../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","import * as Redux from 'redux'\nimport {\n\tAction,\n\tConfigRedux,\n\tModelReducers,\n\tNamedModel,\n\tRematchBag,\n\tDevtoolOptions,\n\tModels,\n\tRematchRootState,\n} from './types'\n\n/**\n * Creates 'combined' reducer for each model and then merges those reducers\n * together into a 'root' reducer. It then creates a Redux store with\n * middlewares and enhancers.\n */\nexport default function createReduxStore<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tRootState = RematchRootState<TModels, TExtraModels>\n>(bag: RematchBag<TModels, TExtraModels>): Redux.Store<RootState> {\n\tbag.models.forEach((model) => createModelReducer(bag, model))\n\n\tconst rootReducer = createRootReducer<RootState, TModels, TExtraModels>(bag)\n\n\tconst middlewares = Redux.applyMiddleware(...bag.reduxConfig.middlewares)\n\tconst enhancers = bag.reduxConfig.devtoolComposer\n\t\t? bag.reduxConfig.devtoolComposer(...bag.reduxConfig.enhancers, middlewares)\n\t\t: composeEnhancersWithDevtools(bag.reduxConfig.devtoolOptions)(\n\t\t\t\t...bag.reduxConfig.enhancers,\n\t\t\t\tmiddlewares\n\t\t  )\n\n\tconst createStore = bag.reduxConfig.createStore || Redux.createStore\n\tconst bagInitialState = bag.reduxConfig.initialState\n\tconst initialState = bagInitialState === undefined ? {} : bagInitialState\n\n\treturn createStore<RootState, Action, any, typeof initialState>(\n\t\trootReducer,\n\t\tinitialState,\n\t\tenhancers\n\t)\n}\n\n/**\n * Creates a combined reducer for a given model. What it means is that:\n * - it forms an action name for each model's reducer as 'modelName/reducerKey'\n * - it creates a mapping from action name to its reducer\n * - it wraps the mapping with a function (combined reducer) that selects and\n *   runs a reducer based on the incoming action\n * - if the model also has a base reducer defined, it creates a function which\n *   first runs the incoming action through this reducer and then passes the\n *   resulting state and the same action to combined reducer\n *\n * The final result - a function, is returned.\n */\nexport function createModelReducer<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTState extends NamedModel<TModels>['state'] = any\n>(bag: RematchBag<TModels, TExtraModels>, model: NamedModel<TModels>): void {\n\tconst modelReducers: ModelReducers<TState> = {}\n\n\t// build action name for each reducer and create mapping from name to reducer\n\tconst modelReducerKeys = Object.keys(model.reducers)\n\tmodelReducerKeys.forEach((reducerKey) => {\n\t\tconst actionName = isAlreadyActionName(reducerKey)\n\t\t\t? reducerKey\n\t\t\t: `${model.name}/${reducerKey}`\n\n\t\tmodelReducers[actionName] = model.reducers[reducerKey]\n\t})\n\n\t// select and run a reducer based on the incoming action\n\tconst combinedReducer = (\n\t\tstate: TState = model.state,\n\t\taction: Action\n\t): TState => {\n\t\tif (action.type in modelReducers) {\n\t\t\treturn modelReducers[action.type](\n\t\t\t\tstate,\n\t\t\t\taction.payload,\n\t\t\t\taction.meta\n\t\t\t\t// we use augmentation because a reducer can return void due immer plugin,\n\t\t\t\t// which makes optional returning the reducer state\n\t\t\t) as TState\n\t\t}\n\n\t\treturn state\n\t}\n\n\tconst modelBaseReducer = model.baseReducer\n\n\t// when baseReducer is defined, run the action first through it\n\tlet reducer = !modelBaseReducer\n\t\t? combinedReducer\n\t\t: (state: TState = model.state, action: Action): TState =>\n\t\t\t\tcombinedReducer(modelBaseReducer(state, action), action)\n\n\tbag.forEachPlugin('onReducer', (onReducer) => {\n\t\treducer = onReducer(reducer, model.name, bag) || reducer\n\t})\n\n\tbag.reduxConfig.reducers[model.name] = reducer\n}\n\n/**\n * It merges all reducers in config using mergeReducers function. Additionally,\n * if user supplied any rootReducers, a wrapper function around merged reducers\n * is created. It first feeds each into its corresponding 'root' reducer (if\n * it's available), and then passes on the resulting state to the merged reducer.\n */\nexport function createRootReducer<\n\tTRootState,\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(bag: RematchBag<TModels, TExtraModels>): Redux.Reducer<TRootState, Action> {\n\tconst { rootReducers } = bag.reduxConfig\n\tconst mergedReducers = mergeReducers<TRootState>(bag.reduxConfig)\n\tlet rootReducer = mergedReducers\n\n\tif (rootReducers && Object.keys(rootReducers).length) {\n\t\trootReducer = (\n\t\t\tstate: TRootState | undefined,\n\t\t\taction: Action\n\t\t): TRootState => {\n\t\t\tconst actionRootReducer = rootReducers[action.type]\n\n\t\t\tif (actionRootReducer) {\n\t\t\t\treturn mergedReducers(actionRootReducer(state, action), action)\n\t\t\t}\n\n\t\t\treturn mergedReducers(state, action)\n\t\t}\n\t}\n\n\tbag.forEachPlugin('onRootReducer', (onRootReducer) => {\n\t\trootReducer = onRootReducer(rootReducer, bag) || rootReducer\n\t})\n\n\treturn rootReducer\n}\n\n/**\n * Merges all reducers defined in config into one function using user supplied\n * or default combineReducers function.\n * If there are no reducers defined, it returns a function that just returns\n * the state for all incoming actions.\n */\nfunction mergeReducers<TRootState>(\n\treduxConfig: ConfigRedux<TRootState>\n): Redux.Reducer<TRootState, Action> {\n\tconst combineReducers = reduxConfig.combineReducers || Redux.combineReducers\n\n\tif (!Object.keys(reduxConfig.reducers).length) {\n\t\treturn (state: any): TRootState => state\n\t}\n\n\treturn combineReducers(reduxConfig.reducers as Redux.ReducersMapObject)\n}\n\n/**\n * Returns Redux Devtools compose method unless it's disabled, in which case it\n * returns default Redux.compose.\n */\nfunction composeEnhancersWithDevtools(\n\tdevtoolOptions: DevtoolOptions = {}\n): (...args: any[]) => Redux.StoreEnhancer {\n\treturn !devtoolOptions.disabled &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(devtoolOptions)\n\t\t: Redux.compose\n}\n\n/**\n * Determines if a reducer key is already an action name, for example -\n * a listener on another model.\n */\nfunction isAlreadyActionName(reducerKey: string): boolean {\n\treturn reducerKey.indexOf('/') > -1\n}\n","import {\n\tConfig,\n\tModelEffects,\n\tModelReducers,\n\tNamedModel,\n\tPlugin,\n\tModels,\n} from './types'\n\n/**\n * If the first item is true, it means there is an error described by\n * the second item.\n */\nexport type Validation = [boolean | undefined, string]\n\n/**\n * Checks if a parameter is a valid object.\n */\nexport const isObject = <T>(obj: T): boolean =>\n\ttypeof obj === 'object' && obj !== null && !Array.isArray(obj)\n\n/**\n * Checks if a parameter is a valid function but only when it's defined.\n * Otherwise, always returns true.\n */\nexport const ifDefinedIsFunction = <T>(func: T): boolean =>\n\t!func || typeof func === 'function'\n\n/**\n * Takes an array of arrays of validations. Collects all errors and throws.\n * Should be used by plugins to keep the validation behaviour the same for all\n * Rematch-related libraries.\n */\nconst validate = (runValidations: () => Validation[]): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tconst validations = runValidations()\n\t\tconst errors: string[] = []\n\n\t\tvalidations.forEach((validation) => {\n\t\t\tconst isInvalid = validation[0]\n\t\t\tconst errorMessage = validation[1]\n\t\t\tif (isInvalid) {\n\t\t\t\terrors.push(errorMessage)\n\t\t\t}\n\t\t})\n\n\t\tif (errors.length > 0) {\n\t\t\tthrow new Error(errors.join(', '))\n\t\t}\n\t}\n}\n\nexport const validateConfig = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tconfig: Config<TModels, TExtraModels>\n): void => {\n\tvalidate(() => [\n\t\t[!Array.isArray(config.plugins), 'init config.plugins must be an array'],\n\t\t[!isObject(config.models), 'init config.models must be an object'],\n\t\t[\n\t\t\t!isObject(config.redux.reducers),\n\t\t\t'init config.redux.reducers must be an object',\n\t\t],\n\t\t[\n\t\t\t!Array.isArray(config.redux.middlewares),\n\t\t\t'init config.redux.middlewares must be an array',\n\t\t],\n\t\t[\n\t\t\t!Array.isArray(config.redux.enhancers),\n\t\t\t'init config.redux.enhancers must be an array of functions',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(config.redux.combineReducers),\n\t\t\t'init config.redux.combineReducers must be a function',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(config.redux.createStore),\n\t\t\t'init config.redux.createStore must be a function',\n\t\t],\n\t])\n}\n\nexport const validateModel = <TModels extends Models<TModels>>(\n\tmodel: NamedModel<TModels>\n): void => {\n\tvalidate(() => [\n\t\t[!model, 'model config is required'],\n\t\t[typeof model.name !== 'string', 'model \"name\" [string] is required'],\n\t\t[\n\t\t\tmodel.state === undefined && model.baseReducer === undefined,\n\t\t\t'model \"state\" is required',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(model.baseReducer),\n\t\t\t'model \"baseReducer\" must be a function',\n\t\t],\n\t])\n}\n\nexport const validatePlugin = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tplugin: Plugin<TModels, TExtraModels>\n): void => {\n\tvalidate(() => [\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.onStoreCreated),\n\t\t\t'Plugin onStoreCreated must be a function',\n\t\t],\n\t\t[!ifDefinedIsFunction(plugin.onModel), 'Plugin onModel must be a function'],\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.onReducer),\n\t\t\t'Plugin onReducer must be a function',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.onRootReducer),\n\t\t\t'Plugin onRootReducer must be a function',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.createMiddleware),\n\t\t\t'Plugin createMiddleware must be a function',\n\t\t],\n\t])\n}\n\nexport const validateModelReducer = (\n\tmodelName: string,\n\treducers: ModelReducers,\n\treducerName: string\n): void => {\n\tvalidate(() => [\n\t\t[\n\t\t\t!!reducerName.match(/\\/.+\\//),\n\t\t\t`Invalid reducer name (${modelName}/${reducerName})`,\n\t\t],\n\t\t[\n\t\t\ttypeof reducers[reducerName] !== 'function',\n\t\t\t`Invalid reducer (${modelName}/${reducerName}). Must be a function`,\n\t\t],\n\t])\n}\n\nexport const validateModelEffect = <TModels extends Models<TModels>>(\n\tmodelName: string,\n\teffects: ModelEffects<TModels>,\n\teffectName: string\n): void => {\n\tvalidate(() => [\n\t\t[\n\t\t\t!!effectName.match(/\\//),\n\t\t\t`Invalid effect name (${modelName}/${effectName})`,\n\t\t],\n\t\t[\n\t\t\ttypeof effects[effectName] !== 'function',\n\t\t\t`Invalid effect (${modelName}/${effectName}). Must be a function`,\n\t\t],\n\t])\n}\n\nexport default validate\n","import {\n\tAction,\n\tModelEffects,\n\tModelEffectsCreator,\n\tModels,\n\tNamedModel,\n\tRematchBag,\n\tRematchDispatcher,\n\tRematchStore,\n} from './types'\nimport { validateModelEffect, validateModelReducer } from './validate'\n\n/**\n * Builds a dispatcher for given model name and action name. The dispatched\n * action will have a type `modelName/actionName`.\n * Additionally, adds the isEffect property to the created dispatcher.\n * isEffect helps to differentiate effects dispatchers from reducer dispatchers.\n */\nconst createActionDispatcher = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\trematch: RematchStore<TModels, TExtraModels>,\n\tmodelName: string,\n\tactionName: string,\n\tisEffect: boolean\n): RematchDispatcher<boolean> => {\n\treturn Object.assign(\n\t\t(payload?: any, meta?: any): Action => {\n\t\t\tconst action: Action = { type: `${modelName}/${actionName}` }\n\n\t\t\tif (typeof payload !== 'undefined') {\n\t\t\t\taction.payload = payload\n\t\t\t}\n\n\t\t\tif (typeof meta !== 'undefined') {\n\t\t\t\taction.meta = meta\n\t\t\t}\n\n\t\t\treturn rematch.dispatch(action)\n\t\t},\n\t\t{\n\t\t\tisEffect,\n\t\t}\n\t)\n}\n\n/**\n * Creates a dispatcher object for a model - it contains a mapping from all\n * reducers to functions which dispatch their corresponding actions.\n */\nexport const createReducerDispatcher = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTModel extends NamedModel<TModels>\n>(\n\trematch: RematchStore<TModels, TExtraModels>,\n\tmodel: TModel\n): void => {\n\tconst modelDispatcher = rematch.dispatch[model.name]\n\n\t// map reducer names to dispatch actions\n\tconst modelReducersKeys = Object.keys(model.reducers)\n\tmodelReducersKeys.forEach((reducerName) => {\n\t\tvalidateModelReducer(model.name, model.reducers, reducerName)\n\n\t\tmodelDispatcher[reducerName] = createActionDispatcher(\n\t\t\trematch,\n\t\t\tmodel.name,\n\t\t\treducerName,\n\t\t\tfalse\n\t\t)\n\t})\n}\n\n/**\n * Creates effects dispatcher for a model - it contains a mapping from all\n * effects *names* to functions which dispatch their corresponding actions.\n */\nexport const createEffectDispatcher = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTModel extends NamedModel<TModels>\n>(\n\trematch: RematchStore<TModels, TExtraModels>,\n\tbag: RematchBag<TModels, TExtraModels>,\n\tmodel: TModel\n): void => {\n\tconst modelDispatcher = rematch.dispatch[model.name]\n\tlet effects: ModelEffects<TModels> = {}\n\n\t// 'effects' might be actually a function creating effects\n\tif (model.effects) {\n\t\teffects =\n\t\t\ttypeof model.effects === 'function'\n\t\t\t\t? (model.effects as ModelEffectsCreator<TModels>)(rematch.dispatch)\n\t\t\t\t: model.effects\n\t}\n\n\t// map effects names to dispatch actions\n\tconst effectKeys = Object.keys(effects)\n\teffectKeys.forEach((effectName) => {\n\t\tvalidateModelEffect(model.name, effects, effectName)\n\n\t\tbag.effects[`${model.name}/${effectName}`] =\n\t\t\teffects[effectName].bind(modelDispatcher)\n\n\t\tmodelDispatcher[effectName] = createActionDispatcher(\n\t\t\trematch,\n\t\t\tmodel.name,\n\t\t\teffectName,\n\t\t\ttrue\n\t\t)\n\t})\n}\n","import { Config, Model, Models, NamedModel, RematchBag } from './types'\nimport { validateModel } from './validate'\n\n/**\n * Creates and returns a 'Rematch Bag', which is a set of configuration options\n * used by the Rematch library in various functions.\n */\nexport default function createRematchBag<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(config: Config<TModels, TExtraModels>): RematchBag<TModels, TExtraModels> {\n\treturn {\n\t\tmodels: createNamedModels(config.models),\n\t\treduxConfig: config.redux,\n\t\tforEachPlugin(method, fn): void {\n\t\t\tconfig.plugins.forEach((plugin) => {\n\t\t\t\tif (plugin[method]) {\n\t\t\t\t\tfn(plugin[method]!)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\teffects: {},\n\t}\n}\n\n/**\n * Transforms mapping from a model name to a model object, into an array of\n * 'named' models - models with embedded name and default value for reducers\n * if user didn't provide any.\n */\nfunction createNamedModels<TModels extends Models<TModels>>(\n\tmodels: TModels | Partial<TModels>\n): NamedModel<TModels>[] {\n\treturn Object.keys(models).map((modelName: string) => {\n\t\tconst model = createNamedModel(modelName, (models as TModels)[modelName])\n\t\tvalidateModel(model)\n\t\treturn model\n\t})\n}\n\n/**\n * Transforms a model into 'named' model - model which contains 'name' and\n * 'reducers' properties if user didn't provide any.\n */\nfunction createNamedModel<TModels extends Models<TModels>>(\n\tname: string,\n\tmodel: Model<TModels>\n): NamedModel<TModels> {\n\treturn {\n\t\tname,\n\t\treducers: {},\n\t\t...model,\n\t}\n}\n","import { Middleware } from 'redux'\nimport {\n\tAction,\n\tConfig,\n\tExposedFunction,\n\tModels,\n\tNamedModel,\n\tObjectNotAFunction,\n\tPlugin,\n\tRematchBag,\n\tRematchStore,\n\tModelDispatcher,\n\tRematchDispatch,\n} from './types'\nimport createReduxStore, {\n\tcreateModelReducer,\n\tcreateRootReducer,\n} from './reduxStore'\nimport { createReducerDispatcher, createEffectDispatcher } from './dispatcher'\nimport { validateModel } from './validate'\nimport createRematchBag from './bag'\n\nexport default function createRematchStore<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(config: Config<TModels, TExtraModels>): RematchStore<TModels, TExtraModels> {\n\t// setup rematch 'bag' for storing useful values and functions\n\tconst bag = createRematchBag(config)\n\n\t// add middleware for handling effects\n\tbag.reduxConfig.middlewares.push(createEffectsMiddleware(bag))\n\n\t// collect middlewares from plugins\n\tbag.forEachPlugin('createMiddleware', (createMiddleware) => {\n\t\tbag.reduxConfig.middlewares.push(createMiddleware(bag))\n\t})\n\n\tconst reduxStore = createReduxStore(bag)\n\n\tlet rematchStore = {\n\t\t...reduxStore,\n\t\tname: config.name,\n\t\taddModel(model: NamedModel<TModels>) {\n\t\t\tvalidateModel(model)\n\t\t\tcreateModelReducer(bag, model)\n\t\t\tprepareModel(rematchStore, model)\n\t\t\tenhanceModel(rematchStore, bag, model)\n\t\t\treduxStore.replaceReducer(createRootReducer(bag))\n\t\t\treduxStore.dispatch({ type: '@@redux/REPLACE' })\n\t\t},\n\t} as RematchStore<TModels, TExtraModels>\n\n\taddExposed(rematchStore, config.plugins)\n\n\t/**\n\t * generate dispatch[modelName][actionName] for all reducers and effects\n\t *\n\t * Note: To have circular models accessible in effects method with destructing,\n\t *       ensure that model generation and effects generation execute in\n\t *       different steps.\n\t */\n\tbag.models.forEach((model) => prepareModel(rematchStore, model))\n\tbag.models.forEach((model) => enhanceModel(rematchStore, bag, model))\n\n\tbag.forEachPlugin('onStoreCreated', (onStoreCreated) => {\n\t\trematchStore = onStoreCreated(rematchStore, bag) || rematchStore\n\t})\n\n\treturn rematchStore\n}\n\nfunction createEffectsMiddleware<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(bag: RematchBag<TModels, TExtraModels>): Middleware {\n\treturn (store) =>\n\t\t(next) =>\n\t\t(action: Action): any => {\n\t\t\tif (action.type in bag.effects) {\n\t\t\t\t// first run reducer action if exists\n\t\t\t\tnext(action)\n\n\t\t\t\t// then run the effect and return its result\n\t\t\t\treturn (bag.effects as any)[action.type](\n\t\t\t\t\taction.payload,\n\t\t\t\t\tstore.getState(),\n\t\t\t\t\taction.meta\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn next(action)\n\t\t}\n}\n\nfunction prepareModel<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTModel extends NamedModel<TModels>\n>(rematchStore: RematchStore<TModels, TExtraModels>, model: TModel): void {\n\tconst modelDispatcher = {} as ModelDispatcher<TModel, TModels>\n\n\t// inject model so effects creator can access it\n\trematchStore.dispatch[`${model.name}` as keyof RematchDispatch<TModels>] =\n\t\tmodelDispatcher\n\n\tcreateReducerDispatcher(rematchStore, model)\n}\n\nfunction enhanceModel<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTModel extends NamedModel<TModels>\n>(\n\trematchStore: RematchStore<TModels, TExtraModels>,\n\tbag: RematchBag<TModels, TExtraModels>,\n\tmodel: TModel\n): void {\n\tcreateEffectDispatcher(rematchStore, bag, model)\n\n\tbag.forEachPlugin('onModel', (onModel) => {\n\t\tonModel(model, rematchStore)\n\t})\n}\n\n/**\n * Adds properties exposed by plugins into the Rematch instance. If a exposed\n * property is a function, it passes rematch as the first argument.\n *\n * If you're implementing a plugin in TypeScript, extend Rematch namespace by\n * adding the properties that you exposed from your plugin.\n */\nfunction addExposed<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tstore: RematchStore<TModels, TExtraModels>,\n\tplugins: Plugin<TModels, TExtraModels>[]\n): void {\n\tplugins.forEach((plugin) => {\n\t\tif (!plugin.exposed) return\n\t\tconst pluginKeys = Object.keys(plugin.exposed)\n\t\tpluginKeys.forEach((key) => {\n\t\t\tif (!plugin.exposed) return\n\t\t\tconst exposedItem = plugin.exposed[key] as\n\t\t\t\t| ExposedFunction<TModels, TExtraModels>\n\t\t\t\t| ObjectNotAFunction\n\t\t\tconst isExposedFunction = typeof exposedItem === 'function'\n\n\t\t\tstore[key] = isExposedFunction\n\t\t\t\t? (...params: any[]): any =>\n\t\t\t\t\t\t(exposedItem as ExposedFunction<TModels, TExtraModels>)(\n\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\t...params\n\t\t\t\t\t\t)\n\t\t\t\t: Object.create(plugin.exposed[key])\n\t\t})\n\t})\n}\n","import { InitConfig, Config, Models } from './types'\nimport { validateConfig, validatePlugin } from './validate'\n\nlet count = 0\n\n/**\n * Builds complete Rematch config using default values for properties not\n * supplied by the user. Additionally, applies changes to the config made by\n * the plugins selected by the user.\n */\nexport default function createConfig<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tinitConfig: InitConfig<TModels, TExtraModels>\n): Config<TModels, TExtraModels> {\n\tconst storeName = initConfig.name ?? `Rematch Store ${count}`\n\n\tcount += 1\n\n\tconst config = {\n\t\tname: storeName,\n\t\tmodels: initConfig.models || {},\n\t\tplugins: initConfig.plugins || [],\n\t\tredux: {\n\t\t\treducers: {},\n\t\t\trootReducers: {},\n\t\t\tenhancers: [],\n\t\t\tmiddlewares: [],\n\t\t\t...initConfig.redux,\n\t\t\tdevtoolOptions: {\n\t\t\t\tname: storeName,\n\t\t\t\t...(initConfig.redux?.devtoolOptions ?? {}),\n\t\t\t},\n\t\t},\n\t} as Config<TModels, TExtraModels>\n\n\tvalidateConfig(config)\n\n\t// Apply changes to the config required by plugins\n\tconfig.plugins.forEach((plugin) => {\n\t\tif (plugin.config) {\n\t\t\t// Collect new models\n\t\t\tconfig.models = merge(config.models, plugin.config.models)\n\n\t\t\t// Collect redux configuration changes\n\t\t\tif (plugin.config.redux) {\n\t\t\t\tconfig.redux.initialState = merge(\n\t\t\t\t\tconfig.redux.initialState,\n\t\t\t\t\tplugin.config.redux.initialState\n\t\t\t\t)\n\n\t\t\t\tconfig.redux.reducers = merge(\n\t\t\t\t\tconfig.redux.reducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\n\t\t\t\tconfig.redux.rootReducers = merge(\n\t\t\t\t\tconfig.redux.rootReducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\n\t\t\t\tconfig.redux.enhancers = [\n\t\t\t\t\t...config.redux.enhancers,\n\t\t\t\t\t...(plugin.config.redux.enhancers || []),\n\t\t\t\t]\n\n\t\t\t\tconfig.redux.middlewares = [\n\t\t\t\t\t...config.redux.middlewares,\n\t\t\t\t\t...(plugin.config.redux.middlewares || []),\n\t\t\t\t]\n\n\t\t\t\tconfig.redux.combineReducers =\n\t\t\t\t\tconfig.redux.combineReducers || plugin.config.redux.combineReducers\n\n\t\t\t\tconfig.redux.createStore =\n\t\t\t\t\tconfig.redux.createStore || plugin.config.redux.createStore\n\t\t\t}\n\t\t}\n\n\t\tvalidatePlugin(plugin)\n\t})\n\n\treturn config as Config<TModels, TExtraModels>\n}\n\n/**\n * Shallow merges original object with the extra object, giving the precedence\n * to the original object.\n */\nfunction merge<\n\tT extends Record<string, unknown>,\n\tU extends Record<string, unknown> = T\n>(original: T, extra?: U): T | (T & U) {\n\treturn extra ? { ...extra, ...original } : original\n}\n","import createRematchStore from './rematchStore'\nimport { InitConfig, Models, RematchStore, ModelCreator } from './types'\nimport createConfig from './config'\n\n/**\n * Prepares a complete configuration and creates a Rematch store.\n */\nexport const init = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels> = Record<string, never>\n>(\n\tinitConfig?: InitConfig<TModels, TExtraModels>\n): RematchStore<TModels, TExtraModels> => {\n\tconst config = createConfig(initConfig || {})\n\treturn createRematchStore(config)\n}\n\nexport const createModel: ModelCreator = () => (mo) => mo as any\n\nexport default {\n\tinit,\n\tcreateModel,\n}\n\nexport * from './types'\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLAC e navigations for data routers\n   * behave the same as POP\n   *\n   * @param location The incoming location from router.navigate()\n   */\n  encodeLocation(location: Location): Location;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n    encodeLocation(location) {\n      return location;\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n      if (listener) {\n        listener({ action, location: getCurrentLocation() });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport function createURL(location: Location | string): URL {\n  // window.location.origin is \"null\" (the literal string value) in Firefox\n  // under certain conditions, notably when serving from a local HTML file\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n  let base =\n    typeof window !== \"undefined\" &&\n    typeof window.location !== \"undefined\" &&\n    window.location.origin !== \"null\"\n      ? window.location.origin\n      : \"unknown://unknown\";\n  let href = typeof location === \"string\" ? location : createPath(location);\n  return new URL(href, base);\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function handlePop() {\n    action = Action.Pop;\n    if (listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    encodeLocation(location) {\n      // Encode a Location the same way window.location would\n      let url = createURL(createPath(location));\n      return {\n        ...location,\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type FormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: Exclude<FormMethod, \"get\">;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `${string}:${infer Param}`\n    ? Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  parentPath: number[] = [],\n  allIds: Set<string> = new Set<string>()\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !allIds.has(id),\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = { ...route, id };\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        children: route.children\n          ? convertRoutesToDataRoutes(route.children, treePath, allIds)\n          : undefined,\n      };\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  path: Path,\n  params: {\n    [key in PathParam<Path>]: string;\n  } = {} as any\n): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key: PathParam<Path>) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n      const star = \"*\" as PathParam<Path>;\n\n      if (params[star] == null) {\n        // If no splat was provided, trim the trailing slash _unless_ it's\n        // the entire path\n        return str === \"/*\" ? \"/\" : \"\";\n      }\n\n      // Apply the splat\n      return `${prefix}${params[star]}`;\n    });\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n/**\n * @private\n */\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeys: Set<string | number> = new Set<string | number>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscriber?: (aborted: boolean) => void = undefined;\n  data: Record<string, unknown>;\n\n  constructor(data: Record<string, unknown>) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n  }\n\n  private trackPromise(\n    key: string | number,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string | number,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn: (aborted: boolean) => void) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport function defer(data: Record<string, unknown>) {\n  return new DeferredData(data);\n}\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n\n  constructor(status: number, statusText: string | undefined, data: any) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\nexport function isRouteErrorResponse(e: any): e is ErrorResponse {\n  return e instanceof ErrorResponse;\n}\n","import type { History, Location, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  createURL,\n  parsePath,\n} from \"./history\";\nimport type {\n  DataResult,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n} from \"./utils\";\nimport {\n  DeferredData,\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): void;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  basename?: string;\n  routes: AgnosticRouteObject[];\n  history: History;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(request: Request): Promise<StaticHandlerContext | Response>;\n  queryRoute(request: Request, routeId?: string): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  formMethod?: FormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Tuple of [key, href, DataRouteMatch, DataRouteMatch[]] for a revalidating\n * fetcher.load()\n */\ntype RevalidatingFetcher = [\n  string,\n  string,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteMatch[]\n];\n\n/**\n * Tuple of [href, DataRouteMatch, DataRouteMatch[]] for an active\n * fetcher.load()\n */\ntype FetchLoadMatch = [\n  string,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteMatch[]\n];\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes);\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  let initialScrollRestored = false;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let { matches, route, error } = getNotFoundMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    !initialMatches.some((m) => m.route.loader) || init.hydrationData != null;\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location }) =>\n        startNavigation(historyAction, location)\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - The location we've finished loading is different from the submission\n    //   location, indicating we redirected from the action (avoids false\n    //   positives for loading/submissionRedirect when actionData returned\n    //   on a prior submission)\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      state.navigation.state === \"loading\" &&\n      state.navigation.formAction?.split(\"?\")[0] === location.pathname;\n\n    // Always preserve any existing loaderData from re-used routes\n    let newLoaderData = newState.loaderData\n      ? {\n          loaderData: mergeLoaderData(\n            state.loaderData,\n            newState.loaderData,\n            newState.matches || []\n          ),\n        }\n      : {};\n\n    updateState({\n      // Clear existing actionData on any completed navigation beyond the original\n      // action, unless we're currently finishing the loading/actionReload state.\n      // Do this prior to spreading in newState in case we got back to back actions\n      ...(isActionReload ? {} : { actionData: null }),\n      ...newState,\n      ...newLoaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData\n        ? false\n        : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset,\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(to, opts);\n\n    let location = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    location = init.history.encodeLocation(location);\n\n    let historyAction =\n      (opts && opts.replace) === true || submission != null\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error,\n      } = getNotFoundMatches(dataRoutes);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createRequest(\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (opts && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = getMethodNotAllowedResult(location);\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        router.basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location: createLocation(state.location, result.location),\n        ...submission,\n      };\n      await startRedirectNavigation(\n        result,\n        redirectNavigation,\n        opts && opts.replace\n      );\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      state,\n      matches,\n      submission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      pendingActionData,\n      pendingError,\n      fetchLoadMatches\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null,\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(([key]) => {\n        let fetcher = state.fetchers.get(key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null,\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(([key]) =>\n      fetchControllers.set(key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach(([key]) => fetchControllers.delete(key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation, replace);\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n    if (!matches) {\n      setFetcherError(key, routeId, new ErrorResponse(404, \"Not Found\", null));\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, [path, match, matches]);\n    handleFetcherLoader(key, routeId, path, match, matches);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let { error } = getMethodNotAllowedResult(path);\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      router.basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      let redirectNavigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location: createLocation(state.location, actionResult.location),\n        ...submission,\n      };\n      await startRedirectNavigation(actionResult, redirectNavigation);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createRequest(\n      nextLocation,\n      abortController.signal\n    );\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(dataRoutes, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      { [match.route.id]: actionResult.data },\n      undefined, // No need to send through errors since we short circuit above\n      fetchLoadMatches\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter(([staleKey]) => staleKey !== key)\n      .forEach(([staleKey]) => {\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(([staleKey]) =>\n      fetchControllers.delete(staleKey)\n    );\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation);\n      return;\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[]\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: existingFetcher && existingFetcher.data,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      router.basename\n    );\n\n    // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      let redirectNavigation = getLoaderRedirect(state, result);\n      await startRedirectNavigation(result, redirectNavigation);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    redirect: RedirectResult,\n    navigation: Navigation,\n    replace?: boolean\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    invariant(\n      navigation.location,\n      \"Expected a location on the redirect navigation\"\n    );\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    await startNavigation(redirectHistoryAction, navigation.location, {\n      overrideNavigation: navigation,\n    });\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\"loader\", request, match, matches, router.basename)\n      ),\n      ...fetchersToLoad.map(([, href, match, fetchMatches]) =>\n        callLoaderOrAction(\n          \"loader\",\n          createRequest(href, request.signal),\n          match,\n          fetchMatches,\n          router.basename\n        )\n      ),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map(([, , match]) => match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst validActionMethods = new Set([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"]);\nconst validRequestMethods = new Set([\"GET\", \"HEAD\", ...validActionMethods]);\n\nexport function unstable_createStaticHandler(\n  routes: AgnosticRouteObject[]\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to unstable_createStaticHandler\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (!validRequestMethods.has(request.method)) {\n      let {\n        matches: methodNotAllowedMatches,\n        route,\n        error,\n      } = getMethodNotAllowedMatches(dataRoutes);\n      return {\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    } else if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error,\n      } = getNotFoundMatches(dataRoutes);\n      return {\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    }\n\n    let result = await queryImpl(request, location, matches);\n    if (result instanceof Response) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated thrown Response (such as a\n   * 404 or 405) will have a custom X-Remix-Router-Error: \"yes\" header on it\n   * in order to differentiate from responses thrown from user actions/loaders.\n   */\n  async function queryRoute(request: Request, routeId?: string): Promise<any> {\n    let url = new URL(request.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (!validRequestMethods.has(request.method)) {\n      throw createRouterErrorResponse(null, {\n        status: 405,\n        statusText: \"Method Not Allowed\",\n      });\n    } else if (!matches) {\n      throw createRouterErrorResponse(null, {\n        status: 404,\n        statusText: \"Not Found\",\n      });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (!match) {\n      throw createRouterErrorResponse(null, {\n        status: 404,\n        statusText: \"Not Found\",\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, match);\n    if (result instanceof Response) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    let routeData = [result.actionData, result.loaderData].find((v) => v);\n    return Object.values(routeData || {})[0];\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (validActionMethods.has(request.method)) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, routeMatch);\n      return result instanceof Response\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\"> | Response> {\n    let result: DataResult;\n    if (!actionMatch.route.action) {\n      if (isRouteRequest) {\n        throw createRouterErrorResponse(null, {\n          status: 405,\n          statusText: \"Method Not Allowed\",\n        });\n      }\n      result = getMethodNotAllowedResult(request.url);\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        undefined, // Basename not currently supported in static handlers\n        true,\n        isRouteRequest\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          matches: [actionMatch],\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [boundaryMatch.route.id]: result.error,\n          },\n          // Note: statusCode + headers are unused here since queryRoute will\n          // return the raw Response or value\n          statusCode: 500,\n          loaderHeaders: {},\n          actionHeaders: {},\n        };\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, undefined, {\n        [boundaryMatch.route.id]: result.error,\n      });\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(request, matches);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<StaticHandlerContext, \"location\" | \"actionData\" | \"actionHeaders\">\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter((m) => m.route.loader);\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          undefined, // Basename not currently supported in static handlers\n          true,\n          isRouteRequest\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n    results.forEach((result) => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    });\n\n    // Process and commit output from loaders\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError\n    );\n\n    return {\n      ...context,\n      matches,\n    };\n  }\n\n  function createRouterErrorResponse(\n    body: BodyInit | null | undefined,\n    init: ResponseInit\n  ) {\n    return new Response(body, {\n      ...init,\n      headers: {\n        ...init.headers,\n        \"X-Remix-Router-Error\": \"yes\",\n      },\n    });\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || (!(\"formMethod\" in opts) && !(\"formData\" in opts))) {\n    return { path };\n  }\n\n  // Create a Submission on non-GET navigations\n  if (opts.formMethod != null && opts.formMethod !== \"get\") {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: stripHashFromPath(path),\n        formEncType:\n          (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n        formData: opts.formData,\n      },\n    };\n  }\n\n  // No formData to flatten for GET submission\n  if (!opts.formData) {\n    return { path };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData);\n    // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n    if (\n      isFetcher &&\n      parsedPath.search &&\n      hasNakedIndexQuery(parsedPath.search)\n    ) {\n      searchParams.append(\"index\", \"\");\n    }\n    parsedPath.search = `?${searchParams}`;\n  } catch (e) {\n    return {\n      path,\n      error: new ErrorResponse(\n        400,\n        \"Bad Request\",\n        \"Cannot submit binary form data using GET\"\n      ),\n    };\n  }\n\n  return { path: createPath(parsedPath) };\n}\n\nfunction getLoaderRedirect(\n  state: RouterState,\n  redirect: RedirectResult\n): Navigation {\n  let { formMethod, formAction, formEncType, formData } = state.navigation;\n  let navigation: NavigationStates[\"Loading\"] = {\n    state: \"loading\",\n    location: createLocation(state.location, redirect.location),\n    formMethod: formMethod || undefined,\n    formAction: formAction || undefined,\n    formEncType: formEncType || undefined,\n    formData: formData || undefined,\n  };\n  return navigation;\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  pendingActionData?: RouteData,\n  pendingError?: RouteData,\n  fetchLoadMatches?: Map<string, FetchLoadMatch>\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : null;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter(\n    (match, index) =>\n      match.route.loader != null &&\n      (isNewLoader(state.loaderData, state.matches[index], match) ||\n        // If this route had a pending deferred cancelled it must be revalidated\n        cancelledDeferredRoutes.some((id) => id === match.route.id) ||\n        shouldRevalidateLoader(\n          state.location,\n          state.matches[index],\n          submission,\n          location,\n          match,\n          isRevalidationRequired,\n          actionResult\n        ))\n  );\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches &&\n    fetchLoadMatches.forEach(([href, match, fetchMatches], key) => {\n      // This fetcher was cancelled from a prior action submission - force reload\n      if (cancelledFetcherLoads.includes(key)) {\n        revalidatingFetchers.push([key, href, match, fetchMatches]);\n      } else if (isRevalidationRequired) {\n        let shouldRevalidate = shouldRevalidateLoader(\n          href,\n          match,\n          submission,\n          href,\n          match,\n          isRevalidationRequired,\n          actionResult\n        );\n        if (shouldRevalidate) {\n          revalidatingFetchers.push([key, href, match, fetchMatches]);\n        }\n      }\n    });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  currentLocation: string | Location,\n  currentMatch: AgnosticDataRouteMatch,\n  submission: Submission | undefined,\n  location: string | Location,\n  match: AgnosticDataRouteMatch,\n  isRevalidationRequired: boolean,\n  actionResult: DataResult | undefined\n) {\n  let currentUrl = createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createURL(location);\n  let nextParams = match.params;\n\n  // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n  let defaultShouldRevalidate =\n    isNewRouteInstance(currentMatch, match) ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search ||\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate,\n    });\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  basename: string | undefined,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false\n): Promise<DataResult> {\n  let resultType;\n  let result;\n\n  // Setup a promise we can race against so that abort signals short circuit\n  let reject: () => void;\n  let abortPromise = new Promise((_, r) => (reject = r));\n  let onReject = () => reject();\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant<Function>(\n      handler,\n      `Could not find the ${type} to run on the \"${match.route.id}\" route`\n    );\n\n    result = await Promise.race([\n      handler({ request, params: match.params }),\n      abortPromise,\n    ]);\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (result instanceof Response) {\n    let status = result.status;\n\n    // Process redirects\n    if (status >= 300 && status <= 399) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in redirects\n      let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n      let routePathnames = getPathContributingMatches(activeMatches).map(\n        (match) => match.pathnameBase\n      );\n      let requestPath = createURL(request.url).pathname;\n      let resolvedLocation = resolveTo(location, routePathnames, requestPath);\n      invariant(\n        createPath(resolvedLocation),\n        `Unable to resolve redirect location: ${result.headers.get(\"Location\")}`\n      );\n\n      // Prepend the basename to the redirect location if we have one\n      if (basename) {\n        let path = resolvedLocation.pathname;\n        resolvedLocation.pathname =\n          path === \"/\" ? basename : joinPaths([basename, path]);\n      }\n\n      location = createPath(resolvedLocation);\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    if (contentType && contentType.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (result instanceof DeferredData) {\n    return { type: ResultType.deferred, deferredData: result };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\nfunction createRequest(\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission) {\n    let { formMethod, formEncType, formData } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(\n      typeof value === \"string\",\n      'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' +\n        'please use \"multipart/form-data\" instead.'\n    );\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds?: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error,\n      });\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds && activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data;\n      // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data;\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key, , match] = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[]\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  matches.forEach((match) => {\n    let id = match.route.id;\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(\n  routes: AgnosticDataRouteObject[],\n  status: number,\n  statusText: string\n): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n  error: ErrorResponse;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-${status}-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n    error: new ErrorResponse(status, statusText, null),\n  };\n}\n\nfunction getNotFoundMatches(routes: AgnosticDataRouteObject[]) {\n  return getShortCircuitMatches(routes, 404, \"Not Found\");\n}\n\nfunction getMethodNotAllowedMatches(routes: AgnosticDataRouteObject[]) {\n  return getShortCircuitMatches(routes, 405, \"Method Not Allowed\");\n}\n\nfunction getMethodNotAllowedResult(path: Location | string): ErrorResult {\n  let href = typeof path === \"string\" ? path : createPath(path);\n  console.warn(\n    \"You're trying to submit to a route that does not have an action.  To \" +\n      \"fix this, please add an `action` function to the route for \" +\n      `[${href}]`\n  );\n  return {\n    type: ResultType.error,\n    error: new ErrorResponse(405, \"Method Not Allowed\", \"\"),\n  };\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!(result instanceof Response)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    obj.response instanceof Response &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","// 复姓\nmodule.exports = {\n  \"万俟\": [[\"mò\"], [\"qí\"]],\n  \"上官\": [[\"shàng\"], [\"guān\"]],\n  \"东方\": [[\"dōng\"], [\"fāng\"]],\n  \"东郭\": [[\"dōng\"], [\"guō\"]],\n  \"东门\": [[\"dōng\"], [\"mén\"]],\n  \"乐正\": [[\"yuè\"], [\"zhèng\"]],\n  \"亓官\": [[\"qí\"], [\"guān\"]],\n  \"仉督\": [[\"zhǎng\"], [\"dū\"]],\n  \"令狐\": [[\"líng\"], [\"hú\"]],\n  \"仲孙\": [[\"zhòng\"], [\"sūn\"]],\n  \"公冶\": [[\"gōng\"], [\"yě\"]],\n  \"公孙\": [[\"gōng\"], [\"sūn\"]],\n  \"公羊\": [[\"gōng\"], [\"yáng\"]],\n  \"公良\": [[\"gōng\"], [\"liáng\"]],\n  \"公西\": [[\"gōng\"], [\"xī\"]],\n  \"单于\": [[\"chán\"], [\"yú\"]],\n  \"南宫\": [[\"nán\"], [\"gōng\"]],\n  \"南门\": [[\"nán\"], [\"mén\"]],\n  \"司寇\": [[\"sī\"], [\"kòu\"]],\n  \"司徒\": [[\"sī\"], [\"tú\"]],\n  \"司空\": [[\"sī\"], [\"kōng\"]],\n  \"司马\": [[\"sī\"], [\"mǎ\"]],\n  \"呼延\": [[\"hū\"], [\"yán\"]],\n  \"壤驷\": [[\"rǎng\"], [\"sì\"]],\n  \"夏侯\": [[\"xià\"], [\"hóu\"]],\n  \"太叔\": [[\"tài\"], [\"shū\"]],\n  \"夹谷\": [[\"jiá\"], [\"gǔ\"]],\n  \"子车\": [[\"zǐ\"], [\"jū\"]],\n  \"宇文\": [[\"yǔ\"], [\"wén\"]],\n  \"宗政\": [[\"zōng\"], [\"zhèng\"]],\n  \"宰父\": [[\"zǎi\"], [\"fǔ\"]],\n  \"尉迟\": [[\"yù\"], [\"chí\"]],\n  \"左丘\": [[\"zuǒ\"], [\"qiū\"]],\n  \"巫马\": [[\"wū\"], [\"mǎ\"]],\n  \"慕容\": [[\"mù\"], [\"róng\"]],\n  \"拓跋\": [[\"tuò\"], [\"bá\"]],\n  \"梁丘\": [[\"liáng\"], [\"qiū\"]],\n  \"榖梁\": [[\"gǔ\"], [\"liáng\"]],\n  \"欧阳\": [[\"ōu\"], [\"yáng\"]],\n  \"段干\": [[\"duàn\"], [\"gān\"]],\n  \"淳于\": [[\"chún\"], [\"yú\"]],\n  \"漆雕\": [[\"qī\"], [\"diāo\"]],\n  \"澹台\": [[\"tán\"], [\"tái\"]],\n  \"濮阳\": [[\"pú\"], [\"yáng\"]],\n  \"申屠\": [[\"shēn\"], [\"tú\"]],\n  \"百里\": [[\"bǎi\"], [\"lǐ\"]],\n  \"皇甫\": [[\"huáng\"], [\"pǔ\"]],\n  \"端木\": [[\"duān\"], [\"mù\"]],\n  \"第五\": [[\"dì\"], [\"wǔ\"]],\n  \"羊舌\": [[\"yáng\"], [\"shé\"]],\n  \"西门\": [[\"xī\"], [\"mén\"]],\n  \"诸葛\": [[\"zhū\"], [\"gě\"]],\n  \"赫连\": [[\"hè\"], [\"lián\"]],\n  \"轩辕\": [[\"xuān\"], [\"yuán\"]],\n  \"钟离\": [[\"zhōng\"], [\"lí\"]],\n  \"长孙\": [[\"zhǎng\"], [\"sūn\"]],\n  \"闻人\": [[\"wén\"], [\"rén\"]],\n  \"闾丘\": [[\"lǘ\"], [\"qiū\"]],\n  \"颛孙\": [[\"zhuān\"], [\"sūn\"]],\n  \"鲜于\": [[\"xiān\"], [\"yú\"]],\n};\n","module.exports = {\n\"a\":\"\",\n\"ā\":\"吖锕錒\",\n\"á\":\"嗄\",\n\"ǎ\":\"\",\n\"à\":\"\",\n\"āi\":\"哎哀埃娭溾嗳銰锿噯諰鎄\",\n\"ái\":\"啀娾捱皑凒隑嵦溰嘊敱敳皚磑癌\",\n\"ǎi\":\"毐昹娾欸絠嗳矮蔼躷噯濭藹譪霭靄\",\n\"ài\":\"艾伌欬爱砹硋堨焥隘嗌嗳塧嫒愛碍叆暧瑷僾噯壒嬡懓薆鴱懝曖璦賹餲皧瞹馤礙譺鑀鱫靉\",\n\"ān\":\"安侒峖桉氨偣庵菴谙啽媕萻葊痷腤裺鹌蓭誝鞍鞌盦諳馣鮟盫鵪韽鶕\",\n\"án\":\"玵啽雸儑\",\n\"ǎn\":\"垵俺唵埯铵揞晻罯銨\",\n\"àn\":\"厈屵屽犴岸咹按洝荌案胺豻堓隌晻暗貋儑錌闇黯\",\n\"āng\":\"肮骯\",\n\"áng\":\"卬岇昂昻\",\n\"ǎng\":\"\",\n\"àng\":\"枊盎醠\",\n\"āo\":\"泑柪眑梎軪熝爊\",\n\"áo\":\"敖厫隞嗷嗸嶅廒慠滶獓蔜遨骜摮獒璈磝墽翱聱螯翶謷謸翺鳌鏕鏖鰲鷔鼇\",\n\"ǎo\":\"艹抝芺袄眑郩镺媪媼襖\",\n\"ào\":\"岙扷抝坳垇岰柪傲奡軪奧嫯嶅慠澚隩墺嶴懊擙澳鏊驁\",\n\"ba\":\"罷\",\n\"bā\":\"丷八仈巴叭朳玐夿岜扷芭峇柭疤哱哵捌笆粑羓蚆釟豝鲃魞\",\n\"bá\":\"叐犮抜妭拔茇炦癹胈菝詙跋軷颰魃鼥\",\n\"bǎ\":\"钯鈀靶\",\n\"bà\":\"坝弝爸皅垻跁鲃魞鲅鲌罷鮁鮊覇矲霸壩灞欛\",\n\"bāi\":\"挀掰擘\",\n\"bái\":\"白\",\n\"bǎi\":\"百佰栢瓸捭竡粨絔摆擺襬\",\n\"bài\":\"呗庍拝败拜唄敗猈稗粺薭贁韛\",\n\"bān\":\"扳攽朌肦班般颁斑搬斒頒搫瘢鳻螌褩癍辬\",\n\"bǎn\":\"阪坂岅昄板版瓪钣粄舨鈑蝂魬闆\",\n\"bàn\":\"办半伴扮坢姅怑绊柈秚湴絆跘鉡靽辦瓣\",\n\"bāng\":\"邦垹帮捠梆浜邫幇幚縍幫鞤\",\n\"bǎng\":\"绑綁牓膀髈\",\n\"bàng\":\"玤挷蚄傍棒棓硥谤塝搒稖蒡蛖蜯镑縍艕謗鎊\",\n\"bāo\":\"勹包佨孢苞枹胞剝笣煲龅裦蕔褒襃闁齙\",\n\"báo\":\"窇雹\",\n\"bǎo\":\"宝怉饱保鸨宲珤堢媬葆寚飹飽褓駂鳵緥鴇賲藵寳寶靌\",\n\"bào\":\"勽犳报怉抱豹趵铇菢蚫袌報鉋鲍骲髱虣鮑儤曓嚗曝爆犦忁鑤\",\n\"bei\":\"呗唄\",\n\"bēi\":\"陂卑杯柸盃庳桮悲揹棓椑碑鹎箄諀鞞藣鵯\",\n\"běi\":\"鉳\",\n\"bèi\":\"贝孛狈貝邶备昁杮牬苝郥钡俻倍悖狽偝偹梖珼鄁備僃惫棑棓焙琲軰辈愂碚禙蓓蛽犕褙誖鞁骳輩鋇憊糒鞴鐾\",\n\"bēn\":\"泍贲栟喯犇賁锛漰錛蟦\",\n\"běn\":\"夲本苯奙畚翉楍\",\n\"bèn\":\"坋坌泍炃倴捹桳渀笨逩撪\",\n\"bēng\":\"伻祊奟崩絣閍嗙嵭痭嘣綳繃\",\n\"béng\":\"甮甭\",\n\"běng\":\"埄埲菶琣琫綳繃鞛\",\n\"bèng\":\"泵迸堋逬揼跰塴綳甏镚繃蹦鏰\",\n\"bī\":\"皀屄偪毴逼楅榌豍螕鵖鲾鎞鰏\",\n\"bí\":\"荸鼻嬶\",\n\"bǐ\":\"匕比夶朼佊吡妣沘疕纰彼毞肶柀秕俾娝笔粃紕舭啚崥筆鄙聛貏\",\n\"bì\":\"币必毕闬闭佖坒庇芘诐邲咇妼怭怶畁畀肶苾哔柲毖珌畐疪祕胇荜贲陛毙狴畢笓粊袐铋婢敝旇梐紴翍萆萞閇閈閉堛弼弻愊愎湢皕禆筚詖貱賁赑嗶彃滗滭煏痺痹睤睥腷蓖蓽蜌裨跸鉍閟飶幣弊熚獙碧稫箅箆綼蔽鄪馝幤潷獘罼襅駜髲壁嬖廦篦篳縪薜觱避鮅斃濞蹕鞞髀奰璧鄨鎞鏎饆繴襣襞鞸韠魓躃躄驆鶝朇贔鐴鷝鷩鼊\",\n\"biān\":\"辺边炞砭笾猵编萹煸牑甂箯糄編臱蝙鞕獱邉鍽鳊邊鞭鯾鯿籓籩\",\n\"biǎn\":\"贬疺窆匾貶惼揙碥稨褊糄鴘藊覵鶣\",\n\"biàn\":\"卞弁忭抃汳汴苄釆变峅玣変昪覍徧缏遍閞辡緶艑諚辧辨辩辫辮辯變\",\n\"biāo\":\"灬杓标飑骉髟彪淲猋脿颩僄墂幖摽滮蔈颮骠標熛膔膘麃瘭磦镖飚飙儦檦篻颷瀌藨謤爂臕贆鏢穮镳飈飆飊飇鑣驫\",\n\"biáo\":\"嫑\",\n\"biǎo\":\"表婊裱諘褾錶檦\",\n\"biào\":\"俵摽鳔\",\n\"biē\":\"柭憋蟞癟鳖鱉鼈虌龞\",\n\"bié\":\"別柲莂蛂徶襒蟞蹩\",\n\"biě\":\"癟\",\n\"biè\":\"別彆\",\n\"bīn\":\"汃邠玢砏宾彬梹傧斌椕滨缤槟瑸豩賓賔镔儐濒頻濱濵虨豳檳璸瀕霦繽鑌顮\",\n\"bǐn\":\"\",\n\"bìn\":\"摈殡膑髩儐擯鬂殯臏髌鬓髕鬢\",\n\"bīng\":\"冫仌仒氷冰兵幷栟掤梹蛃絣槟鋲檳\",\n\"bǐng\":\"丙邴陃怲抦秉苪昞昺柄炳饼眪偋屛寎棅琕禀稟鈵鉼鞆餅餠鞞鞸\",\n\"bìng\":\"並併幷枋垪庰倂栤病窉竝偋傡寎摒誁鮩靐\",\n\"bo\":\"啵蔔噃\",\n\"bō\":\"癶拨波癷玻剝哱盋砵趵钵饽紴缽菠袰溊碆鉢僠嶓撥播餑磻礡蹳皪驋鱍\",\n\"bó\":\"仢彴肑驳帛狛瓝苩侼柭胉郣亳挬浡瓟秡袯钹铂桲淿脖舶萡袹博殕渤葧鹁愽搏猼鉑鈸馎鲌僰榑煿牔箔膊艊誖馛駁踣鋍镈壆馞駮鮊穛襏謈嚗懪簙鎛餺鵓糪髆髉欂襮礴鑮\",\n\"bǒ\":\"癷蚾跛\",\n\"bò\":\"孹擗擘檗檘譒蘗\",\n\"bū\":\"峬庯逋钸晡鈽誧餔錻鯆鵏\",\n\"bú\":\"鳪轐醭\",\n\"bǔ\":\"卟补哺捕捬補鸔\",\n\"bù\":\"布佈吥步咘怖抪歩歨柨钚勏埔埗悑捗荹部埠婄瓿鈈廍蔀箁踄郶篰餢\",\n\"cā\":\"嚓擦攃\",\n\"cǎ\":\"礤礸\",\n\"cà\":\"遪囃\",\n\"cāi\":\"偲猜\",\n\"cái\":\"才扐材财財裁纔\",\n\"cǎi\":\"毝倸啋埰婇寀彩採棌睬跴綵踩\",\n\"cài\":\"埰寀菜蔡縩\",\n\"cān\":\"參叄飡骖叅喰湌傪嬠餐爘驂囋\",\n\"cán\":\"残蚕惭殘慚摲蝅慙蠺蠶\",\n\"cǎn\":\"惨朁慘憯穇篸黪黲\",\n\"càn\":\"灿孱傪粲嘇摻儏澯薒燦璨謲鏒\",\n\"cāng\":\"仓仺伧沧苍玱鸧倉舱傖凔嵢滄獊蒼瑲濸篬艙螥鶬\",\n\"cáng\":\"匨臧欌鑶\",\n\"càng\":\"賶\",\n\"cāo\":\"撡操糙\",\n\"cáo\":\"曺曹傮嘈嶆慒漕蓸槽褿艚螬鏪\",\n\"cǎo\":\"屮艸草愺慅懆騲\",\n\"cào\":\"肏鄵襙鼜\",\n\"cè\":\"夨冊册厕恻拺测荝敇畟側厠笧粣萗廁惻測策萴筞筴蓛箣憡簎\",\n\"cēn\":\"參叄叅嵾穇篸\",\n\"cén\":\"岑汵埁涔笒\",\n\"cēng\":\"噌\",\n\"céng\":\"层曽層嶒橧竲驓\",\n\"cèng\":\"蹭\",\n\"cī\":\"呰呲玼疵趀偨跐縒骴髊蠀齹\",\n\"cí\":\"词珁兹垐柌祠茨瓷粢詞辝慈甆辞磁雌鹚糍辤飺餈嬨濨薋鴜礠辭鷀鶿\",\n\"cǐ\":\"此佌泚玼皉啙跐鮆\",\n\"cì\":\"朿次佽刾庛茦栨莿絘蛓赐螆賜\",\n\"cōng\":\"匆囪囱苁忩枞茐怱悤棇焧葱楤漗聡蓯蔥骢暰樅樬潨熜瑽璁聦聪瞛篵聰蟌鍯繱鏓鏦騘驄\",\n\"cóng\":\"丛徔従婃孮徖從悰淙琮碂慒漎潀潈誴賨賩樷錝藂叢灇欉爜\",\n\"cǒng\":\"\",\n\"còng\":\"愡憁謥\",\n\"cōu\":\"\",\n\"cóu\":\"\",\n\"cǒu\":\"\",\n\"còu\":\"凑湊傶楱腠辏輳\",\n\"cū\":\"怚粗觕麁麄橻麆麤\",\n\"cú\":\"徂殂\",\n\"cǔ\":\"皻\",\n\"cù\":\"促猝脨媨瘄蔟誎趗噈憱踧醋瘯踿簇縬趨鼀蹙蹵蹴顣\",\n\"cuān\":\"汆撺鋑镩蹿攛躥鑹\",\n\"cuán\":\"濽櫕巑攢灒欑穳\",\n\"cuàn\":\"窜殩熶窽篡窾簒竄爨\",\n\"cuī\":\"隹崔脺催凗嵟缞墔慛摧榱漼槯磪縗鏙\",\n\"cuǐ\":\"漼熣璀趡皠\",\n\"cuì\":\"伜忰疩倅粋紣翆脃脆啐啛崒悴淬萃椊毳焠琗瘁粹綷翠膵膬濢竁襊顇臎\",\n\"cūn\":\"邨村皴踆澊竴膥\",\n\"cún\":\"存侟拵壿澊\",\n\"cǔn\":\"刌忖\",\n\"cùn\":\"寸吋籿\",\n\"cuō\":\"搓瑳遳磋蹉醝鎈\",\n\"cuó\":\"虘嵯嵳痤睉矬蒫瘥蔖鹾酂鹺酇\",\n\"cuǒ\":\"脞\",\n\"cuò\":\"剉剒厝夎挫莡莝庴措逪锉蓌错縒諎銼錯\",\n\"chā\":\"扠扱芆臿挿偛嗏插揷馇銟锸艖疀嚓鍤鎈餷\",\n\"chá\":\"秅苴垞査茬茶捈梌嵖搽猹靫楂槎詧察摖檫\",\n\"chǎ\":\"紁蹅镲鑔\",\n\"chà\":\"仛奼汊岔侘衩诧剎姹紁詫\",\n\"chāi\":\"芆肞钗釵\",\n\"chái\":\"犲侪柴豺祡喍儕\",\n\"chǎi\":\"茝\",\n\"chài\":\"虿袃訍瘥蠆囆\",\n\"chān\":\"辿觇梴搀覘裧摻緂鋓幨襜攙\",\n\"chán\":\"苂婵谗單孱棎湹禅馋煘缠僝嶃嶄獑蝉誗鋋儃嬋廛潹潺緾澶磛禪毚螹蟐鄽瀍繟蟬儳劖繵蟾酁嚵壥巉瀺欃纏纒躔镵艬讒鑱饞\",\n\"chǎn\":\"产刬旵丳斺浐剗谄啴產産铲阐蒇剷嵼摌滻嘽幝蕆諂閳骣燀簅冁繟醦譂鏟闡囅灛讇\",\n\"chàn\":\"忏刬剗硟摲幝幨燀懴儳懺羼韂顫\",\n\"chāng\":\"伥昌倀娼淐猖菖阊椙琩裮锠錩閶鲳闛鯧鼚\",\n\"cháng\":\"仩仧兏肠苌镸長尝偿常徜瓺萇場甞腸嘗塲嫦瑺膓償嚐鲿鱨\",\n\"chǎng\":\"昶惝場敞僘厰塲廠氅鋹\",\n\"chàng\":\"怅玚畅鬯唱悵焻瑒暢畼誯韔\",\n\"chāo\":\"抄弨怊欩钞訬焯超鈔勦摷綽劋樔窼\",\n\"cháo\":\"牊晁巣巢鄛鼌漅樔潮窲罺鼂轈謿\",\n\"chǎo\":\"炒眧粆焣煼槱麨巐\",\n\"chào\":\"仦仯耖觘\",\n\"chē\":\"伡車俥砗唓莗硨蛼\",\n\"ché\":\"\",\n\"chě\":\"扯偖撦奲\",\n\"chè\":\"屮彻呫坼迠烢烲焎聅掣揊硩頙徹摰撤澈勶瞮爡\",\n\"chen\":\"伧傖\",\n\"chēn\":\"肜抻郴捵棽琛嗔綝瘨瞋諃賝謓\",\n\"chén\":\"尘臣忱沉辰陈迧茞宸栕莀莐陳敐晨桭梣訦谌軙愖跈鈂煁蔯塵敶樄瘎霃螴諶薼麎曟鷐\",\n\"chěn\":\"趻硶碜墋夦磣踸鍖贂醦\",\n\"chèn\":\"衬爯疢龀偁趂趁榇稱齓齔儭嚫穪谶櫬襯讖\",\n\"chēng\":\"朾阷泟柽爯凈棦浾琤偁淨碀蛏晿牚搶赪僜憆摚稱靗撐撑緽橖橕瞠赬頳檉竀罉鎗矃穪蟶鏿鐣饓鐺\",\n\"chéng\":\"氶丞成朾呈承枨诚郕乗城埩娍宬峸洆荿埕挰晟浧珹掁珵窚脭铖堘惩揨棖椉程筬絾裎塍塖溗誠畻酲鋮憕撜澂橙檙鯎瀓懲騬\",\n\"chěng\":\"侱徎悜逞骋庱睈裎騁\",\n\"chèng\":\"秤牚稱竀穪\",\n\"chi\":\"麶\",\n\"chī\":\"吃妛哧彨胵蚩鸱瓻眵笞粚喫訵嗤媸摛痴絺樆噄殦瞝誺噭螭鴟鵄癡魑齝攡彲黐\",\n\"chí\":\"弛池驰迟坻沶狋茌迡持柢竾荎俿歭耛菭蚳赿筂貾遅跢遟馳箈箎墀徲漦踟遲篪謘鍉邌鶗鶙\",\n\"chǐ\":\"叺伬扡呎肔侈卶齿垑奓拸胣恥耻蚇袳豉欼歯袲裭誃鉹褫齒\",\n\"chì\":\"彳叱斥佁杘灻赤饬侙抶勅恜柅炽勑捇眙翄翅敕烾啻湁飭傺痸腟誃鉓雴憏瘈翤遫銐慗慸瘛翨熾懘趩鶒鷘\",\n\"chōng\":\"充忡沖茺浺珫翀舂嘃摏徸憃憧衝罿艟蹖\",\n\"chóng\":\"虫崈崇痋隀漴褈緟蝩蟲爞\",\n\"chǒng\":\"宠埫寵\",\n\"chòng\":\"铳揰銃\",\n\"chou\":\"鮘\",\n\"chōu\":\"抽牰婤掫紬搊跾瘳篘醔犨犫\",\n\"chóu\":\"怞俦诪帱栦惆梼畤紬绸菗椆畴絒愁皗稠筹裯詶酧酬綢踌儔雔嚋嬦幬懤盩薵檮燽雠疇籌躊醻讐讎雦\",\n\"chǒu\":\"丒丑吜杽杻偢瞅醜矁魗\",\n\"chòu\":\"臰遚殠\",\n\"chu\":\"橻\",\n\"chū\":\"出岀初榋摢摴樗貙櫖齣\",\n\"chú\":\"刍除芻耝厨滁蒢豠锄媰耡蒭蜍趎鉏雏犓廚篨鋤橱幮櫉藸蟵躇雛櫥蹰鶵躕\",\n\"chǔ\":\"処杵础椘處储楮禇楚褚濋儲檚璴礎齭齼\",\n\"chù\":\"亍処竌怵泏绌豖欪炪竐俶敊埱珿絀菆傗鄐慉搐滀触閦儊嘼諔憷斶歜臅黜觸矗\",\n\"chuā\":\"欻\",\n\"chuǎ\":\"\",\n\"chuà\":\"\",\n\"chuāi\":\"搋\",\n\"chuái\":\"膗\",\n\"chuǎi\":\"\",\n\"chuài\":\"啜欼膪踹\",\n\"chuān\":\"巛川氚穿猭瑏\",\n\"chuán\":\"舡舩剶船圌遄傳椯椽歂暷篅膞輲\",\n\"chuǎn\":\"舛荈喘堾歂僢踳\",\n\"chuàn\":\"汌串玔钏釧猭賗鶨\",\n\"chuāng\":\"刅疮窓創窗牎摐牕瘡窻\",\n\"chuáng\":\"床牀喠噇朣橦\",\n\"chuǎng\":\"闯傸磢闖\",\n\"chuàng\":\"怆刱剏剙創愴\",\n\"chuī\":\"吹炊龡\",\n\"chuí\":\"垂倕埀桘陲捶菙圌搥棰腄槌硾锤箠錘鎚顀\",\n\"chuǐ\":\"\",\n\"chuì\":\"惙\",\n\"chūn\":\"芚旾杶春萅媋暙椿槆瑃箺蝽橁輴櫄鰆鶞\",\n\"chún\":\"纯肫陙唇浱純莼脣湻犉滣蒓鹑漘蓴膞醇醕錞鯙鶉\",\n\"chǔn\":\"朐偆萶惷睶賰蠢\",\n\"chuō\":\"逴趠踔戳繛\",\n\"chuò\":\"辶吷辵拺哾娖娕啜婥婼惙涰淖辍酫綽踀箹輟鋜龊擉磭餟繛歠鏃嚽齪鑡孎\",\n\"da\":\"繨\",\n\"dā\":\"咑哒耷笚嗒搭褡噠墶撘鎝鎉\",\n\"dá\":\"达迏迖迚呾妲怛沓垯炟羍荅荙畗剳匒惮畣笪逹溚詚達跶靼憚薘鞑燵蟽鐽韃龖龘\",\n\"dǎ\":\"\",\n\"dà\":\"亣汏眔\",\n\"dāi\":\"呆呔獃懛\",\n\"dǎi\":\"歹逮傣\",\n\"dài\":\"代诒轪侢垈岱帒甙绐迨带怠柋殆玳贷帯貣軑埭帶紿蚮袋軚逮釱棣詒貸軩瑇跢廗箉叇曃緿蝳駘鮘鴏戴艜黛簤蹛瀻霴襶黱靆\",\n\"dān\":\"丹妉単眈砃耼耽郸聃躭酖單媅愖殚瘅匰箪褝鄲頕儋勯擔殫甔癉襌簞聸\",\n\"dǎn\":\"伔刐抌玬瓭胆衴疸紞赕亶馾撢撣賧燀黕膽皽黵\",\n\"dàn\":\"旦但帎呾沊泹狚诞唌柦疍訑啗啖惔惮淡萏蛋啿弾氮腅蜑觛亶瘅窞蓞誕僤噉馾髧儋嘾彈憚醈憺擔澹禫餤駳鴠癉膻癚嚪繵贉霮饏黮\",\n\"dāng\":\"珰裆筜當儅噹澢璫襠簹艡蟷鐺闣\",\n\"dǎng\":\"党谠當擋譡黨攩灙欓讜\",\n\"dàng\":\"氹凼圵宕砀垱荡档偒菪婸崵愓瓽逿嵣當雼潒碭儅瞊蕩趤壋擋檔璗盪礑簜蘯闣\",\n\"dāo\":\"刀刂忉朷氘舠釖鱽裯魛螩\",\n\"dáo\":\"捯\",\n\"dǎo\":\"导岛陦島捣祷禂搗隝嘄嶋嶌槝導隯壔嶹擣蹈檮禱\",\n\"dào\":\"辺到帱悼梼焘盗菿椡盜絩道稲箌翢噵稻艔衜檤衟幬燾翿軇瓙纛\",\n\"de\":\"旳\",\n\"dē\":\"嘚\",\n\"dé\":\"恴淂蚮悳惪棏锝徳德鍀\",\n\"dēi\":\"嘚\",\n\"děi\":\"\",\n\"dèn\":\"扥扽\",\n\"dēng\":\"灯登豋僜噔嬁燈璒竳簦艠蹬\",\n\"děng\":\"等戥\",\n\"dèng\":\"邓凳鄧隥墱嶝憕瞪磴镫櫈瀓覴鐙\",\n\"dī\":\"氐仾低奃岻彽秪袛啲埞羝隄堤渧趆滴碮樀磾鞮鏑\",\n\"dí\":\"扚廸旳狄肑籴苖迪唙敌浟涤荻啇梑笛觌靮滌蓧馰髢嘀嫡翟蔋蔐頔敵篴镝嚁藡豴蹢鏑糴覿鸐\",\n\"dǐ\":\"氐厎坘诋邸阺呧坻弤抵拞枑柢牴砥掋菧觝詆軧楴聜骶鯳\",\n\"dì\":\"坔旳杕玓怟枤苐俤哋埅帝埊娣逓递偙梊焍珶眱祶第菂谛釱媂揥棣渧睇缔蒂遆僀楴禘腣遞鉪墆墑墬嵽摕疐碲蔕蝃遰慸甋締蝭嶳諦諟踶螮\",\n\"diǎ\":\"嗲\",\n\"diān\":\"佔敁掂傎厧嵮滇槇槙瘨窴颠蹎巅顚顛癫巓攧巔癲齻\",\n\"dián\":\"\",\n\"diǎn\":\"典奌点婰敟椣跕碘蒧蕇踮點嚸\",\n\"diàn\":\"电阽坫店垫扂玷痁钿婝惦淀奠琔殿痶蜔鈿電墊壂橂橝澱靛磹癜簟驔\",\n\"diāo\":\"刁叼汈刟虭凋奝弴彫蛁椆琱貂碉鳭瞗錭雕鮉鲷簓鼦鯛鵰\",\n\"diǎo\":\"扚屌鳥\",\n\"diào\":\"弔伄吊钓盄窎訋掉釣铞铫絩鈟竨蓧誂銚銱雿魡調瘹窵鋽藋鑃\",\n\"diē\":\"爹跌褺\",\n\"dié\":\"佚怢泆苵迭咥垤峌恎挕昳柣绖胅瓞眣耊啑戜眰谍喋堞崼幉惵揲畳絰耋臷詄趃跕軼镻叠楪殜牃牒跮嵽碟蜨褋槢艓蝶疂諜蹀鴩螲鲽鞢曡疉鰈疊氎\",\n\"diě\":\"\",\n\"diè\":\"哋\",\n\"dīng\":\"仃叮奵帄玎甼町疔盯耵虰酊釘靪\",\n\"dǐng\":\"奵艼顶酊頂鼎嵿鼑濎薡鐤\",\n\"dìng\":\"订忊饤矴定訂釘飣啶掟萣铤椗腚碇锭碠聢蝊鋌錠磸顁\",\n\"diū\":\"丟丢铥颩銩\",\n\"dōng\":\"东冬咚岽東苳昸氡倲鸫埬娻崬崠涷笗菄徚氭蝀鮗鼕鯟鶇鶫\",\n\"dǒng\":\"揰董墥嬞懂箽蕫諌\",\n\"dòng\":\"动冻侗垌姛峒恫挏栋洞狪胨迵凍戙烔胴動娻崠硐棟湩絧腖働勭燑駧霘\",\n\"dōu\":\"吺枓侸唗兜兠蔸橷瞗篼\",\n\"dóu\":\"唞\",\n\"dǒu\":\"乧阧抖钭陡蚪鈄\",\n\"dòu\":\"吋豆郖浢狵荳逗饾鬥梪毭渎脰酘痘閗窦鬦鋀餖斣瀆闘竇鬪鬬鬭\",\n\"dū\":\"厾剢阇嘟督醏闍\",\n\"dú\":\"独涜渎椟牍犊裻読獨錖凟匵嬻瀆櫝殰牘犢瓄皾騳黩讀豄贕韣髑鑟韇韥黷讟\",\n\"dǔ\":\"竺笃堵暏琽赌睹覩賭篤\",\n\"dù\":\"芏妒杜妬姤荰秺晵渡靯镀螙斁殬鍍蠧蠹\",\n\"duān\":\"耑偳剬媏端褍鍴\",\n\"duǎn\":\"短\",\n\"duàn\":\"段断塅缎葮椴煅瑖腶碫锻緞毈簖鍛斷躖籪\",\n\"duī\":\"垖堆塠痽磓镦鴭鐓鐜\",\n\"duǐ\":\"啍頧\",\n\"duì\":\"队对兊兌対杸祋怼陮敓敚隊碓綐對憞憝濧濻薱懟瀢瀩譈譵轛\",\n\"dūn\":\"吨惇蜳墪墫墩撴獤噸撉橔犜礅蹾蹲驐\",\n\"dǔn\":\"盹趸躉\",\n\"dùn\":\"伅坉庉忳沌炖盾砘逇钝顿遁鈍楯頓碷遯憞潡燉踲\",\n\"duo\":\"\",\n\"duō\":\"夛多咄哆畓剟掇敠敪毲裰跢嚉\",\n\"duó\":\"仛夺沰铎剫敓敚喥痥鈬奪凙踱鐸\",\n\"duǒ\":\"朵朶哚垜挆埵崜缍袳椯硾趓躱躲綞亸軃鬌嚲奲\",\n\"duò\":\"杕杝刴剁枤沲陊陏饳垜尮挆挅柁柂柮桗舵隋媠惰隓跢跥跺飿馱墮憜駄墯隳鵽\",\n\"ē\":\"妸妿娿婀屙痾\",\n\"é\":\"讹吪囮迗俄峉哦娥峩峨涐莪珴訛皒睋鈋锇鹅磀誐鋨頟额魤額鵞鵝譌\",\n\"ě\":\"枙娿砨惡頋噁騀鵈\",\n\"è\":\"厄戹歺岋阨呃扼苊阸呝枙砐轭咢咹垩姶洝砈匎敋蚅饿偔卾堊娾悪硆谔軛鄂阏堮堨崿惡愕湂萼豟軶遌遏鈪廅搕搤搹琧痷腭僫蝁锷鹗蕚遻頞颚餓噩擜覨諤閼餩鍔鳄歞顎礘櫮鰐鶚鰪讍齃鑩齶鱷\",\n\"ēi\":\"诶欸誒\",\n\"éi\":\"诶欸誒\",\n\"ěi\":\"诶欸誒\",\n\"èi\":\"诶欸誒\",\n\"ēn\":\"奀恩蒽煾\",\n\"ěn\":\"峎\",\n\"èn\":\"摁\",\n\"ēng\":\"鞥\",\n\"ér\":\"儿而児杒侕兒陑峏洏耏荋栭胹唲梕袻鸸粫聏輀鲕隭髵鮞鴯轜\",\n\"ěr\":\"尒尓尔耳迩洱饵栮毦珥铒衈爾鉺餌駬薾邇趰\",\n\"èr\":\"二弍弐佴刵咡贰貮貳誀樲髶\",\n\"fā\":\"冹沷発發彂醗醱\",\n\"fá\":\"乏伐姂坺垡浌疺罚茷阀栰笩傠筏瞂罰閥墢罸橃藅\",\n\"fǎ\":\"佱法峜砝鍅灋\",\n\"fà\":\"珐琺髪蕟髮\",\n\"fān\":\"帆忛犿拚畨勫噃嬏幡憣旙旛繙翻藩轓颿籓飜鱕\",\n\"fán\":\"凢凣凡匥杋柉矾籵钒舤烦舧笲釩棥煩緐墦樊蕃燔璠膰薠襎羳蹯瀿礬蘩鐇鐢蠜鷭\",\n\"fǎn\":\"反払仮返橎\",\n\"fàn\":\"氾犯奿汎泛饭范贩畈訉軓婏桳梵盕笵販軬飰飯滼嬎範輽瀪\",\n\"fāng\":\"匚方邡汸芳枋牥祊钫淓蚄堏趽鈁錺鴋\",\n\"fáng\":\"防妨房肪埅鲂魴\",\n\"fǎng\":\"仿访彷纺昉昘瓬眆倣旊眪紡舫訪髣鶭\",\n\"fàng\":\"放趽\",\n\"fēi\":\"飞妃非飛啡婓婔渄绯扉斐暃猆靟裶緋蜚霏鲱餥馡騑騛鯡飝\",\n\"féi\":\"肥疿淝腓痱蜰\",\n\"fěi\":\"朏胐匪诽奜悱斐棐榧翡蕜誹篚\",\n\"fèi\":\"吠犻芾废杮柹沸狒肺胏昲胇费俷剕厞疿砩陫屝笰萉廃費痱镄廢曊橃橨癈鼣濷蟦櫠鐨靅\",\n\"fēn\":\"吩帉纷芬昐氛玢砏竕衯紛翂梤棻訜躮酚鈖雰馚朆餴饙\",\n\"fén\":\"坆坟妢岎汾朌枌炃羒蚠蚡棼焚蒶隫墳幩濆獖蕡魵鳻橨燌燓豮鼢羵鼖豶轒鐼馩黂\",\n\"fěn\":\"粉黺\",\n\"fèn\":\"坋弅奋忿秎偾愤粪僨憤獖瞓奮橨膹糞鲼瀵鱝\",\n\"fēng\":\"丰仹凨凬夆妦沣沨凮枫炐封疯盽砜風埄峰峯莑偑桻烽琒堼崶渢猦葑锋楓犎蜂熢瘋碸僼篈鄷鋒檒豐鎽鏠酆寷灃蘴霻蠭靊飌麷\",\n\"féng\":\"夆浲逢堸溄馮摓漨綘艂縫\",\n\"fěng\":\"讽風覂唪諷\",\n\"fèng\":\"凤奉俸桻湗焨煈赗鳯鳳鴌縫賵\",\n\"fó\":\"仏仸坲梻\",\n\"fōu\":\"\",\n\"fóu\":\"紑\",\n\"fǒu\":\"缶妚炰缹缻殕雬鴀\",\n\"fū\":\"伕邞呋妋抙姇枎玞肤怤柎砆胕荂衭娐尃捊荴旉琈紨趺酜麸稃跗鈇筟綒鄜孵粰蓲敷膚鳺麩糐麬麱懯璷\",\n\"fú\":\"乀巿弗払伏凫甶刜孚扶芣芙芾咈姇宓岪帗怫枎泭绂绋苻茀俘垘枹柫柭氟洑炥玸畉畐祓罘胕茯郛韨鳬哹垺栿浮畗砩莩蚨袚匐桴涪烰琈符笰紱紼翇艴菔虙袱幅棴絥罦葍福綍艀蜉辐鉘鉜颫鳧榑稪箁箙粰褔豧韍颰幞澓蝠髴鴔諨踾輻鮄癁襆鮲黻襥鵩纀鶝\",\n\"fǔ\":\"阝呒抚甫乶府弣拊斧俌俛柎郙俯蚥釡釜捬脯辅椨焤盙腑滏蜅腐輔嘸撫頫鬴簠黼\",\n\"fù\":\"讣付妇负附咐坿彿竎阜驸复峊柎洑祔訃負赴蚥袝偩冨婏婦捬紨蚹傅媍富復秿萯蛗覄詂赋椱缚腹鲋榑禣複褔赙緮蕧蝜蝮賦駙嬔縛輹鮒賻鍑鍢鳆覆馥鰒\",\n\"gā\":\"旮伽夾嘎嘠\",\n\"gá\":\"钆軋尜釓嘎嘠噶錷\",\n\"gǎ\":\"尕玍朒嘎嘠\",\n\"gà\":\"尬魀\",\n\"gāi\":\"侅该郂陔垓姟峐荄晐赅畡祴絯隑該豥賅賌\",\n\"gǎi\":\"忋改絠\",\n\"gài\":\"丐乢匄匃杚钙摡溉葢鈣戤概槩蓋漑槪瓂\",\n\"gān\":\"甘忓迀攼玕肝咁坩泔矸苷柑玵竿疳酐粓凲尲尴筸漧鳱尶尷魐\",\n\"gǎn\":\"仠芉皯秆衦赶敢桿稈感澉趕橄擀澸篢簳鳡鱤\",\n\"gàn\":\"佄旰汵盰绀倝凎淦紺詌骭幹榦檊簳贑赣贛灨\",\n\"gāng\":\"冈冮刚纲肛岡牨疘矼缸剛罡堈崗掆釭棡犅堽摃碙綱罁鋼鎠\",\n\"gǎng\":\"岗犺崗\",\n\"gàng\":\"焵焹筻槓鋼戅戆戇\",\n\"gāo\":\"皋羔羙高皐髙臯睪槔睾槹獋橰篙糕餻櫜韟鷎鼛鷱\",\n\"gǎo\":\"夰杲菒稁搞缟槀槁稾稿镐縞藁檺藳鎬\",\n\"gào\":\"吿告勂诰郜峼祮祰锆筶禞誥鋯\",\n\"gē\":\"戈仡圪扢犵纥戓肐牫咯紇饹哥袼鸽割彁滒戨歌鴚擱謌鴿鎶\",\n\"gé\":\"呄佮佫匌挌阁革敋格鬲愅猲臵蛒裓隔颌嗝塥滆觡搿槅膈閣閤獦镉鞈韐骼臈諽輵擱鮥鮯櫊鎑鎘韚轕鞷騔\",\n\"gě\":\"個哿笴舸嘅嗰蓋鲄\",\n\"gè\":\"亇吤茖虼個硌铬箇鉻\",\n\"gěi\":\"給\",\n\"gēn\":\"根跟\",\n\"gén\":\"哏\",\n\"gěn\":\"\",\n\"gèn\":\"亙亘艮茛揯搄\",\n\"gēng\":\"刯庚畊浭耕菮椩焿絙絚赓鹒緪縆羮賡羹鶊\",\n\"gěng\":\"郠哽埂峺挭绠耿莄梗綆鲠骾鯁\",\n\"gèng\":\"堩緪縆\",\n\"gōng\":\"工弓公厷功攻杛侊糿糼肱宫紅宮恭躬龚匑塨幊愩觥躳慐匔碽篢髸觵龏龔\",\n\"gǒng\":\"廾巩汞拱唝拲栱珙嗊輁澒銾鞏\",\n\"gòng\":\"贡羾唝貢嗊愩慐熕\",\n\"gōu\":\"佝沟芶钩痀袧缑鈎溝鉤緱褠篝簼鞲韝\",\n\"gǒu\":\"芶岣狗苟枸玽耉耇笱耈蚼豿\",\n\"gòu\":\"呴坸构诟购垢姤冓啂夠够傋訽媾彀搆詬遘雊構煹觏撀糓覯購\",\n\"gū\":\"杚呱咕姑孤沽泒苽巭巬柧轱唃唂罛鸪笟菇菰蛄蓇觚軱軲辜酤稒鈲磆箍箛嫴篐橭鮕鴣\",\n\"gú\":\"\",\n\"gǔ\":\"夃古扢抇汩诂谷股牯罟羖逧钴傦啒淈脵蛊嗗尳愲詁馉毂賈鈷鼔鼓嘏榖皷鹘穀縎糓薣濲皼臌轂餶櫎瀔盬瞽鶻蠱\",\n\"gù\":\"固怘故凅顾堌崓崮梏牿棝祻雇榾痼锢僱錮鲴鯝顧\",\n\"guā\":\"瓜刮呱胍栝桰铦鸹歄煱颪趏劀緺銛諣踻銽颳鴰騧\",\n\"guá\":\"\",\n\"guǎ\":\"冎叧呙呱咼剐剮寡\",\n\"guà\":\"卦坬诖挂啩掛罣袿絓罫褂詿\",\n\"guāi\":\"乖\",\n\"guái\":\"叏\",\n\"guǎi\":\"拐枴柺罫箉\",\n\"guài\":\"夬怪恠\",\n\"guān\":\"关纶官矜覌倌矝莞涫棺蒄窤閞綸関瘝癏観闗鳏關鰥觀鱞\",\n\"guǎn\":\"莞馆琯痯筦斡管輨璭舘錧館鳤\",\n\"guàn\":\"卝毌丱贯泴覌悺惯掼淉貫悹祼慣摜潅遦樌盥罆雚観躀鏆灌爟瓘矔礶鹳罐觀鑵欟鱹鸛\",\n\"guāng\":\"光灮炚炛炗咣垙姯挄洸茪桄烡珖胱硄僙輄潢銧黆\",\n\"guǎng\":\"広犷廣獷臩\",\n\"guàng\":\"俇桄逛臦撗\",\n\"guī\":\"归圭妫规邽皈茥闺帰珪胿亀硅窐袿規媯廆椝瑰郌嫢摫閨鲑嬀嶲槣槻槼鳺璝瞡龜鮭巂歸雟鬶騩櫰櫷瓌蘬鬹\",\n\"guǐ\":\"宄氿朹轨庋佹匦诡陒垝姽恑攱癸軌鬼庪祪軓匭晷湀蛫觤詭厬簋蟡\",\n\"guì\":\"攰刿刽昋炅攱贵桂桧匮眭硊趹椢猤筀貴溎蓕跪匱瞆劊劌嶡撌槶螝樻檜瞶禬簂櫃癐襘鐀鳜鞼鑎鱖鱥\",\n\"gǔn\":\"丨衮惃硍绲袞辊滚蓘裷滾緄蔉磙緷輥鲧鮌鯀\",\n\"gùn\":\"睔謴\",\n\"guo\":\"\",\n\"guō\":\"呙咼咶埚郭啯堝崞渦猓楇聒鈛锅墎瘑嘓彉濄蝈鍋彍蟈懖矌\",\n\"guó\":\"囗囯囶囻国圀敋喐國帼掴腘摑幗慖漍聝蔮膕虢簂馘\",\n\"guǒ\":\"果惈淉菓馃椁褁槨粿綶蜾裹輠餜櫎\",\n\"guò\":\"過腂鐹\",\n\"hā\":\"虾紦铪鉿蝦\",\n\"há\":\"\",\n\"hǎ\":\"奤\",\n\"hà\":\"\",\n\"hāi\":\"咍嗨\",\n\"hái\":\"郂孩骸還嚡\",\n\"hǎi\":\"海胲烸塰酼醢\",\n\"hài\":\"亥妎拸骇害氦猲絯嗐餀駭駴饚\",\n\"han\":\"兯爳\",\n\"hān\":\"犴佄顸哻蚶酣頇嫨谽憨馠魽歛鼾\",\n\"hán\":\"邗含汵邯函肣凾虷唅圅娢浛笒崡晗梒涵焓琀寒嵅韩椷甝筨馯蜬澏鋡韓\",\n\"hǎn\":\"丆罕浫喊豃闞\",\n\"hàn\":\"仠厈汉屽忓扞闬攼旰旱肣唅垾悍捍涆猂莟晘焊菡釬閈皔睅傼蛿颔馯撖漢蔊蜭鳱暵熯輚銲鋎憾撼翰螒頷顄駻譀雗瀚鶾\",\n\"hāng\":\"\",\n\"háng\":\"邟妔苀迒斻杭垳绗桁笐航蚢颃裄貥筕絎頏魧\",\n\"hàng\":\"忼沆笐\",\n\"hāo\":\"茠蒿嚆薅薧\",\n\"háo\":\"乚毜呺竓皋蚝毫椃嗥獆號貉噑獔豪嘷獋諕儫嚎壕濠籇蠔譹\",\n\"hǎo\":\"郝\",\n\"hào\":\"昊侴昦秏哠恏悎浩耗晧淏傐皓鄗滈滜聕號暠暤暭澔皜皞镐曍皡薃皥藃鎬颢灏顥鰝灝\",\n\"hē\":\"诃抲欱訶嗬蠚\",\n\"hé\":\"禾纥呙劾咊咼姀河郃峆曷柇狢盇籺紇阂饸敆盉盍荷釛啝涸渮盒菏萂龁喛惒粭訸颌楁毼澕蓋詥貈貉鉌阖鲄朅熆閡閤餄鹖麧噈頜篕翮螛魺礉闔鞨齕覈鶡皬鑉龢\",\n\"hě\":\"\",\n\"hè\":\"咊抲垎贺哬袔隺寉焃惒猲賀嗃煂碋熇褐赫鹤翯嚇壑癋謞燺爀鶮鶴靍靎鸖靏\",\n\"hēi\":\"黒黑嗨潶\",\n\"hén\":\"拫痕鞎\",\n\"hěn\":\"佷哏很狠詪噷\",\n\"hèn\":\"恨噷\",\n\"hēng\":\"亨哼悙涥脝\",\n\"héng\":\"姮恆恒桁烆珩胻鸻撗橫衡鴴鵆蘅鑅\",\n\"hèng\":\"悙啈橫\",\n\"hng\":\"哼\",\n\"hōng\":\"叿吽呍灴轰訇烘軣揈渹焢硡谾薨輷嚝鍧巆轟\",\n\"hóng\":\"厷仜弘叿妅屸吰宏汯玒瓨纮闳宖泓玜苰垬娂沗洪竑紅羾荭虹浤浲紘翃耾硔紭谹鸿渱溄竤粠葓葒鈜閎綋翝谼潂鉷鞃魟篊鋐彋霐黉霟鴻黌\",\n\"hǒng\":\"唝晎嗊愩慐\",\n\"hòng\":\"讧訌閧撔澒銾蕻闂鬨闀\",\n\"hōu\":\"齁\",\n\"hóu\":\"矦鄇喉帿猴葔瘊睺銗篌糇翭骺翵鍭餱鯸\",\n\"hǒu\":\"吼吽犼呴\",\n\"hòu\":\"后郈厚垕後洉矦茩逅候堠豞鲎鲘鮜鱟\",\n\"hū\":\"乎乯匢虍芴呼垀忽昒曶泘苸恗烀芔轷匫唿惚淴虖軤雽嘑寣滹雐幠戯歑戱膴戲謼\",\n\"hú\":\"囫抇弧狐瓳胡壶隺壷斛焀喖壺媩搰湖猢絗葫鹄楜煳瑚瓡嘝蔛鹕鹘槲箶縎蝴衚魱縠螜醐頶觳鍸餬礐鵠瀫鬍鰗鶘鶦鶻鶮\",\n\"hǔ\":\"乕汻虎浒俿淲萀琥虝滸錿鯱\",\n\"hù\":\"互弖戶戸户冱芐帍护沍沪岵怙戽昈曶枑姱怘祜笏粐婟扈瓠楛嗃嗀綔鄠雽嫭嫮摢滬蔰槴熩鳸濩簄豰鍙嚛鹱觷護鳠頀鱯鸌\",\n\"huā\":\"吪芲花砉埖婲華椛硴蒊嘩糀誮錵蘤\",\n\"huá\":\"呚姡骅華釪釫铧滑猾嘩搳撶劃磆蕐螖鋘譁鏵驊鷨\",\n\"huà\":\"夻杹枠画话崋桦華婳畫嬅畵觟話劃摦樺嫿槬澅諙諣黊繣舙譮\",\n\"huái\":\"怀佪徊淮槐褢踝懐褱懷瀤櫰耲蘹\",\n\"huài\":\"咶壊壞蘾\",\n\"huān\":\"欢犿狟貆歓鴅懁鵍酄嚾孉懽獾歡讙貛驩\",\n\"huán\":\"环郇峘洹狟荁垸桓萈萑堚寏絙雈獂綄羦蒝貆锾瞏圜嬛寰澴缳還阛環豲鍰雚镮鹮糫繯鐶闤鬟瓛\",\n\"huǎn\":\"睆缓緩\",\n\"huàn\":\"幻奂肒奐宦唤换浣涣烉患梙焕逭喚喛嵈愌換渙痪煥瑍綄豢漶瘓槵鲩擐澣藧鯇攌嚾轘鯶鰀\",\n\"huāng\":\"巟肓荒衁宺朚塃慌\",\n\"huáng\":\"皇偟凰隍黄喤堭媓崲徨惶揘湟葟遑黃楻煌瑝墴潢獚锽熿璜篁艎蝗癀磺穔諻簧蟥鍠餭鳇趪韹鐄騜鰉鱑鷬\",\n\"huǎng\":\"汻怳恍炾宺晄奛谎幌詤熀熿縨謊兤櫎爌\",\n\"huàng\":\"愰滉榥曂皝鎤皩\",\n\"hui\":\"\",\n\"huī\":\"灰灳诙咴恢拻挥洃虺袆晖烣珲豗婎媈揮翚辉隓暉椲楎煇琿睢禈詼墮幑睳褘噅噕撝翬輝麾徽隳瀈蘳孈鰴\",\n\"huí\":\"囘回囬佪廻廽恛洄茴迴烠蚘逥痐缋蛕蛔蜖藱鮰繢\",\n\"huǐ\":\"虺悔烠毀毁螝毇檓燬譭\",\n\"huì\":\"卉屷屶汇讳泋哕浍绘芔荟诲恚恵桧烩贿彗晦秽喙廆惠湏絵缋翙阓匯彚彙會滙詯賄颒僡嘒瘣蔧誨銊圚寭慧憓暳槥潓潰蕙噦嬒徻橞殨澮濊獩璤薈薉諱頮檅檜燴璯篲藱餯嚖懳瞺穢繢蟪櫘繪翽譓儶鏸闠鐬靧譿顪\",\n\"hūn\":\"昏昬荤婚惛涽焄阍棔殙湣葷睧睯蔒閽轋\",\n\"hún\":\"忶浑珲馄渾湷琿魂餛鼲\",\n\"hǔn\":\"\",\n\"hùn\":\"诨俒眃倱圂婫掍焝溷尡慁睴觨諢\",\n\"huō\":\"吙秴耠劐攉騞\",\n\"huó\":\"佸姡活秮秳趏\",\n\"huǒ\":\"灬火伙邩钬鈥漷煷夥\",\n\"huò\":\"沎或货咟俰捇眓获閄剨喐掝祸貨惑旤湱禍漷窢蒦锪嚄奯擭濊濩獲篧鍃霍檴謋雘矆礊穫镬嚯彟瀖耯艧藿蠖嚿曤臛癨矐鑊韄靃彠\",\n\"jī\":\"丌讥击刉叽饥乩刏圾机玑肌芨矶鸡枅苙咭剞唧姬屐积笄飢基庴喞嵆嵇幾攲敧朞犄筓缉赍嗘畸稘跻鳮僟毄箕綨緁銈嘰撃槣樭畿緝觭諅賫踑躸齑墼撽機激璣禨積錤隮懠擊磯簊羁賷櫅耭雞譏韲鶏譤鐖饑癪躋鞿魕鶺鷄羇虀鑇覉鑙齏羈鸄覊\",\n\"jí\":\"乁亽亼及尐伋吉岌彶忣汲级即极皀亟佶诘郆卽叝姞急皍笈級堲揤疾觙偮卙唶楖淁焏谻戢棘極殛湒集塉嫉愱楫蒺蝍趌辑槉耤膌銡嶯潗濈瘠箿蕀蕺諔趞踖鞊鹡檝螏輯磼簎藉襋蹐鍓艥籍轚鏶霵齎躤雧\",\n\"jǐ\":\"己丮妀屰犱泲虮挤脊掎済鱾幾戟給嵴麂魢撠憿橶擠濟穖蟣\",\n\"jì\":\"彐彑旡计记伎坖妓忌技汥芰际剂季哜垍既洎紀茍茤荠計迹剤畟紒继觊記偈寄寂帺徛悸旣梞済绩塈惎臮葪蔇兾勣痵継蓟裚跡際鬾魝摖暨漃漈禝稩穊誋跽霁魥鲚暩瞉稷諅鲫冀劑曁禨穄薊襀髻嚌懠檕濟穖績繋罽薺覬鮆檵櫅櫭璾蹟鯽鵋齌廭懻癠穧繫蘎骥鯚瀱繼蘮鱀蘻霽鰶鰿鷑鱭驥\",\n\"jia\":\"\",\n\"jiā\":\"加乫伽夾宊抸佳拁泇徍枷毠浃珈哿埉挾浹痂梜笳耞袈傢猳葭跏椵犌腵鉫嘉擖镓糘豭貑鴐鎵麚\",\n\"jiá\":\"圿夾忦扴郏拮荚郟唊恝莢戛脥袷铗戞猰蛱裌颉颊蛺鋏頬頰鴶鵊\",\n\"jiǎ\":\"甲岬叚玾胛斚钾婽徦斝椵賈鉀榎槚瘕檟\",\n\"jià\":\"驾架嫁幏賈榢價稼駕\",\n\"jiān\":\"戋奸尖幵坚歼冿戔玪肩艰姧姦兼堅帴惤猏笺菅菺豜傔揃湔牋犍缄葌閒間雃靬搛椷椾煎瑊睷碊缣蒹豣漸監箋蔪樫熞稴緘蕑蕳鋑鲣鳽鹣熸篯縑鋻艱鞬餰馢麉瀐濺鞯鳒鵑殱礛籈鵳攕瀸鰔櫼殲譼鰜鶼礷籛韀鰹囏虃鑯韉\",\n\"jiǎn\":\"囝拣枧俭柬茧倹挸捡笕减剪帴揵梘检湕趼堿揀揃検減睑硷裥詃锏弿暕瑐筧简絸谫彅戩戬碱儉翦鋄撿橏篯檢藆襇襉謇蹇瞼礆簡繭謭鎫鬋鰎鹸瀽蠒鐗鐧鹻籛譾襺鹼\",\n\"jiàn\":\"件見侟建饯剑洊牮荐贱俴健剣栫涧珔舰剱徤揵袸谏釰釼寋旔朁楗毽腱臶跈践閒間賎鉴键僣僭榗槛漸監劎劍墹澗箭糋諓賤趝踐踺劒劔薦諫鋻鍵餞瞷瞯磵礀螹鍳鞬擶檻濺繝瀳覵覸譛鏩聻艦轞鐱鑒鑑鑬鑳\",\n\"jiāng\":\"江姜茳畕豇將葁畺摪翞僵漿螀壃缰薑橿殭螿鳉疅礓繮韁鱂\",\n\"jiǎng\":\"讲奖桨傋塂蒋奨奬蔣槳獎耩膙講顜\",\n\"jiàng\":\"匞匠夅弜洚绛將弶強絳畺酱勥滰嵹摾漿彊犟糡醤糨醬櫤謽\",\n\"jiāo\":\"艽交郊姣娇峧浇茮茭骄胶敎喬椒焦蛟跤僬嘐虠鲛嬌嶕嶣憍憢澆膠蕉燋膲礁穚鮫鵁鹪簥蟭轇鐎驕鷦鷮\",\n\"jiáo\":\"矯\",\n\"jiǎo\":\"臫佼恔挢狡绞饺捁晈烄笅皎脚釥铰搅湫筊絞勦敫湬煍腳賋僥摎摷暞踋鉸餃儌劋徺撟撹樔徼憿敽敿燞曒璬矯皦蟜繳譑孂纐攪灚鱎龣\",\n\"jiào\":\"叫呌峤挍訆悎珓窌笅轿较敎斍覐窖筊覚滘較嘂嘄嘦斠漖酵噍嶠潐噭嬓徼獥癄藠趭轎醮灂覺譥皭釂\",\n\"jie\":\"價\",\n\"jiē\":\"阶疖哜皆袓接掲痎秸菨階喈喼嗟堦媘嫅椄湝結脻街裓楬煯瑎稭鞂擑蝔嚌癤謯鶛\",\n\"jié\":\"卩卪孑尐讦扢刧刦劫岊昅杢刼劼杰疌衱诘拮洁狤迼倢桀桔桝洯紒莭訐偈偼啑婕崨捷掶袷袺傑媫嵑結絜蛣颉嵥搩楶滐睫節蜐詰趌跲鉣截榤碣竭蓵鲒嶱潔羯誱踕镼鞊頡幯擳嶻擮礍鍻鮚巀蠞蠘蠽\",\n\"jiě\":\"姐毑媎觧飷檞\",\n\"jiè\":\"丯介吤妎岕庎戒屆届斺玠畍界疥砎衸诫借悈紒蚧唶徣堺楐琾蛶觧骱犗耤誡褯魪嶰藉鎅鶡\",\n\"jīn\":\"巾今仐斤钅竻釒金津矜砛荕衿觔埐珒矝紟惍琎菳堻琻筋釿璡鹶黅襟\",\n\"jǐn\":\"侭卺巹紧堇婜菫僅厪谨锦嫤廑慬漌緊蓳馑槿瑾儘錦謹饉\",\n\"jìn\":\"伒劤妗近进枃勁浕荩晉晋浸烬笒紟赆唫祲進煡臸僅寖搢溍缙靳墐嫤慬榗瑨盡馸僸凚歏殣觐噤嬐濅縉賮嚍壗嬧濜藎燼璶覲贐齽\",\n\"jīng\":\"坕坙巠京泾经茎亰秔荊荆涇粇婛惊旍旌猄経菁晶稉腈葏睛粳經兢箐精綡聙鋞橸鲸鯨鶁鶄麖鼱驚麠\",\n\"jǐng\":\"井丼阱刭坓宑汫汬肼剄穽殌儆頚幜憬擏澋璄憼暻璟璥頸蟼警\",\n\"jìng\":\"劤妌弪径迳俓勁婙浄胫倞凈弳徑痉竞莖逕婧桱梷殑淨竟竫脛敬痙竧靓傹靖境獍誩踁静靚憼曔镜靜瀞鵛鏡競竸\",\n\"jiōng\":\"冂冋坰扃埛扄浻絅銄駉駫蘏蘔\",\n\"jiǒng\":\"冏囧泂炅迥侰炯逈浻烱絅煚窘颎綗臦僒煛熲澃褧燛顈臩\",\n\"jiòng\":\"\",\n\"jiū\":\"丩勼纠朻牞究糺鸠糾赳阄萛啾揂揪剹揫鳩摎稵樛鬏鬮\",\n\"jiú\":\"\",\n\"jiǔ\":\"九乆久乣氿奺汣杦灸玖糺舏韭紤酒镹韮\",\n\"jiù\":\"匛旧臼咎疚柩柾倃捄桕匓厩救就廄廐舅僦廏慦殧舊鹫匶鯦麔欍齨鷲\",\n\"jū\":\"凥伡抅車匊居岨泃狙苴驹俥毩疽眗砠罝陱娵婮崌掬梮涺揟椐毱琚腒趄跔跙锔裾雎艍蜛諊踘躹鋦駒據鋸鮈鴡檋鞠鞫鶋\",\n\"jú\":\"局泦侷狊挶桔啹婅淗焗菊郹椈湨犑輂僪粷蓻跼閰趜鋦橘駶繘鵙蹫鵴巈蘜鶪鼰鼳驧\",\n\"jǔ\":\"咀岨弆举枸矩莒挙椇筥榉榘蒟龃聥舉踽擧櫸齟欅襷\",\n\"jù\":\"巨乬巪讵姖岠怇拒洰苣邭具怐怚拠昛歫炬珇秬钜俱倨倶剧烥粔耟蚷袓埧埾惧詎距焣犋跙鉅飓蒩虡豦锯寠愳窭聚駏劇勮屦踞鮔壉懅據澽窶螶遽鋸屨颶瞿貗簴躆醵忂懼鐻\",\n\"juān\":\"姢勌娟捐涓朘梋焆瓹脧圏裐鹃勬鋑鋗镌鞙鎸鐫蠲\",\n\"juǎn\":\"呟巻帣埍捲菤锩臇錈闂\",\n\"juàn\":\"奆劵奍巻帣弮倦勌悁桊狷绢隽婘惓淃瓹眷鄄圏棬椦睊絭罥腃雋睠絹飬慻蔨嶲鋗餋獧縳巂羂讂\",\n\"juē\":\"噘撅撧屩屫\",\n\"jué\":\"亅孒孓决刔氒诀吷妜弡抉決芵叕泬玨玦挗珏疦砄绝虳埆捔欮蚗袦崫崛掘斍桷覐觖訣赽趹傕厥焳矞絕絶覚趉鈌劂瑴谲駃噊嶡嶥憰撅熦爴獗瘚蕝蕨觮鴂鴃噱壆憠橜橛燋璚爵臄镢櫭繘蟨蟩爑譎蹷蹶髉匷矍覺鐍鐝鳜灍爝觼穱彏戄攫玃鷢矡貜躩钁\",\n\"juě\":\"蹶\",\n\"juè\":\"誳\",\n\"jūn\":\"军君均汮姰袀軍钧莙蚐桾皲鈞碅筠皸皹覠銁銞鲪頵麇龜鍕鮶麏麕\",\n\"jǔn\":\"\",\n\"jùn\":\"呁俊郡陖埈峻捃浚隽馂骏晙焌珺棞畯竣葰雋儁箘箟蜠賐寯懏餕燇濬駿鵘鵔鵕攈攟\",\n\"kā\":\"喀\",\n\"kǎ\":\"佧咔咯垰胩裃鉲\",\n\"kāi\":\"开奒揩锎開鐦\",\n\"kǎi\":\"凯剀垲恺闿豈铠凱剴嘅慨蒈塏嵦愷輆暟锴鍇鎧闓颽\",\n\"kài\":\"忾炌欯欬烗勓愒愾濭鎎\",\n\"kān\":\"刊栞勘龛堪嵁戡龕\",\n\"kǎn\":\"凵冚坎扻侃砍莰偘埳惂欿歁槛輡檻顑竷轗\",\n\"kàn\":\"衎崁墈阚瞰磡闞竷鬫矙\",\n\"kāng\":\"忼闶砊粇康閌嫝嵻慷漮槺穅糠躿鏮鱇\",\n\"káng\":\"\",\n\"kǎng\":\"\",\n\"kàng\":\"亢伉匟邟囥抗犺闶炕钪鈧閌\",\n\"kāo\":\"尻嵪髛\",\n\"kǎo\":\"丂攷考拷洘栲烤薧\",\n\"kào\":\"洘铐犒銬鲓靠鮳鯌\",\n\"kē\":\"匼柯牁牱珂科轲疴砢趷钶蚵铪嵙棵痾萪軻颏嗑搕犐稞窠鈳榼薖鉿颗樖瞌磕蝌頦窼醘顆髁礚\",\n\"ké\":\"殻揢殼翗\",\n\"kě\":\"岢炣渇嵑敤渴軻閜磆嶱\",\n\"kè\":\"克刻剋勀勊客峇恪娔尅悈袔课堁氪骒愘硞缂衉嗑愙歁溘锞碦緙艐課濭錁礊騍\",\n\"kēi\":\"剋尅\",\n\"kēn\":\"\",\n\"kěn\":\"肎肯肻垦恳啃龂豤貇龈墾錹懇\",\n\"kèn\":\"珢掯硍裉褃\",\n\"kēng\":\"劥阬坈坑妔挳硁殸牼揁硜铿硻摼誙銵鍞鏗\",\n\"kěng\":\"硻\",\n\"kōng\":\"倥埪崆悾涳椌硿箜躻錓鵼\",\n\"kǒng\":\"孔倥恐悾\",\n\"kòng\":\"矼控羫鞚\",\n\"kōu\":\"抠芤眍眗剾彄摳瞘\",\n\"kǒu\":\"口劶竘\",\n\"kòu\":\"叩扣佝怐敂冦宼寇釦窛筘滱蔲蔻瞉簆鷇\",\n\"kū\":\"扝刳矻郀朏枯胐哭桍秙窋堀圐跍窟骷鮬\",\n\"kú\":\"\",\n\"kǔ\":\"狜苦楛\",\n\"kù\":\"库俈绔庫捁秙焅袴喾硞絝裤瘔酷廤褲嚳\",\n\"kuā\":\"咵姱恗晇絓舿誇\",\n\"kuǎ\":\"侉垮楇銙\",\n\"kuà\":\"胯趶誇跨骻\",\n\"kuǎi\":\"蒯擓\",\n\"kuài\":\"巜凷圦块快侩郐哙浍狯脍欳塊蒉會筷駃鲙儈墤鄶噲廥澮獪璯膾旝糩鱠\",\n\"kuān\":\"宽寛寬臗髋鑧髖\",\n\"kuǎn\":\"梡欵款歀窽窾\",\n\"kuàn\":\"\",\n\"kuāng\":\"匡迋劻诓邼匩哐恇洭硄筐筺誆軭\",\n\"kuáng\":\"忹抂狅狂诳軖軠誑鵟\",\n\"kuǎng\":\"夼儣懭\",\n\"kuàng\":\"卝丱邝圹纩况旷岲況矿昿贶框眖砿眶絋絖貺軦鉱鋛鄺壙黋懬曠爌矌礦穬纊鑛\",\n\"kuī\":\"亏刲岿悝盔窥聧窺虧顝闚巋\",\n\"kuí\":\"奎晆逵鄈隗馗喹揆葵骙戣暌楏楑魁睽蝰頯櫆藈鍨鍷騤夔蘷巙虁犪躨\",\n\"kuǐ\":\"尯煃跬頍磈蹞\",\n\"kuì\":\"尯胿匮喟媿愧愦蒉馈匱瞆嘳嬇憒潰篑聭聩蕢殨膭謉瞶餽簣聵籄饋\",\n\"kūn\":\"坤昆堃堒婫崑崐晜猑菎裈焜琨髠裩貇锟髡鹍潉蜫褌髨熴瑻醌錕鲲騉鯤鵾鶤\",\n\"kǔn\":\"悃捆阃壸梱祵硱稇裍壼稛綑閫閸\",\n\"kùn\":\"困涃睏\",\n\"kuò\":\"扩拡挄适秮秳铦筈萿葀蛞阔廓漷銛噋銽頢髺擴濶闊鞟韕霩鞹鬠\",\n\"la\":\"鞡\",\n\"lā\":\"垃柆砬菈搚磖邋\",\n\"lá\":\"旯剌砬揦磖嚹\",\n\"lǎ\":\"喇藞\",\n\"là\":\"剌翋揦溂揧楋瘌蜡蝋辢辣蝲臈擸攋爉臘鬎櫴瓎镴鯻蠟鑞\",\n\"lái\":\"来來俫倈崃徕涞莱郲婡崍庲徠梾淶猍萊逨棶琜筙铼箂錸騋鯠鶆麳\",\n\"lǎi\":\"襰\",\n\"lài\":\"疠娕徕唻婡徠赉睐睞赖誺賚濑賴頼癘顂癞鵣攋瀨瀬籁藾櫴癩籟\",\n\"lán\":\"兰岚拦栏啉婪惏嵐葻阑暕蓝谰厱澜褴儖斓篮懢燣燷藍襕镧闌璼幱襤譋攔瀾灆籃繿蘫蘭斕欄襴囒灡籣欗讕躝襽鑭韊\",\n\"lǎn\":\"览浨揽缆榄漤罱醂壈懒覧擥嬾懶孄覽孏攬灠欖爦顲纜\",\n\"làn\":\"坔烂滥燗嚂壏濫爁爛瓓爤爦糷钄\",\n\"lāng\":\"啷\",\n\"láng\":\"勆郞哴欴狼嫏廊斏桹琅蓈榔瑯硠稂锒筤艆蜋郒樃螂躴鋃鎯駺\",\n\"lǎng\":\"崀朗朖烺塱蓢誏朤\",\n\"làng\":\"埌浪莨阆筤蒗誏閬\",\n\"lāo\":\"捞粩撈\",\n\"láo\":\"労劳牢窂哰崂浶勞痨铹僗嘮嶗憦憥朥癆磱簩蟧醪鐒顟髝\",\n\"lǎo\":\"耂老佬咾恅狫荖栳珯硓铑蛯銠鮱轑\",\n\"lào\":\"涝絡嗠耢酪嫪嘮憦樂澇躼橯耮軂\",\n\"le\":\"饹\",\n\"lē\":\"嘞\",\n\"lè\":\"仂阞叻忇扐氻艻牞玏泐竻砳楽韷餎樂簕鳓鰳鱳\",\n\"lei\":\"嘞\",\n\"lēi\":\"\",\n\"léi\":\"絫雷嫘缧蔂樏畾磥檑縲攂礌镭櫑瓃羸礧纍罍蘲鐳轠儽鑘靁虆鱩欙纝鼺\",\n\"lěi\":\"厽耒诔垒洡塁絫傫誄瘣樏磊蕌磥蕾儡壘癗礌藟櫑櫐矋礨礧灅蠝蘽讄壨鑸鸓\",\n\"lèi\":\"泪洡类涙淚祱絫酹銇頛頪錑攂颣類礧纇蘱禷\",\n\"lēng\":\"稜\",\n\"léng\":\"唥崚塄楞碐稜薐\",\n\"lěng\":\"冷\",\n\"lèng\":\"倰堎愣睖踜\",\n\"li\":\"\",\n\"lī\":\"\",\n\"lí\":\"刕杝厘柂剓狸离荲骊悡梨梸犁琍菞喱棃犂鹂剺漓睝筣缡艃蓠嫠孷樆璃盠竰貍犛糎蔾褵鋫鲡黎篱縭罹錅蟍謧醨嚟藜邌釐離鯏斄瓈蟸鏫鯬鵹麗黧囄灕蘺蠫孋廲劙鑗穲籬纚驪鱺鸝\",\n\"lǐ\":\"礼李里俚峛峢娌峲悝浬逦理裡锂粴裏豊鋰鲤澧禮鯉醴蠡鳢邐鱧欚纚鱱\",\n\"lì\":\"力历厉屴扐立吏扚朸利励叓呖坜杝沥苈例叕岦戾枥沴沵疠苙迣俐俪栃栎疬砅茘荔赲轹郦唎娳悧栛栗浰涖猁珕砬砺砾秝莉莅鬲唳婯悷笠粒粝脷蚸蛎傈凓厤棙痢蛠詈跞雳厯塛慄搮溧睙蒞蒚蜊鉝鳨厲暦歴瑮綟蜧銐蝷镉勵曆歷篥隷鴗巁檪濿癘磿隸鬁儮擽曞櫔爄犡禲蠇鎘嚦壢攊櫟瀝瓅礪藶麗櫪爏瓑皪盭礫糲蠣儷癧礰纅酈鷅麜囇孋攦觻躒轢欐讈轣攭瓥靂靋\",\n\"liǎ\":\"俩倆\",\n\"lián\":\"奁连帘怜涟莲連梿联裢亷嗹廉慩溓漣蓮匲奩槏槤熑覝劆匳噒嫾憐磏聨聫褳鲢濂濓縺翴聮薕螊櫣燫聯臁謰蹥檶鎌镰瀮簾蠊鬑鐮鰱籢籨\",\n\"liǎn\":\"莶敛梿琏脸裣慩摙溓槤璉蔹嬚薟斂櫣歛臉鄻襝羷蘞蘝醶\",\n\"liàn\":\"练炼恋殓僆堜媡湅萰链摙楝煉瑓潋稴練澰錬殮鍊鏈瀲鰊戀纞\",\n\"liāng\":\"\",\n\"liáng\":\"良俍莨梁涼椋辌粱粮墚踉樑輬駺糧\",\n\"liǎng\":\"両两兩俩倆唡啢掚脼裲緉蜽魉魎\",\n\"liàng\":\"亮倞哴悢谅涼辆喨晾湸靓輌踉諒輛鍄\",\n\"liāo\":\"蹽\",\n\"liáo\":\"辽疗窌聊尞僚寥嵺憀摎漻膋嘹嫽寮嶚嶛憭敹樛獠缭遼暸橑璙膫療竂鹩屪廫簝繚藔蟟蟧豂賿蹘爎爒飂髎飉鷯\",\n\"liǎo\":\"钌釕鄝缪蓼憭繆曢爎镽爒\",\n\"liào\":\"尥尦钌炓料釕廖撂窷镣鐐\",\n\"lie\":\"\",\n\"liē\":\"\",\n\"lié\":\"\",\n\"liě\":\"忚毟挘\",\n\"liè\":\"列劣劦冽劽姴挒洌茢迾哷埓埒栵浖烈烮捩猎猟脟棙蛚煭聗趔綟巤獦颲燤儠巁鮤鴷擸爄獵爉犣躐鬛鬣鱲\",\n\"līn\":\"拎\",\n\"lín\":\"厸邻阾林临冧啉崊惏晽琳粦碄箖粼綝鄰隣嶙潾獜遴斴暽燐璘辚霖疄瞵磷臨繗翷麐轔壣瀶鏻鳞驎鱗麟\",\n\"lǐn\":\"菻亃僯箖凜凛撛廩廪懍懔澟檁檩癝癛\",\n\"lìn\":\"吝恡悋赁焛亃痳賃蔺獜橉甐膦閵疄藺蹸躏躙躪轥\",\n\"líng\":\"伶刢灵呤囹坽夌姈岺彾泠狑苓昤朎柃玲瓴〇凌皊砱秢竛羐袊铃陵鸰婈崚掕棂淩琌笭紷绫羚翎聆舲菱蛉衑祾詅跉軨稜蓤裬鈴閝零龄綾蔆輘霊駖澪蕶錂霗魿鲮鴒鹷燯霝霛齢酃鯪孁齡櫺醽靈欞爧麢龗\",\n\"lǐng\":\"岺袊领領嶺\",\n\"lìng\":\"另炩蘦\",\n\"liū\":\"熘澑蹓\",\n\"liú\":\"刘畄斿浏流留旈琉畱硫裗媹嵧旒蒥蓅骝摎榴漻瑠飗劉瑬瘤磂镏駠鹠橊璢疁镠癅蟉駵嚠懰瀏藰鎏鎦麍鏐飀鐂騮飅鰡鶹驑\",\n\"liǔ\":\"柳栁桞珋桺绺锍綹熮罶鋶橮嬼懰羀藰\",\n\"liù\":\"窌翏塯廇遛澑磂磟鹨鎦霤餾雡飂鬸鷚\",\n\"lo\":\"咯\",\n\"lóng\":\"龙屸尨咙泷茏昽栊珑胧眬砻竜聋隆湰滝嶐槞漋癃窿篭龍儱蘢鏧霳嚨巃巄瀧曨朧櫳爖瓏襱矓礲礱蠬蠪龓龒籠聾豅躘靇鑨驡鸗\",\n\"lǒng\":\"陇垅垄拢篢篭龍隴儱徿壟壠攏竉龓籠躘\",\n\"lòng\":\"哢梇硦儱徿贚\",\n\"lou\":\"喽嘍瞜\",\n\"lōu\":\"摟\",\n\"lóu\":\"剅娄偻婁喽溇蒌僂楼嘍寠廔慺漊蔞遱樓熡耧蝼瞜耬艛螻謱貗軁髅鞻髏鷜\",\n\"lǒu\":\"嵝塿嶁摟甊篓簍\",\n\"lòu\":\"陋屚漏瘘镂瘻瘺鏤\",\n\"lū\":\"噜撸謢嚕擼\",\n\"lú\":\"卢庐芦垆枦泸炉栌胪轳舮鸬玈舻颅鈩鲈馿魲盧嚧壚廬攎瀘獹璷蘆曥櫨爐瓐臚矑籚纑罏艫蠦轤鑪顱髗鱸鸕黸\",\n\"lǔ\":\"卤虏掳鹵硵鲁虜塷滷蓾樐澛魯擄橹氇磠穞镥瀂櫓氌艣鏀艪鐪鑥\",\n\"lù\":\"圥甪陆侓坴彔录峍勎赂辂陸娽淕淥渌硉菉逯鹿椂琭祿禄僇剹勠盝睩稑賂路輅塶廘摝漉箓粶緑蓼蔍戮樚熝膔趢踛辘醁潞穋蕗錄錴録璐簏螰鴼簶蹗轆騄鹭簬簵鏕鯥鵦鵱麓鏴騼籙觻虂鷺\",\n\"luán\":\"娈孪峦挛栾鸾脔滦銮鵉圝奱孌孿巒攣曫欒灓羉臡臠圞灤虊鑾癴癵鸞\",\n\"luǎn\":\"卵覶\",\n\"luàn\":\"乱釠乿亂薍灓\",\n\"lūn\":\"掄\",\n\"lún\":\"仑伦囵沦纶芲侖轮倫陯圇婨崘崙掄淪菕棆腀碖綸耣蜦論踚輪磮錀鯩\",\n\"lǔn\":\"埨惀碖稐耣\",\n\"lùn\":\"惀溣碖論\",\n\"luo\":\"囉囖\",\n\"luō\":\"捋頱囉囖\",\n\"luó\":\"寽罗猡脶萝逻椤腡锣箩骡镙螺攎羅覶鏍儸覼騾囉攞玀蘿邏欏驘鸁籮鑼饠囖\",\n\"luǒ\":\"剆倮砢捰蓏裸躶瘰蠃臝曪攭癳\",\n\"luò\":\"泺咯峈洛荦骆洜珞捰渃硌硦笿絡蛒跞詻摞漯犖雒駱磱鮥鵅擽濼攊皪躒纙\",\n\"lǘ\":\"驴闾榈閭氀膢瞜櫚藘驢\",\n\"lǚ\":\"吕呂侣郘侶挔捛捋旅梠焒祣偻稆铝屡絽缕僂屢慺膂褛鋁履膐褸儢縷穭鷜\",\n\"lǜ\":\"垏律哷虑嵂氯葎滤綠緑慮箻膟勴繂濾櫖爈卛鑢\",\n\"lüè\":\"寽掠畧略锊稤圙鋢鋝\",\n\"ma\":\"嗎嘛麽\",\n\"mā\":\"亇妈孖庅媽嫲榪螞\",\n\"má\":\"菻麻嗎痲痳嘛嫲蔴犘蟇\",\n\"mǎ\":\"马犸杩玛码馬嗎溤獁遤瑪碼螞鎷鰢鷌\",\n\"mà\":\"杩祃閁骂傌睰嘜榪禡罵螞駡鬕\",\n\"mái\":\"薶霾\",\n\"mǎi\":\"买荬買嘪蕒鷶\",\n\"mài\":\"劢迈佅売麦卖唛脈麥衇勱賣邁霡霢\",\n\"mān\":\"颟顢\",\n\"mán\":\"姏悗蛮絻谩慲摱馒樠瞞鞔謾饅鳗鬘鬗鰻矕蠻\",\n\"mǎn\":\"娨屘満满滿螨襔蟎鏋矕\",\n\"màn\":\"曼僈鄤墁嫚幔慢摱漫獌缦蔄槾澫熳澷镘縵鏝蘰\",\n\"māng\":\"牤\",\n\"máng\":\"邙吂忙汒芒尨杗杧盲盳厖恾笀茫哤娏庬浝狵朚牻硭釯铓痝蛖鋩駹蘉\",\n\"mǎng\":\"莽莾硥茻壾漭蟒蠎\",\n\"màng\":\"\",\n\"māo\":\"貓\",\n\"máo\":\"毛矛芼枆牦茅茆旄罞渵軞酕堥嵍楙锚緢鉾髦氂犛蝥貓髳錨蟊鶜\",\n\"mǎo\":\"冇卯夘乮峁戼泖昴铆笷蓩鉚\",\n\"mào\":\"冃皃芼冐茂柕眊秏贸旄耄袤覒媢帽萺貿鄚愗暓毷瑁瞀貌鄮蝐懋\",\n\"me\":\"庅麽麼嚜\",\n\"mē\":\"嚒\",\n\"mè\":\"濹嚰\",\n\"méi\":\"坆沒枚玫苺栂眉脄莓梅珻脢郿堳媒嵋湄湈猸睂葿楣楳煤瑂禖腜塺槑酶镅鹛鋂霉穈徾鎇攗鶥黴\",\n\"měi\":\"毎每凂美挴浼羙媄嵄渼媺镁嬍燘躾鎂黣\",\n\"mèi\":\"妹抺沬旀昧祙袂眛媚寐殙痗跊鬽煝睸韎魅篃蝞嚜櫗\",\n\"mēn\":\"悶椚\",\n\"mén\":\"门们扪汶怋玧钔門們閅捫菛璊瞞穈鍆亹斖虋\",\n\"mèn\":\"悗惛焖悶暪燜鞔懑懣\",\n\"mēng\":\"掹擝矇\",\n\"méng\":\"尨甿虻庬莔萌溕盟雺甍鄳儚橗瞢蕄蝱鄸鋂髳幪懜懞濛獴曚朦檬氋礞鯍鹲艨矒靀霿饛顭鸏\",\n\"měng\":\"黾冡勐猛黽锰艋蜢瞢懜懞蟒錳懵蠓鯭矒鼆\",\n\"mèng\":\"孟梦夢夣懜霥癦\",\n\"mī\":\"咪瞇\",\n\"mí\":\"冞祢迷袮猕谜蒾詸摵瞇謎醚彌擟瞴縻藌麊麋麿檷禰靡瀰獼蘪麛镾戂攠瓕蘼爢醾醿鸍釄\",\n\"mǐ\":\"米芈侎沵羋弭洣敉粎脒渳葞蔝銤彌濔孊攠灖\",\n\"mì\":\"冖糸汨沕宓怽枈觅峚祕宻密淧覔覓幂谧塓幎覛嘧榓滵漞熐蔤蜜鼏冪樒幦濗謐櫁簚羃\",\n\"mián\":\"宀芇杣眠婂绵媔棉綿緜臱蝒嬵檰櫋矈矊矏\",\n\"miǎn\":\"丏汅免沔黾勉眄娩莬偭冕勔渑喕媔愐湎睌缅葂黽絻腼澠緬靦鮸\",\n\"miàn\":\"靣面牑糆麫麪麺麵\",\n\"miāo\":\"喵\",\n\"miáo\":\"苗媌描瞄鹋嫹緢鶓\",\n\"miǎo\":\"厸仯劰杪眇秒淼渺缈篎緲藐邈\",\n\"miào\":\"妙庙玅竗庿缪廟繆\",\n\"miē\":\"乜吀咩哶孭\",\n\"mié\":\"\",\n\"miè\":\"灭烕眜覕搣滅蔑薎鴓幭懱瀎篾櫗簚礣蠛衊鑖鱴\",\n\"mín\":\"民忟垊姄岷忞怋旻旼玟苠珉盿砇罠崏捪渂琘琝缗暋瑉痻碈鈱緍緡賯錉鴖鍲\",\n\"mǐn\":\"皿冺刡忟闵呡忞抿泯黾勄敃闽悯敏笢笽惽湏湣閔黽愍敯暋僶閩慜憫潣簢鳘蠠鰵\",\n\"míng\":\"名明鸣洺眀茗冥朙眳铭鄍嫇溟猽蓂詺暝榠銘鳴瞑螟覭\",\n\"mǐng\":\"佲姳凕嫇慏酩\",\n\"mìng\":\"命掵\",\n\"miǔ\":\"\",\n\"miù\":\"谬缪繆謬\",\n\"mō\":\"摸嚤\",\n\"mó\":\"庅尛谟嫫馍摹膜骳麽麼魹橅糢嬤嬷謨謩擵饃蘑髍魔劘戂攠饝\",\n\"mǒ\":\"懡\",\n\"mò\":\"末圽沒妺帓殁歿歾沫茉陌帞昩枺狢皌眜眿砞秣莈眽絈袹絔蛨貃嗼塻寞漠獏蓦貈貊貉銆靺墨嫼瘼瞐瞙镆魩黙縸默瀎貘嚜藦蟔鏌爅驀礳纆耱\",\n\"mōu\":\"哞\",\n\"móu\":\"牟侔劺呣恈敄桙眸谋堥蛑缪踎謀繆鍪鴾麰鞪\",\n\"mǒu\":\"厶某\",\n\"mòu\":\"\",\n\"mú\":\"毪氁\",\n\"mǔ\":\"母亩牡坶姆拇畂峔牳畆畒胟娒畝畞砪畮鉧踇\",\n\"mù\":\"木仫目凩朷牟沐狇坶炑牧苜毣莯蚞钼募雮墓幙幕慔楘睦鉬慕暯暮缪樢艒霂穆縸繆鞪\",\n\"n\":\"\",\n\"ń\":\"唔嗯\",\n\"ň\":\"嗯\",\n\"na\":\"\",\n\"nā\":\"\",\n\"ná\":\"秅拏拿挐嗱蒘搻誽镎鎿\",\n\"nǎ\":\"乸雫\",\n\"nà\":\"吶妠抐纳肭郍衲钠納袦捺笚笝豽軜貀鈉蒳靹魶\",\n\"nái\":\"腉搱摨孻\",\n\"nǎi\":\"乃奶艿氖疓妳廼迺倷釢嬭\",\n\"nài\":\"佴奈柰耏耐萘渿鼐褦螚錼\",\n\"nān\":\"囝囡\",\n\"nán\":\"男抩枏侽柟娚畘莮喃遖暔楠諵難\",\n\"nǎn\":\"赧揇湳萳煵腩嫨蝻戁\",\n\"nàn\":\"妠婻諵難\",\n\"nāng\":\"儾囔\",\n\"náng\":\"乪涳搑憹嚢蠰饟馕欜饢\",\n\"nǎng\":\"搑擃瀼曩攮灢馕\",\n\"nàng\":\"儾齉\",\n\"nāo\":\"孬\",\n\"náo\":\"呶怓挠峱桡硇铙猱蛲詉碙摎撓嶩憹橈獶蟯夒譊鐃巎獿\",\n\"nǎo\":\"垴恼悩脑匘脳堖惱嫐瑙腦碯憹獶\",\n\"nào\":\"闹婥淖閙鬧臑\",\n\"ne\":\"\",\n\"né\":\"\",\n\"nè\":\"疒讷吶抐眲訥\",\n\"néi\":\"\",\n\"něi\":\"娞浽馁脮腇餒鮾鯘\",\n\"nèi\":\"內氝氞錗\",\n\"nèn\":\"恁媆嫩嫰\",\n\"néng\":\"\",\n\"něng\":\"螚\",\n\"nèng\":\"\",\n\"ńg\":\"唔嗯\",\n\"ňg\":\"嗯\",\n\"nī\":\"妮\",\n\"ní\":\"尼坭怩抳籾倪屔秜郳铌埿婗淣猊蚭棿蛪跜鈮聣蜺馜觬貎輗霓鲵鯢麑齯臡\",\n\"nǐ\":\"伱伲你拟妳抳狔苨柅婗掜旎晲棿孴儞儗隬懝擬濔薿檷聻\",\n\"nì\":\"屰氼伲抐昵胒逆匿眤秜堄惄嫟愵睨腻暱縌誽膩嬺\",\n\"niān\":\"拈蔫\",\n\"nián\":\"年秊哖姩秥粘溓鲇鮎鲶鵇黏鯰\",\n\"niǎn\":\"涊淰焾辇榐辗撚撵碾輦簐蹍攆蹨躎\",\n\"niàn\":\"卄廿念姩唸埝悥惗艌\",\n\"niáng\":\"娘嬢孃釀\",\n\"niǎng\":\"\",\n\"niàng\":\"酿醸釀\",\n\"niǎo\":\"鸟茑袅鳥嫋裊蔦樢嬝褭嬲\",\n\"niào\":\"脲\",\n\"niē\":\"捏揑\",\n\"nié\":\"苶\",\n\"niě\":\"\",\n\"niè\":\"乜帇圼峊枿陧涅痆聂臬啮掜菍隉敜湼嗫嵲踂噛摰槷踗踙銸镊镍嶭篞臲鋷錜颞蹑嚙聶鎳闑孼孽櫱籋蘖囁攝齧巕糱糵蠥鑈囐囓讘躡鑷顳钀\",\n\"nín\":\"囜恁脌您\",\n\"nǐn\":\"拰\",\n\"níng\":\"咛狞苧柠聍寍寕甯寗寜寧儜凝橣嚀嬣擰獰薴檸聹鑏鬡鸋\",\n\"nǐng\":\"擰矃\",\n\"nìng\":\"佞侫泞倿寍寕甯寗寜寧澝擰濘\",\n\"niū\":\"妞孧\",\n\"niú\":\"牜牛汼怓\",\n\"niǔ\":\"忸扭沑狃纽杻炄钮紐莥鈕靵\",\n\"niù\":\"抝\",\n\"nóng\":\"农侬哝浓脓秾農儂辳噥濃蕽檂燶禯膿癑穠襛譨醲欁鬞\",\n\"nǒng\":\"繷\",\n\"nòng\":\"挊挵癑齈\",\n\"nóu\":\"羺\",\n\"nǒu\":\"\",\n\"nòu\":\"搙槈耨獳檽鎒鐞\",\n\"nú\":\"奴伮孥帑驽笯駑\",\n\"nǔ\":\"伮努弩砮胬\",\n\"nù\":\"怒傉搙\",\n\"nuán\":\"奻渜\",\n\"nuǎn\":\"渜湪暖煖煗餪\",\n\"nuàn\":\"\",\n\"nuó\":\"挪梛傩橠難儺\",\n\"nuǒ\":\"袳袲\",\n\"nuò\":\"耎诺喏掿毭逽愞搙搦锘搻榒稬諾蹃糑鍩懧懦糥穤糯\",\n\"nǘ\":\"\",\n\"nǚ\":\"钕籹釹\",\n\"nǜ\":\"沑衂恧朒衄聏\",\n\"nüè\":\"虐婩硸瘧\",\n\"o\":\"筽\",\n\"ō\":\"喔噢\",\n\"ó\":\"哦\",\n\"ǒ\":\"嚄\",\n\"ò\":\"哦\",\n\"ou\":\"\",\n\"ōu\":\"讴吽沤欧殴瓯鸥區嘔塸漚歐毆熰甌膒鴎櫙藲謳鏂鷗\",\n\"óu\":\"\",\n\"ǒu\":\"吘禺偶腢嘔熰耦蕅藕\",\n\"òu\":\"怄沤嘔慪漚\",\n\"pā\":\"汃妑苩皅趴舥啪葩\",\n\"pá\":\"杷爬钯掱琶筢潖\",\n\"pǎ\":\"\",\n\"pà\":\"汃帊帕怕袙\",\n\"pāi\":\"拍\",\n\"pái\":\"俳徘猅棑牌箄輫簲簰犤\",\n\"pǎi\":\"廹\",\n\"pài\":\"沠哌派渒湃蒎鎃\",\n\"pān\":\"眅畨萠潘攀籓\",\n\"pán\":\"丬爿肨柈洀胖眫湴盘跘媻幋蒰搫槃盤磐縏膰磻蹒瀊蟠蹣鎜鞶\",\n\"pǎn\":\"坢盻\",\n\"pàn\":\"冸判沜拚泮炍肨叛牉盼胖畔聁袢詊溿頖鋬闆鵥襻鑻\",\n\"pāng\":\"乓汸沗胮雱滂膖霶\",\n\"páng\":\"厐夆尨彷庞逄庬趽舽嫎徬膀篣螃鳑龎龐鰟\",\n\"pǎng\":\"嗙耪覫\",\n\"pàng\":\"炐肨胖眫\",\n\"pāo\":\"抛拋脬萢藨穮\",\n\"páo\":\"咆垉庖狍炰爮瓟袍铇匏烰袌跁軳鉋鞄褜麃麅\",\n\"pǎo\":\"\",\n\"pào\":\"奅疱皰砲袌靤麭嚗礟礮\",\n\"pēi\":\"妚呸怌抷肧柸胚衃醅\",\n\"péi\":\"阫陪培婄毰赔锫裵裴賠錇\",\n\"pěi\":\"俖琣\",\n\"pèi\":\"伂妃沛犻佩帔姵斾柭旆浿珮配淠棑媐蓜辔馷嶏霈攈轡\",\n\"pēn\":\"噴濆歕\",\n\"pén\":\"瓫盆湓葐\",\n\"pěn\":\"呠翸\",\n\"pèn\":\"喯噴\",\n\"pēng\":\"亨匉怦抨泙恲胓砰梈烹硑絣軯剻閛漰嘭駍磞\",\n\"péng\":\"芃朋挷竼倗捀莑堋弸淜袶棚椖傰塜塳搒漨痭硼稝蓬鹏樥熢憉澎輣篣篷膨錋韸髼蟚蟛鬅纄蘕韼鵬騯鬔鑝\",\n\"pěng\":\"捧淎皏摓\",\n\"pèng\":\"掽椪碰閛槰踫磞\",\n\"pi\":\"榌\",\n\"pī\":\"丕伓伾妚批纰邳坯岯怶披抷枈炋狉狓砒悂秛秠紕铍陴旇翍耚豾釽鈚鉟銔磇駓髬噼錃錍魾憵礕礔鎞霹\",\n\"pí\":\"皮仳阰纰芘陂枇肶毘毗疲笓紕蚍郫铍啤埤崥猈蚾蚽豼焷琵禆脾腗裨鈹鲏罴膍蜱罷隦魮壀螕鮍篺螷貔鞞鵧羆朇鼙蠯\",\n\"pǐ\":\"匹庀疋仳圮吡苉悂脴痞銢嶏諀鴄擗噽癖嚭\",\n\"pì\":\"屁埤淠揊嫓媲睥潎稫僻澼嚊濞甓疈譬闢鷿鸊\",\n\"piān\":\"囨偏媥楄犏篇翩鍂鶣\",\n\"pián\":\"骈胼缏腁楩賆跰瑸緶骿蹁駢璸騈\",\n\"piǎn\":\"覑谝貵諞\",\n\"piàn\":\"猵骗魸獱騗騙\",\n\"piāo\":\"剽勡嘌嫖彯慓缥飘旚縹翲螵犥飃飄魒\",\n\"piáo\":\"嫖瓢薸闝\",\n\"piǎo\":\"莩殍缥瞟篻縹醥皫顠\",\n\"piào\":\"僄彯徱骠驃鰾\",\n\"piē\":\"氕覕潎撆暼瞥\",\n\"piě\":\"丿苤鐅\",\n\"piè\":\"嫳\",\n\"pīn\":\"拚姘拼砏礗穦馪驞\",\n\"pín\":\"玭贫娦貧琕嫔嬪薲嚬矉蘋蠙颦顰\",\n\"pǐn\":\"品榀\",\n\"pìn\":\"牝汖聘\",\n\"pīng\":\"乒甹俜娉涄砯聠艵頩\",\n\"píng\":\"平评凭呯坪岼泙郱帡庰枰洴玶胓荓瓶帲淜硑萍蚲塀幈焩甁缾蓱蛢評馮軿鲆凴竮鉼慿箳輧憑鮃檘簈蘋\",\n\"pǐng\":\"屛\",\n\"pìng\":\"\",\n\"pō\":\"钋陂坡岥泺泼釙翍颇溌酦頗潑醗濼醱鏺\",\n\"pó\":\"婆嘙搫蔢鄱皤櫇嚩\",\n\"pǒ\":\"叵尀钷笸鉕箥駊髲\",\n\"pò\":\"廹岶敀昢洦珀哱烞砶破粕奤湐猼蒪魄\",\n\"pōu\":\"抙剖娝捊\",\n\"póu\":\"抔抙垺捊掊裒箁\",\n\"pǒu\":\"咅哣婄掊棓犃\",\n\"pū\":\"攵攴扑抪炇柨陠痡秿噗撲潽鋪鯆\",\n\"pú\":\"圤匍捗莆菩菐葡蒲蒱僕箁酺墣獛璞濮瞨穙镤贌纀鏷\",\n\"pǔ\":\"圃埔浦烳普圑溥暜谱諩擈樸氆檏镨譜蹼鐠\",\n\"pù\":\"痡舗舖鋪曝\",\n\"qi\":\"啐\",\n\"qī\":\"七迉沏恓柒倛凄桤郪娸悽戚捿桼淒萋喰攲敧棲欹欺紪缉傶褄僛嘁墄慽榿漆緀慼緝諆踦螇霋蹊魌鏚鶈\",\n\"qí\":\"丌亓伎祁圻岓岐忯芪亝斉歧畁祇祈肵俟疧荠剘斊旂竒耆脐蚔蚑蚚陭颀埼崎帺掑淇猉畦萁萕跂軝釮骐骑嵜棊棋琦琪祺蛴隑愭碁碕稘褀锜頎鬿旗粸綥綨綦蜝蜞齊璂禥蕲觭螧錡鲯懠濝薺藄鄿檱櫀簯簱臍騎騏鳍蘄鯕鵸鶀麒籏艩蠐鬐騹鰭玂麡\",\n\"qǐ\":\"乞邔企屺芑启呇杞玘盀唘豈起啔啓啟婍梩绮袳跂晵棨綮綺諬闙\",\n\"qì\":\"气讫忔扱気汔迄呚弃汽矵芞亟呮泣炁盵咠洓竐栔欫氣訖唭焏夡愒棄湆湇葺滊碛摖暣甈碶噐憇槭趞器憩磜磧磩藒礘罊蟿鐑\",\n\"qiā\":\"抲掐袷揢葜擖\",\n\"qiá\":\"\",\n\"qiǎ\":\"拤峠跒酠鞐\",\n\"qià\":\"圶冾匼咭帢恰洽胢殎硈愘磍髂\",\n\"qiān\":\"千仟阡圱圲奷扦汘芊迁佥岍杄汧茾欦竏臤钎拪牵粁悭挳蚈谸婜孯牽釺掔谦鈆僉愆签鉛骞鹐慳搴摼撁厱磏諐遷鳽褰謙顅檶攐攑櫏簽鏲鵮孅攓騫籖鬜鬝籤韆\",\n\"qián\":\"仱岒忴扲拑玪乹前炶荨钤歬虔蚙钱钳偂掮揵軡亁媊朁犍葥鈐煔鉗墘榩箝銭撍潛潜羬蕁橬錢黔鎆黚騝濳騚灊鰬\",\n\"qiǎn\":\"凵肷唊淺嵰遣槏膁蜸谴缱繾譴鑓\",\n\"qiàn\":\"欠刋伣芡俔茜倩悓堑掅傔棈椠欿嗛慊皘蒨塹歉綪蔳儙槧篏輤篟壍嬱縴\",\n\"qiāng\":\"羌戕戗斨枪玱矼羗猐啌跄嗴椌溬獇腔嗆搶蜣锖嶈戧摤槍牄瑲羫锵篬謒蹌蹡鎗鏘鏹鶬\",\n\"qiáng\":\"強墙嫱蔷樯漒蔃墻嬙廧彊薔檣牆艢蘠\",\n\"qiǎng\":\"強羟搶羥墏彊繈襁镪繦鏹\",\n\"qiàng\":\"戗炝唴跄嗆戧摪熗羻\",\n\"qiāo\":\"帩硗郻喿嵪煍跷鄥鄡劁勪幓敲毃踍锹墝碻磝頝骹墽幧橇燆缲橾磽鍬鍫礉繑繰趬蹺蹻鏒鐰\",\n\"qiáo\":\"乔侨峤荍荞桥硚菬喬睄僑摮槗谯嘺墧嫶嶠憔潐蕎鞒樵橋燋犞癄瞧礄翹櫵藮譙趫鐈鞽顦\",\n\"qiǎo\":\"丂巧釥愀髜\",\n\"qiào\":\"诮陗峭窍偢殻殼誚髚僺嘺撬箾噭撽鞘韒礉竅翹鞩躈\",\n\"qiē\":\"苆\",\n\"qié\":\"癿伽茄聺\",\n\"qiě\":\"\",\n\"qiè\":\"厒妾怯疌郄匧窃悏挈栔洯帹惬淁笡愜椄猰蛪趄跙嗛慊朅稧箧锲篋踥穕鍥鯜竊籡\",\n\"qīn\":\"兓侵钦衾骎菳媇嵚欽嵰綅誛嶔親顉駸鮼寴\",\n\"qín\":\"庈忴扲芩芹肣矜埐珡矝秦耹菦蚙捦菳琴琹禽覃鈙鈫雂勤嗪嫀溱靲廑慬噙嶜擒斳鳹懄檎澿瘽螓懃蠄鵭\",\n\"qǐn\":\"坅昑笉梫赾寑锓寝寖寢鋟螼\",\n\"qìn\":\"吢吣抋沁唚菣揿搇撳寴瀙藽\",\n\"qīng\":\"靑青氢轻倾卿郬圊埥寈氫淸清軽傾綪蜻輕錆鲭鯖鑋\",\n\"qíng\":\"夝甠剠勍啨情殑硘晴棾氰葝暒擏樈擎檠黥\",\n\"qǐng\":\"苘顷请庼頃廎漀請檾謦\",\n\"qìng\":\"庆凊掅殸渹碃箐綮靘慶磬親儬濪罄櫦\",\n\"qiōng\":\"\",\n\"qióng\":\"卭邛宆穷穹茕桏惸琁筇笻赹焪焭琼舼蛬蛩煢熍睘跫銎瞏窮儝嬛憌橩璚藑瓊竆藭瓗\",\n\"qiòng\":\"\",\n\"qiū\":\"丘丠邱坵恘秌秋恷蚯媝湫萩楸湬塸蓲鹙篍緧蝵穐趥龜橚鳅蟗鞦鞧蘒鰌鰍鶖蠤龝\",\n\"qiú\":\"厹叴囚扏犰玌艽芁朹汓肍求虬泅牫虯俅觓訅訄酋唒浗紌莍逎逑釚梂殏毬球赇釻頄崷巯渞湭皳盚遒煪絿蛷裘巰觩賕璆蝤銶醔鮂鼽鯄鰽\",\n\"qiǔ\":\"搝糗\",\n\"qiù\":\"\",\n\"qū\":\"伹佉匤岖诎阹驱呿坥屈岴抾浀祛胠袪區焌紶蛆躯煀筁粬蛐詘趍嶇憈駆敺觑誳駈麹髷魼趨麯覰覷軀鶌麴黢覻驅鰸鱋\",\n\"qú\":\"佢劬斪朐胊菃衐鸲淭絇翑蚼葋軥蕖璖磲螶鴝璩翵蟝瞿鼩蘧忂灈戵欋氍爠籧臞癯欔蠷衢躣蠼鑺鸜\",\n\"qǔ\":\"苣取竘娶紶詓竬蝺龋齲\",\n\"qù\":\"去厺刞欪耝阒觑閴麮闃鼁覰覷覻\",\n\"quān\":\"奍弮悛圏棬椦箞鐉\",\n\"quán\":\"全权佺狋诠姾峑恮泉洤荃拳牷辁啳埢婘惓捲痊硂铨椦湶犈筌絟葲搼楾瑔觠詮跧輇蜷銓槫権踡縓醛駩闎鳈鬈騡孉巏鰁權齤矔蠸颧顴灥\",\n\"quǎn\":\"犭犬犮畎烇绻綣虇\",\n\"quàn\":\"劝牶勧韏勸灥\",\n\"quē\":\"炔缺缼蚗蒛阙闕\",\n\"qué\":\"瘸\",\n\"què\":\"汋却卻埆崅悫琷傕敠敪棤硞确阕塙搉皵碏阙鹊愨榷墧慤碻確趞燩闋礐闕鵲礭\",\n\"qūn\":\"夋囷逡箘歏\",\n\"qún\":\"宭峮帬裙羣群裠麇\",\n\"qǔn\":\"\",\n\"rán\":\"呥肰衻袇蚦袡蚺然髥嘫髯燃繎\",\n\"rǎn\":\"冄冉姌苒染珃媣蒅熯橪\",\n\"ràn\":\"\",\n\"rāng\":\"\",\n\"ráng\":\"穣儴勷瀼獽蘘禳瓤穰躟鬤\",\n\"rǎng\":\"壌壤攘爙纕\",\n\"ràng\":\"让懹譲讓\",\n\"ráo\":\"娆荛饶桡嬈蕘橈襓饒\",\n\"rǎo\":\"扰娆隢嬈擾\",\n\"rào\":\"绕遶穘繞\",\n\"ré\":\"捼\",\n\"rě\":\"喏惹\",\n\"rè\":\"热渃熱\",\n\"rén\":\"亻人仁壬忈朲忎秂芢魜銋鵀\",\n\"rěn\":\"忍荏栠栣荵秹菍棯稔綛躵銋\",\n\"rèn\":\"刃刄认仞仭讱屻岃扨纫妊杒牣纴肕轫韧饪祍姙紉衽紝訒軔梕袵釰釼絍腍鈓靱靭韌飪認餁\",\n\"rēng\":\"扔\",\n\"réng\":\"仍辸礽芿陾\",\n\"rì\":\"日驲囸氜衵釰釼鈤馹\",\n\"róng\":\"戎肜栄狨绒茙茸荣容峵毧烿傛媶嵘搑絨羢嫆嵤搈榵溶蓉榕榮熔瑢穁槦縙蝾褣镕螎融駥嬫嶸爃鎔瀜曧蠑\",\n\"rǒng\":\"冗宂坈傇軵縙氄\",\n\"ròng\":\"穃縙\",\n\"róu\":\"厹禸柔粈脜媃揉渘葇楺煣瑈腬糅蝚蹂輮鍒鞣瓇騥鰇鶔\",\n\"rǒu\":\"韖\",\n\"ròu\":\"肉宍楺譳\",\n\"rū\":\"嶿\",\n\"rú\":\"邚如吺侞帤茹挐桇袽铷渪筎蒘銣蕠蝡儒鴑嚅嬬孺濡獳薷鴽曘檽襦繻蠕颥醹顬鱬\",\n\"rǔ\":\"汝肗乳辱鄏擩\",\n\"rù\":\"入扖杁洳嗕媷溽缛蓐鳰褥縟\",\n\"ruán\":\"堧撋壖\",\n\"ruǎn\":\"阮朊软耎偄軟媆瑌腝碝緛輭檽瓀礝\",\n\"ruàn\":\"緛\",\n\"ruí\":\"苼桵甤緌蕤\",\n\"ruǐ\":\"惢蕋蕊橤繠壡蘃蘂\",\n\"ruì\":\"兊兌抐汭芮枘笍蚋锐瑞蜹睿銳鋭叡鏸\",\n\"rún\":\"瞤\",\n\"rǔn\":\"\",\n\"rùn\":\"闰润閏閠潤橍膶\",\n\"ruó\":\"挼捼\",\n\"ruò\":\"叒偌弱鄀婼渃焫楉嵶蒻箬篛爇鰙鰯鶸\",\n\"sa\":\"\",\n\"sā\":\"仨\",\n\"sǎ\":\"訯靸潵鞈攃灑躠纚\",\n\"sà\":\"卅泧钑飒脎萨鈒摋隡馺蕯颯薩櫒鏾\",\n\"sāi\":\"毢愢揌毸腮嘥噻鳃顋鰓\",\n\"sǎi\":\"嗮\",\n\"sài\":\"赛僿賽簺\",\n\"san\":\"壭\",\n\"sān\":\"三弎叁參叄叅毶毵厁毿犙鬖\",\n\"sǎn\":\"仐伞傘糁馓糝糤糣繖鏒鏾饊\",\n\"sàn\":\"俕帴閐潵\",\n\"sāng\":\"桒桑喪槡\",\n\"sǎng\":\"嗓搡磉褬颡鎟顙\",\n\"sàng\":\"喪\",\n\"sāo\":\"掻慅搔溞缫懆缲螦繅鳋颾騒繰騷鰠鱢\",\n\"sǎo\":\"埽掃嫂\",\n\"sào\":\"埽掃瘙懆氉矂髞\",\n\"sē\":\"閪\",\n\"sè\":\"色拺洓栜涩啬渋粣铯雭歮琗嗇瑟摵歰銫槭澁廧懎擌濇濏瘷穑薔澀璱瀒穡鎍繬穯轖鏼闟譅飋\",\n\"sēn\":\"森椮槮襂\",\n\"sěn\":\"\",\n\"sēng\":\"僧鬙\",\n\"sèng\":\"\",\n\"sī\":\"厶纟丝司糹糸私咝泀俬恖虒鸶偲傂媤愢斯絲缌蛳楒禗鉰飔凘厮禠罳蜤銯锶嘶噝廝撕澌磃緦蕬鋖燍螄鍶蟖蟴颸騦鯣鐁鷥鼶\",\n\"sí\":\"\",\n\"sǐ\":\"死愢\",\n\"sì\":\"巳亖四寺汜佀兕姒泤祀価孠杫泗饲驷俟娰枱柶洠牭洍涘肂飤梩笥耛耜釲竢覗嗣肆貄鈶鈻飴飼榹銉禩駟蕼儩騃瀃\",\n\"sōng\":\"忪枀松枩娀柗倯凇崧庺梥淞菘愡揔棇嵩硹憽濍檧鬆\",\n\"sóng\":\"\",\n\"sǒng\":\"怂悚捒耸竦傱愯楤嵷摗漎慫聳駷\",\n\"sòng\":\"吅讼宋诵送颂訟頌誦鎹餸\",\n\"sōu\":\"凁捒捜鄋嗖廀廋搜溲獀蒐蓃馊摉飕摗锼撨艘螋醙鎪餿颼颾鏉騪\",\n\"sǒu\":\"叜叟傁棷蓃嗾瞍擞薮擻藪櫢籔\",\n\"sòu\":\"欶嗽擞瘶擻\",\n\"sū\":\"甦酥稡稣窣穌鯂蘇蘓櫯囌\",\n\"sú\":\"圱俗\",\n\"sǔ\":\"\",\n\"sù\":\"玊夙诉泝肃洬涑珟素莤速埣梀殐粛骕傃棴粟訴谡嗉塑塐嫊愫溯溸肅遡鹔僳愬摵榡膆蔌觫趚遬憟樕樎潥碿鋉餗潚縤橚璛簌縮藗謖蹜驌鱐鷫\",\n\"suān\":\"狻痠酸\",\n\"suǎn\":\"匴篹\",\n\"suàn\":\"祘笇筭蒜算\",\n\"suī\":\"夊芕虽倠哸娞浽荾荽眭毸滖睢缞嗺熣濉縗鞖雖\",\n\"suí\":\"绥隋随遀綏隨瓍髄\",\n\"suǐ\":\"膸瀡髓\",\n\"suì\":\"亗岁砕祟谇埣嵗遂歲歳煫睟碎隧嬘澻穂誶賥檖燧璲禭穗穟繀襚邃旞繐繸譢鐆鏸鐩韢\",\n\"sūn\":\"狲荪孫喰飧飱搎猻蓀槂蕵薞\",\n\"sǔn\":\"扻损笋隼筍損榫箰簨鎨鶽\",\n\"sùn\":\"摌\",\n\"suō\":\"唆娑挱莏莎傞挲桫梭睃嗍嗦羧蓑摍趖簑簔縮鮻\",\n\"suó\":\"\",\n\"suǒ\":\"所乺唢索琑琐嫅惢锁嗩暛溑獕瑣褨璅縒鎍鎖鎻鏁\",\n\"suò\":\"逤溹蜶\",\n\"shā\":\"杀杉纱乷剎砂唦挱殺猀粆紗莎挲桬毮铩痧硰摋蔱裟榝樧魦鲨閷髿鎩鯊鯋繺\",\n\"shá\":\"啥\",\n\"shǎ\":\"傻儍\",\n\"shà\":\"倽唼啑帹菨萐喢嗄廈歃翜歰箑翣濈閯霎\",\n\"shāi\":\"筛篩諰簁簛籭\",\n\"shǎi\":\"摋\",\n\"shài\":\"晒攦曬\",\n\"shān\":\"山彡邖圸删刪杉芟姍姗衫钐埏挻柵炶狦珊舢痁脠軕笘釤閊傓跚剼搧煔嘇幓煽潸澘穇檆縿膻鯅羴羶\",\n\"shán\":\"\",\n\"shǎn\":\"闪陕炶陝閃閄晱煔睒摻熌覢\",\n\"shàn\":\"讪汕姍姗疝钐剡訕赸掞釤善單椫禅銏骟僐鄯儃墡墠撣潬缮嬗嶦擅敾樿歚禪膳磰謆赡繕蟮蟺譱贍鐥饍騸鳝鳣灗鱓鱔\",\n\"shang\":\"\",\n\"shāng\":\"伤殇商愓湯觞傷禓墒慯滳漡蔏殤熵螪觴謪鬺\",\n\"shǎng\":\"垧扄晌埫赏樉賞鋿鏛贘鑜\",\n\"shàng\":\"丄尙尚恦绱緔鞝\",\n\"shāo\":\"娋弰烧莦焼萷旓筲艄輎蕱燒鞘髾鮹\",\n\"sháo\":\"勺芍杓苕柖玿韶\",\n\"shǎo\":\"\",\n\"shào\":\"佋劭卲邵绍柖哨娋袑紹睄綤潲\",\n\"shē\":\"奓奢猞赊畭畬畲輋賒賖檨\",\n\"shé\":\"舌佘虵阇揲蛥闍磼\",\n\"shě\":\"舍捨\",\n\"shè\":\"厍设社泏舎舍厙挕涉涻渉設赦弽慑摂滠慴蔎歙蠂韘騇懾攝灄麝欇\",\n\"shéi\":\"誰\",\n\"shēn\":\"申屾扟伸身侁冞呻妽籶绅罙诜姺柛氠珅穼籸娠峷甡眒砷莘參叄堔敒深紳兟叅棽葠裑訷嫀搷罧蓡詵幓甧糁蔘糂燊薓駪鲹曑糝糣鯓鵢鯵鰺\",\n\"shén\":\"神榊鉮鰰\",\n\"shěn\":\"邥吲弞抌审矤哂矧宷谂谉婶淰渖訠棯審諗頣魫曋瞫嬸瀋覾讅\",\n\"shèn\":\"肾侺昚胂涁眘渗祳脤谌腎葚愼慎椹瘆蜄蜃滲鋠瘮黮\",\n\"shēng\":\"升生阩呏声斘昇枡泩狌苼殅牲珄竔陞曻陹殸笙湦焺甥鉎聲鍟鼪鵿\",\n\"shéng\":\"渑绳憴澠縄繉繩譝\",\n\"shěng\":\"眚偗渻\",\n\"shèng\":\"圣乗娍胜晠晟剰剩勝椉貹嵊琞聖墭榺蕂橳賸\",\n\"shi\":\"辻籂\",\n\"shī\":\"尸失师厔呞虱诗邿鸤屍施浉狮師絁釶湤湿葹溮溼獅蒒蓍詩鉇嘘瑡酾鳲噓箷蝨鳾褷鲺濕鍦鯴鰤鶳襹釃\",\n\"shí\":\"十饣乭时竍実实旹飠姼峕炻祏蚀埘宲時莳寔湜遈塒嵵溡蒔鉐實榯碩蝕鲥鮖鼫識鼭鰣\",\n\"shǐ\":\"史矢乨豕使始驶兘宩屎狶痑笶榁鉂駛\",\n\"shì\":\"士礻丗世仕市示卋式忕亊忯戺事侍势呩柹视试饰冟咶室峙恀恃拭昰是枾柿狧眂贳适栻烒眎眡耆舐莳轼逝铈啫埶畤秲視釈崼崻弑徥惿揓谥貰释勢嗜弒楴煶睗筮蒔觢試軾鈰鉃飾舓誓適鉽馶奭銴餝餙噬嬕澨澤諡諟遾檡螫謚簭襫醳釋鰘\",\n\"shōu\":\"収收敊\",\n\"shóu\":\"熟\",\n\"shǒu\":\"扌手守垨首艏\",\n\"shòu\":\"寿受狩兽售授涭绶痩膄壽夀瘦綬嘼獣獸鏉\",\n\"shū\":\"书殳疋忬抒纾叔杸枢陎姝倐倏捈書殊紓婌悆掓梳淑焂菽軗鄃琡疎疏舒摅毹毺綀输瑹跾踈樞緰蔬輸橾鮛儵攄瀭鵨\",\n\"shú\":\"朮尗秫孰赎蒣塾熟璹贖\",\n\"shǔ\":\"鼡暏暑稌黍署蜀鼠數潻薥薯曙癙藷襡糬襩屬籔蠴鱪鱰\",\n\"shù\":\"朮戍束沭述侸俞兪咰怸怷树竖荗恕捒庻庶絉蒁術隃尌裋竪腧鉥墅漱潄數澍豎樹濖錰霔鏣鶐虪\",\n\"shuā\":\"唰\",\n\"shuǎ\":\"耍\",\n\"shuà\":\"誜\",\n\"shuāi\":\"缞摔縗\",\n\"shuǎi\":\"甩\",\n\"shuài\":\"帅帥蟀卛\",\n\"shuān\":\"闩拴閂栓絟\",\n\"shuàn\":\"涮腨槫\",\n\"shuāng\":\"双泷霜雙孀瀧骦孇騻欆礵鷞鹴艭驦鸘\",\n\"shuǎng\":\"爽塽慡漺縔鏯\",\n\"shuàng\":\"灀\",\n\"shuí\":\"谁脽誰\",\n\"shuǐ\":\"氵水氺閖\",\n\"shuì\":\"帨挩捝涗涚娷祱稅税裞睡說説\",\n\"shǔn\":\"吮楯\",\n\"shùn\":\"顺眴舜順蕣橓瞚瞤瞬鬊\",\n\"shuō\":\"說説\",\n\"shuò\":\"妁洬烁朔铄欶矟搠蒴銏愬槊獡碩數箾鎙爍鑠\",\n\"ta\":\"侤\",\n\"tā\":\"他它牠祂趿铊塌榙溻鉈褟闧\",\n\"tá\":\"\",\n\"tǎ\":\"塔溚墖獭鮙鳎獺鰨\",\n\"tà\":\"沓挞狧闼粏崉涾傝嗒搨遝遢阘榻毾漯禢撻澾誻踏鞈嚃橽錔濌蹋鞜鎉鎑闒鞳蹹躂嚺闟闥譶躢\",\n\"tāi\":\"囼孡珆胎\",\n\"tái\":\"旲邰坮抬骀枱炱炲菭跆鲐箈臺颱駘儓鮐嬯擡薹檯斄籉\",\n\"tǎi\":\"奤\",\n\"tài\":\"太冭夳忕汏忲汰汱态肽钛泰舦酞鈦溙態燤\",\n\"tān\":\"坍贪怹啴痑舑貪摊滩嘽潬瘫擹攤灘癱\",\n\"tán\":\"坛昙倓谈郯埮婒惔弾覃榃痰锬谭嘾墰墵彈憛潭談醈壇曇橝澹燂錟檀顃罈藫壜繵譚貚醰譠罎\",\n\"tǎn\":\"忐坦袒钽菼毯僋鉭嗿緂儃憳憻暺醓璮襢\",\n\"tàn\":\"叹炭倓埮探傝湠僋嘆碳舕歎\",\n\"tāng\":\"铴湯嘡劏羰蝪薚镗蹚鏜闛鞺鼞\",\n\"táng\":\"坣唐堂傏啺愓棠鄌塘嵣搪溏蓎隚榶漟煻瑭禟膅樘磄糃膛橖篖糖螗踼糛螳赯醣鎕餹鏜闛饄鶶\",\n\"tǎng\":\"伖帑偒傥耥躺镋鎲儻戃灙曭爣矘钂\",\n\"tàng\":\"烫铴摥燙鐋\",\n\"tāo\":\"夲夵弢抭涛绦掏涭絛詜嫍幍慆搯滔槄瑫韬飸縚縧濤謟轁鞱韜饕\",\n\"táo\":\"匋迯咷洮逃桃陶啕梼淘绹萄祹裪綯蜪鞀醄鞉鋾駣檮饀騊鼗\",\n\"tǎo\":\"讨討\",\n\"tào\":\"套\",\n\"tè\":\"忑忒特脦犆铽慝鋱蟘\",\n\"tēng\":\"熥膯鼟\",\n\"téng\":\"疼痋幐腾誊漛滕邆縢螣駦謄儯藤騰籐鰧籘虅驣\",\n\"tèng\":\"霯\",\n\"tī\":\"剔梯锑踢銻擿鷉鷈體\",\n\"tí\":\"苐厗荑桋绨偍珶啼媂媞崹惿渧稊缇罤遆鹈嗁瑅禔綈睼碮褆徲漽磃緹蕛题趧蹄醍謕蹏鍗鳀題鮷鵜騠鯷鶗鶙禵鷤\",\n\"tǐ\":\"挮徥躰骵醍軆體\",\n\"tì\":\"戻奃屉剃朑俶倜悌挮涕眣绨逖啑屜悐惕掦笹逷屟惖揥替棣綈裼褅歒殢髰薙嚏鬀嚔瓋鬄籊趯\",\n\"tiān\":\"天兲呑婖添酟靔黇靝\",\n\"tián\":\"田屇沺恬畑畋盷胋钿甛甜菾湉塡搷阗瑱碵緂磌窴鴫璳闐鷆鷏\",\n\"tiǎn\":\"奵忝殄倎栝唺悿淟紾铦晪琠腆觍痶睓舔銛餂覥賟銽錪\",\n\"tiàn\":\"掭菾琠瑱舚\",\n\"tiāo\":\"旫佻庣恌條祧聎\",\n\"tiáo\":\"芀朷岧岹苕迢祒條笤萔铫蓚蓨蓧龆樤蜩銚調鋚鞗髫鲦鯈鎥齠鰷\",\n\"tiǎo\":\"宨晀朓脁窕誂斢窱嬥\",\n\"tiào\":\"啁眺粜絩覜趒糶\",\n\"tiē\":\"怗贴萜聑貼跕\",\n\"tié\":\"\",\n\"tiě\":\"铁蛈鉄僣銕鐡鐵驖\",\n\"tiè\":\"呫飻餮\",\n\"tīng\":\"厅庁汀听庍耓厛烃桯烴渟綎鞓聴聼廰聽廳\",\n\"tíng\":\"邒廷亭庭莛停婷嵉渟筳葶蜓楟榳閮霆聤蝏諪鼮\",\n\"tǐng\":\"圢甼町侹侱娗挺涏梃烶珽脡铤艇颋誔鋌閮頲\",\n\"tìng\":\"忊梃濎\",\n\"tōng\":\"囲炵通痌絧嗵蓪樋\",\n\"tóng\":\"仝佟彤侗峂庝哃垌峒峝狪茼晍桐浵烔砼蚒偅痌眮秱铜硧童粡絧詷赨酮鉖僮勭鉵銅餇鲖潼獞曈朣橦氃燑犝膧瞳穜鮦\",\n\"tǒng\":\"侗统捅桶筒統筩綂\",\n\"tòng\":\"恸痛衕慟憅\",\n\"tou\":\"\",\n\"tōu\":\"偸偷婾媮緰鋀鍮\",\n\"tóu\":\"亠投骰頭\",\n\"tǒu\":\"妵紏敨飳斢黈蘣\",\n\"tòu\":\"透埱\",\n\"tu\":\"汢\",\n\"tū\":\"凸宊禿秃怢突涋捸堗湥痜葖嶀鋵鵚鼵\",\n\"tú\":\"図图凃峹庩徒悇捈涂荼莵途啚屠梌菟揬稌趃塗嵞瘏筡腯蒤鈯圗圖廜摕潳瑹跿酴墿馟檡鍎駼鵌鶟鷋鷵\",\n\"tǔ\":\"土圡钍唋釷\",\n\"tù\":\"兎迌兔唋莵堍菟鋀鵵\",\n\"tuān\":\"湍猯圕煓貒\",\n\"tuán\":\"団团抟剸團塼慱摶漙槫篿檲鏄糰鷒鷻\",\n\"tuǎn\":\"畽墥疃\",\n\"tuàn\":\"彖湪猯褖貒\",\n\"tuī\":\"忒推蓷藬讉\",\n\"tuí\":\"弚颓僓隤墤尵橔頺頹頽魋穨蘈蹪\",\n\"tuǐ\":\"俀聉腿僓蹆骽\",\n\"tuì\":\"侻退娧煺蛻蜕螁駾\",\n\"tūn\":\"吞呑旽涒啍朜焞噋憞暾\",\n\"tún\":\"坉庉忳芚饨蛌豘豚軘飩鲀魨霕黗臀臋\",\n\"tǔn\":\"氽\",\n\"tùn\":\"\",\n\"tuō\":\"乇仛讬托扡汑饦杔侂咃咜拕拖沰挩捝莌袉袥託啴涶脫脱飥馲魠鮵\",\n\"tuó\":\"阤驮佗陀陁坨岮沱沲狏驼侻柁砤砣袉铊鸵紽堶媠詑跎酡碢鉈馱槖駄鋖駞駝橐鮀鴕鼧騨鼍驒驝鼉\",\n\"tuǒ\":\"彵妥庹椭楕嫷撱橢鵎鰖\",\n\"tuò\":\"杝柝毤唾涶萚跅毻嶞箨蘀籜\",\n\"wa\":\"哇\",\n\"wā\":\"屲穵呙劸咼哇徍挖洼娲畖窊唲啘媧窐嗗瓾蛙搲溛漥窪鼃攨韈\",\n\"wá\":\"娃\",\n\"wǎ\":\"佤邷咓砙瓸搲\",\n\"wà\":\"帓袜婠聉嗢搲腽膃韎襪韤\",\n\"wai\":\"\",\n\"wāi\":\"呙咼歪喎竵瀤\",\n\"wǎi\":\"崴\",\n\"wài\":\"外顡\",\n\"wān\":\"毌夗弯剜埦婠帵捥塆湾睕蜿潫豌鋺彎壪灣\",\n\"wán\":\"丸刓汍纨芄完岏忨抏杬玩笂紈捖蚖顽烷琓貦頑翫\",\n\"wǎn\":\"夘夗倇唍挽盌莞莬埦婉惋捥晚晥梚涴绾脘菀萖惌晩晼椀琬皖畹碗箢綩綰輓踠鋔鋺\",\n\"wàn\":\"卍卐妧杤捥脕掔腕萬絻綄輐槾澫鋄瞣薍錽蟃贃鎫贎\",\n\"wāng\":\"尣尫尪汪尩瀇\",\n\"wáng\":\"亾兦仼莣蚟朚\",\n\"wǎng\":\"罓罒网彺忹抂徃往枉罖罔迬惘菵暀棢蛧辋網蝄誷輞瀇魍\",\n\"wàng\":\"妄忘迋旺盳徍望暀朢\",\n\"wēi\":\"厃危威倭烓偎逶隇隈喴媙崴嵔愄揋揻葨葳微椳楲溦煨詴蜲縅蝛覣嶶薇燰鳂癐癓巍鰃鰄霺\",\n\"wéi\":\"囗韦圩囲围帏沩违闱隹峗峞洈為韋桅涠唯帷惟硙维喡圍媁嵬幃湋溈爲琟違潍維蓶鄬撝潙潿醀濰鍏闈鮠壝矀覹犩欈\",\n\"wěi\":\"伟伪纬芛苇炜玮洧娓屗捤浘荱诿偉偽唩崣捼梶痏硊萎隗骩媁嵔廆徫愇渨猥葦蒍骫骪暐椲煒瑋痿腲艉韪僞嶉撱碨磈鲔寪緯蔿諉踓韑頠薳儰濻鍡鮪瀢韙颹韡亹瓗斖\",\n\"wèi\":\"卫未位味苿為畏胃叞軎猚硙菋谓喂喡媦渭爲猬煟墛瞆碨蔚蜼慰熭犚磑緭蝟衛懀罻衞謂餧鮇螱褽餵魏藯轊鏏霨鳚蘶饖瓗讆躗讏躛\",\n\"wēn\":\"昷塭温缊榅殟溫瑥辒韫榲瘟緼縕豱輼轀鎾饂鳁鞰鰛鰮\",\n\"wén\":\"文彣芠炆玟闻紋蚉蚊珳阌雯瘒聞馼駇魰鳼鴍螡閺閿蟁闅鼤繧闦\",\n\"wěn\":\"伆刎吻呅忟抆呡忞歾肳紊桽脗稳穏穩\",\n\"wèn\":\"问妏汶紋莬問渂揾搵絻顐璺\",\n\"wēng\":\"翁嗡滃鹟聬螉鎓鶲\",\n\"wěng\":\"勜奣塕嵡滃蓊暡瞈攚\",\n\"wèng\":\"瓮蕹甕罋齆\",\n\"wō\":\"挝倭莴唩涹渦猧萵喔窝窩蜗撾濄緺蝸踒薶\",\n\"wǒ\":\"呙我咼婑婐捰\",\n\"wò\":\"仴沃肟卧枂臥偓捾涴媉幄握渥焥硪楃腛斡瞃濣瓁臒龌馧龏齷\",\n\"wū\":\"乌圬弙扜扝汚汙污邬呜巫杅杇於屋洿诬钨烏剭窏釫惡鄔嗚誈僫歍誣箼鋘螐鴮鎢鰞\",\n\"wú\":\"无毋吳吴吾呉芜郚唔娪峿洖浯茣莁梧珸祦無铻鹀蜈墲蕪鋙鋘橆璑蟱鯃鵐譕鼯鷡\",\n\"wǔ\":\"乄五午仵伍妩庑忤怃迕旿武玝侮倵娒捂逜陚啎娬牾堥珷摀碔鹉熓瑦舞嫵廡憮潕儛甒膴瞴鵡躌\",\n\"wù\":\"兀勿务戊阢屼扤坞岉杌沕芴忢旿物矹俉卼敄柮误務唔娪悟悞悮粅趶晤焐婺嵍惡渞痦隖靰骛塢奦嵨溩雺雾僫寤熃誤鹜鋈窹霚鼿霧齀蘁騖鶩\",\n\"xī\":\"夕兮邜吸忚扱汐西希扸卥昔析矽穸肸肹俙咥咭徆怸恓诶郗饻唏奚娭屖息悕氥浠牺狶莃唽悉惜晞桸欷淅渓烯焁焈琋硒羛菥赥釸傒惁晰晳焟焬犀睎稀粞翖翕舾鄎厀嵠徯溪煕皙碏蒠裼锡僖榽熄熈熙獡緆蜥覡誒豨閪餏嘻噏嬆嬉嶲憘潝瘜磎膝凞暿樨橀歙熻熺熹窸羲螅螇錫燨犠瞦礂蟋豀谿豯貕蹊巂糦繥釐雟鯑鵗觹譆醯鏭鐊隵嚱巇曦爔犧酅饎觽鼷蠵鸂觿鑴\",\n\"xí\":\"习郋席習袭觋雭喺媳椺蒵蓆嶍漝趘槢薂隰檄謵鎴霫鳛飁騱騽鰼襲驨\",\n\"xǐ\":\"杫枲玺徙喜葈葸鈢鉩鉨屣漇蓰銑憘憙暿橲歖禧諰壐縰謑鳃蟢蹝釐璽鰓瓕鱚囍矖纚躧\",\n\"xì\":\"匸卌扢屃忾饩呬忥怬细郄钑係恄欪盻郤屓欯绤細釳阋傒摡椞舃舄趇隙愾慀滊禊綌蒵赩隟墍熂犔稧戯潟澙蕮覤戱縘黖戲磶虩餼鬩繫闟霼屭衋\",\n\"xiā\":\"呷虲疨虾谺傄閕煆颬瘕瞎蝦鰕\",\n\"xiá\":\"匣侠狎俠峡柙炠狭陜埉峽烚狹珨祫捾硖笚翈舺陿徦硤遐敮暇瑕筪舝瘕碬辖磍蕸縖螛赮魻轄鍜霞鎋黠騢鶷\",\n\"xiǎ\":\"閕閜\",\n\"xià\":\"丅下乤圷芐疜夏梺廈睱諕嚇懗罅夓鎼鏬\",\n\"xiān\":\"仚仙屳先奾佡忺氙杴欦祆秈苮姺枮籼珗莶掀铦搟綅跹酰锨僊僲嘕摻銛暹銽韯嬐憸薟鍁繊褼韱鮮蹮馦孅廯攕醶纎鶱襳躚纖鱻\",\n\"xián\":\"伭咞闲咁妶弦臤贤咸唌挦涎玹盷胘娴娹婱絃舷蚿衔啣湺痫蛝閑閒鹇嗛嫌溓衘甉銜嫻嫺憪撏澖稴羬誸賢諴輱醎癇癎瞯藖礥鹹麙贒鑦鷴鷼鷳\",\n\"xiǎn\":\"彡冼狝显险崄毨烍猃蚬険赻筅尟尠搟禒蜆跣銑箲險嶮獫獮藓鍌鮮燹顕幰攇櫶蘚譣玁韅顯灦\",\n\"xiàn\":\"咞岘苋見现线臽限姭宪県陥哯垷娊峴涀莧軐陷埳晛現硍馅睍絤綖缐羡塪搚溓献粯羨腺僩僴槏綫誢憪撊線鋧憲橌橺縣錎餡壏懢豏麲瀗臔獻糮鏾霰鼸\",\n\"xiāng\":\"乡芗香郷厢啍鄉鄊廂湘缃萫葙鄕楿稥薌箱緗膷襄儴勷忀骧麘欀瓖镶鱜纕鑲驤\",\n\"xiáng\":\"夅瓨佭庠羏栙祥絴翔詳跭\",\n\"xiǎng\":\"享亯响蚃饷晑飨想銄餉鲞蠁鮝鯗響饗饟鱶\",\n\"xiàng\":\"向姠项珦象缿衖項像勨嶑潒銗閧曏橡襐闂嚮蟓鐌鱌\",\n\"xiāo\":\"灲灱呺枭侾哓枵骁宯宵庨消烋绡莦虓逍鸮婋梟焇猇萧痚痟睄硣硝窙翛销嗃揱綃蛸嘐歊潇熇箫踃嘵憢撨獟獢箾銷霄骹彇膮蕭颵魈鴞穘簘藃蟂蟏鴵嚣瀟簫蟰髇櫹嚻囂髐鷍蠨驍毊虈\",\n\"xiáo\":\"姣洨郩崤淆訤殽誵\",\n\"xiǎo\":\"小晓暁筱筿皛曉篠謏皢\",\n\"xiào\":\"孝効咲恔俲哮效涍笑啸傚敩殽嗃詨嘋嘨誟嘯薂歗熽斅斆\",\n\"xiē\":\"娎揳猲楔歇滊獦蝎蠍\",\n\"xié\":\"劦协旪協胁垥奊峫恊拹挾脇脅脋衺偕斜梋谐絜翓颉嗋愶慀搚携瑎綊熁膎鲑勰撷擕緳縀缬蝢鞋諧燲鮭嚡擷鞵儶襭孈攜讗龤\",\n\"xiě\":\"写冩寫藛\",\n\"xiè\":\"伳灺泻祄绁缷卸枻洩炨炧卨屑栧偞偰徢械烲焎禼紲亵媟屟渫絏絬谢僁塮觟觧榍榝榭褉靾噧寫屧暬樧碿緤嶰廨懈澥獬糏薤薢邂韰燮褻謝夑瀉鞢韘瀣爕繲蟹蠏齘齛纈齥齂躠躞\",\n\"xīn\":\"忄心邤妡忻辛昕杺欣盺俽莘惞訢鈊锌新歆廞鋅噺噷嬜薪馨鑫馫\",\n\"xín\":\"枔襑镡礥鐔\",\n\"xǐn\":\"伈\",\n\"xìn\":\"阠伩囟孞炘軐脪衅訫愖焮馸顖舋釁\",\n\"xīng\":\"狌星垶骍惺猩煋瑆腥觪箵篂興謃鮏曐觲騂皨鯹\",\n\"xíng\":\"刑邢饧巠形陉侀郉哘型洐荥钘陘娙硎铏鈃蛵滎鉶銒鋞餳\",\n\"xǐng\":\"睲醒擤\",\n\"xìng\":\"杏姓幸性荇倖莕婞悻涬葕睲緈鋞嬹臖\",\n\"xiōng\":\"凶匂兄兇匈芎讻忷汹哅恟洶胷胸訩詾賯\",\n\"xióng\":\"雄熊熋\",\n\"xiǒng\":\"焽焸\",\n\"xiòng\":\"诇詗夐敻\",\n\"xiū\":\"俢修咻庥烌烋羞脩脙鸺臹貅馐樇銝髤髹鎀鮴鵂鏅饈鱃飍\",\n\"xiú\":\"苬\",\n\"xiǔ\":\"朽滫潃糔\",\n\"xiù\":\"秀岫峀珛绣袖琇锈嗅溴綉璓褏褎銹螑嚊繍鏅繡鏥鏽齅\",\n\"xū\":\"圩戌旴姁疞盱欨砉胥须眗訏顼偦虗虚裇許谞媭揟欻湏湑虛須楈綇頊嘘墟稰蓲需魆噓嬃歔緰縃蕦蝑歘藇諝燸譃魖驉鑐鬚\",\n\"xú\":\"俆冔徐禑蒣\",\n\"xǔ\":\"呴姁诩浒栩珝喣湑蛡暊詡滸稰鄦糈諿醑盨\",\n\"xù\":\"旭伵序旴汿芧侐卹妶怴沀叙恓恤昫朐洫垿晇欰殈烅珬勗勖喐惐掝敍敘淢烼绪续蚼酗壻婿朂溆矞絮聓訹慉滀煦続蓄賉槒漵潊盢瞁緒聟蓿銊嘼獝稸緖藇藚續鱮\",\n\"xuān\":\"吅轩昍咺宣弲晅軒梋谖喧塇媗愃愋揎萲萱暄煊瑄蓒睻儇禤箮翧蝖鋗嬛懁蕿諠諼鞙駨鍹駽矎翾藼蘐蠉譞鰚讂\",\n\"xuán\":\"玄伭妶玹痃悬琁蜁嫙漩暶璇縣檈璿懸\",\n\"xuǎn\":\"咺选烜喛暅選癣癬\",\n\"xuàn\":\"怰泫昡炫绚眩袨铉琄眴衒渲絢楥楦鉉夐敻碹蔙镟颴縼繏鏇贙\",\n\"xuē\":\"疶蒆靴薛辥辪鞾\",\n\"xué\":\"穴斈乴学峃茓泶袕鸴敩踅噱壆學嶨澩燢觷鷽\",\n\"xuě\":\"彐雪樰膤艝轌鳕鱈\",\n\"xuè\":\"吷坹岤怴泬狘疦桖谑滈趐謔瞲瀥\",\n\"xūn\":\"坃勋埙焄勛塤煇窨勲勳薫嚑壎獯薰曛燻臐矄蘍壦爋纁醺\",\n\"xún\":\"廵寻巡旬杊畃询郇咰姰峋恂洵浔紃荀荨栒桪毥珣偱眴尋循揗詢鄩鲟噚潯蕁攳樳燅燖璕駨蟫蟳爓鱘鱏灥\",\n\"xùn\":\"卂训讯伨汛迅驯侚巺徇狥迿逊孫殉毥浚訊訓訙奞巽殾稄遜馴愻噀潠蕈濬爋顨鶽鑂\",\n\"ya\":\"\",\n\"yā\":\"丫圧吖亞庘押枒垭鸦桠鸭啞孲铔椏鴉錏鴨壓鵶鐚\",\n\"yá\":\"牙伢厑岈芽厓拁琊笌蚜堐崕崖涯猚釾睚衙漄齖\",\n\"yǎ\":\"疋厊庌挜疨唖啞掗痖雅瘂蕥\",\n\"yà\":\"劜圠轧亚冴襾覀讶亜犽迓亞玡軋姶娅挜砑俹氩埡婭掗訝铔揠氬猰聐圔椻稏碣窫潝磍壓瓛齾\",\n\"yān\":\"恹剦烟珚胭崦淊淹焑焉菸阉殗渰湮傿歅煙硽鄢嫣漹嶖樮醃橪閹閼嬮懨篶懕臙黫黰\",\n\"yán\":\"讠厃延闫严妍芫訁言岩昖沿炏炎郔唌埏姸娫狿莚娮梴盐啱琂硏訮閆阎喦嵓嵒筵綖蜒塩揅楌詽碞蔅羬颜厳虤閻檐顏顔嚴壛巌簷櫩壧巖巗欕礹鹽麣\",\n\"yǎn\":\"夵抁沇乵兖俨兗匽弇衍剡偃厣掞掩眼萒郾酓隁嵃愝扊揜晻棪渰渷琰遃隒椼硽罨裺演褗戭窴蝘魇噞嬐躽縯檿黡厴甗鰋鶠黤儼黬黭龑孍顩鼴巘巚曮魘鼹礹齴黶\",\n\"yàn\":\"厌妟觃牪匽姲彥彦洝砚唁宴晏烻艳覎验偐掞焔猏硏谚隁喭堰敥棪殗焱焰猒硯雁傿椻溎滟豣鳫厭墕暥熖酽鳱嬊谳餍鴈燄諺赝鬳嚈嬮曕鴳酀騐験嚥嬿艶贋軅曣爓醶騴齞鷃灔贗囐觾讌醼饜驗鷰艷灎釅驠灧讞豓豔灩\",\n\"yāng\":\"央姎抰泱柍殃胦眏秧鸯鉠雵鞅鍈鴦\",\n\"yáng\":\"扬阦阳旸杨炀玚飏佯劷氜疡钖垟徉昜洋羏烊珜眻陽婸崵崸愓揚蛘敭暘楊煬瑒禓瘍諹輰鍚鴹颺鰑霷鸉\",\n\"yǎng\":\"卬佒咉坱岟养柍炴氧眏痒紻傟勜楧軮慃氱蝆飬養駚懩攁瀁癢礢\",\n\"yàng\":\"怏柍恙样烊羕楧詇煬様漾鞅樣瀁\",\n\"yāo\":\"幺夭吆妖枖殀祅約訞喓葽楆腰鴁撽邀鴢\",\n\"yáo\":\"爻尧匋尭肴垚姚峣恌轺倄烑珧皐窕窑铫隃傜堯揺殽谣軺嗂媱徭愮搖摇滧猺遙遥僥摿暚榣瑤瑶銚飖餆嶢嶤徺磘窯窰餚繇謡謠鎐鳐颻蘨邎顤鰩鱙\",\n\"yǎo\":\"仸宎岆抭杳枖狕苭咬柼眑窅窈舀偠婹崾溔蓔榚闄騕齩鷕\",\n\"yào\":\"怮穾药烄袎窔筄葯詏愮熎瘧覞靿樂獟箹鹞薬鼼曜燿艞藥矅耀纅鷂讑\",\n\"ye\":\"亪\",\n\"yē\":\"吔耶倻椰暍歋窫噎潱擨蠮\",\n\"yé\":\"爷耶峫捓揶铘爺瑘釾鋣鎁\",\n\"yě\":\"也冶埜野嘢漜壄\",\n\"yè\":\"业曳页曵邺夜抴亱拽枼洂頁捙晔枽烨液焆谒堨揲殗腋葉墷楪業煠痷馌僷曅燁璍擖擛曄皣瞱緤鄴靥嶪嶫澲謁餣擫曗瞸鍱擪爗礏鎑饁鵺鐷靨驜瓛鸈\",\n\"yi\":\"弬\",\n\"yī\":\"一乊弌辷衤伊衣医吚壱依祎咿洢悘渏猗畩郼铱壹揖蛜禕嫛漪稦銥嬄撎噫夁瑿鹥繄檹毉醫黟譩鷖黳\",\n\"yí\":\"乁仪匜圯夷彵迆冝宐杝沂诒侇宜怡沶狏狋迤迱饴咦姨峓恞拸柂洟珆瓵荑贻迻宧巸扅栘桋眙胰袘貤痍移萓釶椬羠蛦詒貽遗媐暆椸煕誃跠頉颐飴儀熪箷遺嶬彛彜螔頥頤寲嶷簃顊鮧鴺彞彝謻鏔籎觺讉\",\n\"yǐ\":\"乚乛乙已以扡迆钇佁攺矣苡叕苢迤迱庡舣蚁釔倚扆笖逘酏偯猗崺攲敧旑鈘鉯鳦裿旖輢嬟敼螘檥礒艤蟻顗轙齮\",\n\"yì\":\"乂义亿弋刈忆艺仡匇肊艾议阣亦伇屹异忔芅伿佚劮呓坄役抑杙耴苅译邑佾呭呹妷峄怈怿易枍欥泆炈秇绎衪诣驿俋奕帟帠弈昳枻浂玴疫羿轶唈垼悒挹栺栧欭浥浳益袘袣谊貤勚埶埸悘悥掜殹異羛翊翌萟訳訲豙豛逸釴隿幆敡晹棭殔湙焲焬蛡詍跇軼鄓鈠骮亄兿嗌意溢獈痬睪竩缢義肄裔裛詣勩嫕廙榏潩瘗膉蓺蜴駅億槸毅熠熤熼瘞篒誼镒鹝鹢黓儗劓圛墿嬑嶧憶懌曀殪澺燚瘱瞖穓縊艗薏螠褹寱懝斁曎檍歝燡燱翳翼臆貖鮨癔藝藙贀鎰镱繶繹豷霬鯣鶃鶂鶍瀷蘙議譯醳醷饐囈鐿鷁鷊懿襼驛鷧虉鸃鷾讛齸\",\n\"yīn\":\"囙因阥阴侌垔姻洇茵荫音骃栶欭氤陰凐秵裀铟陻隂喑堙婣愔湮筃絪歅溵禋蒑蔭慇瘖銦磤緸鞇諲霒駰噾濦闉霠齗韾\",\n\"yín\":\"冘乑伒吟圻犾苂斦烎垠泿圁峾狺珢荶訔訚唫婬寅崟崯淫訡银鈝龂滛碒鄞夤蔩銀龈噖殥璌誾嚚檭蟫霪齦鷣\",\n\"yǐn\":\"廴尹引吲饮粌蚓硍赺淾鈏飲隠靷飮朄輑磤趛檃瘾隱嶾濥縯螾檼蘟櫽癮讔\",\n\"yìn\":\"廴印茚洕胤荫垽梀堷湚猌飲廕隠飮窨酳慭癊憗憖隱鮣懚\",\n\"yīng\":\"応旲英柍荥偀桜珱莺啨婴媖愥渶绬朠楧焽焸煐瑛嫈碤锳嘤撄甇緓缨罂蝧賏樱璎噟罃褮霙鴬鹦嬰應膺韺甖鹰鶑鶧嚶孆孾攖瀴罌蘡譍櫻瓔礯譻鶯鑍纓蠳鷪軈鷹鸎鸚\",\n\"yíng\":\"夃盁迎茔盈荧浧耺莹営桯萤萦营蛍溁溋萾僌塋嵤楹滢蓥滎潆熒蝇瑩禜蝿嬴營縈螢濙濚濴藀覮謍赢瀅爃蠅鎣巆攍瀛瀠瀯櫿贏灐籝灜籯\",\n\"yǐng\":\"矨郢浧梬颍颕颖摬影潁瘿穎頴覮巊廮瀴鐛癭\",\n\"yìng\":\"応映眏暎硬媵膡鞕應瀴鱦\",\n\"yo\":\"喲\",\n\"yō\":\"唷喲\",\n\"yōng\":\"拥痈邕庸傭嗈鄘雍墉嫞慵滽槦牅牗銿噰壅擁澭郺镛臃癕雝鏞鳙廱灉饔鱅鷛癰\",\n\"yóng\":\"喁揘颙顒鰫\",\n\"yǒng\":\"永甬咏怺泳俑勈勇栐埇悀柡恿惥愑湧硧詠塎嵱彮愹蛹慂踊鲬噰澭踴鯒\",\n\"yòng\":\"用苚砽蒏醟\",\n\"yōu\":\"优妋忧攸呦怮泑幽峳浟逌悠羪麀滺憂優鄾嚘懮瀀獶櫌纋耰獿\",\n\"yóu\":\"尢冘尤由甴汼沋犹邮怞油肬怣斿柚疣庮秞莜莤莸郵铀偤蚰訧逰揂游猶遊鱿楢猷鈾鲉輏駀蕕蝣魷輶鮋繇櫾\",\n\"yǒu\":\"友丣卣苃酉羑栯莠梄聈铕湵楢禉蜏銪槱牖牗黝懮\",\n\"yòu\":\"又右幼佑佦侑孧泑狖哊囿姷宥峟柚牰祐诱迶唀梎痏蚴亴貁釉酭誘鼬櫾\",\n\"yū\":\"込扜扝纡迃迂穻陓紆唹淤盓瘀箊\",\n\"yú\":\"丂亐于邘伃余妤扵杅欤玗玙於盂臾衧鱼乻俞兪捓禺竽舁茰虶娛娯娪娱桙狳谀酑馀渔萸釪隃隅雩魚堣堬婾媀媮崳嵎嵛揄楰渝湡畬腴萮逾骬愚楡榆歈牏瑜艅虞觎漁睮窬舆褕歶羭蕍蝓諛雓餘魣嬩懙澞覦踰歟璵螸輿鍝謣髃鮽旟籅騟鯲蘛轝鰅鷠鸆齵\",\n\"yǔ\":\"伛宇屿羽穻俁俣挧禹圄祤偊匬圉庾敔鄅斞萭傴寙楀瑀瘐與語窳頨龉噳嶼懙貐斔穥麌齬\",\n\"yù\":\"肀玉驭圫聿芌芋吾妪忬汩灹饫欥育郁俞昱狱禺秗茟俼叞峪彧栯浴砡钰预域堉悆惐捥欲淢淯痏粖翑袬谕逳阈喅喩喻媀寓庽御棛棜棫焴琙琟矞硢硲裕遇飫馭鹆奧愈滪煜稢罭艈蒮蓣誉鈺預僪嫗嶎戫毓澚獄瘉緎蜟蜮語輍銉隩慾潏熨稶蓹薁豫遹鋊鳿澦燏燠蕷藇諭錥閾鴧鴪鴥儥礇禦魊鹬癒礖礜篽醧鵒櫲饇蘌譽鐭霱雤欎驈鬻籞鱊鷸鸒欝軉鬰鬱灪籲爩\",\n\"yuān\":\"夗囦肙鸢剈冤弲悁眢鸳寃涴渆渁渊渕惌淵葾棩蒬蜎裷鹓箢鳶蜵駌鋺鴛嬽鵷灁鼘鼝\",\n\"yuán\":\"元円贠邧园妧沅芫杬茒垣爰貟原員圆笎蚖袁厡酛傆喛圎媛援湲猨缘鈨鼋園圓塬媴嫄楥溒源猿蒝榞榬辕緣縁蝝蝯褤魭圜橼羱薗螈黿謜轅鎱櫞邍騵鶢鶰厵\",\n\"yuǎn\":\"盶逺遠薳鋺\",\n\"yuàn\":\"夗妴苑怨院垸衏傆媛掾瑗禐愿裫褑噮願\",\n\"yuē\":\"曰曱扚約啘箹矱\",\n\"yuě\":\"哕噦\",\n\"yuè\":\"月戉兊刖兌妜岄抈礿岳枂泧玥恱栎哾悅悦蚏蚎軏钺阅捳跀跃粤越鈅楽粵鉞說説樂閲閱嬳樾篗髺嶽臒龠擽矆櫟籆瀹蘥黦爚禴趯躍籥鑰鸑籰鸙\",\n\"yūn\":\"涒缊蒀暈氲煴蒕氳熅煾奫緼蝹縕赟馧贇\",\n\"yún\":\"云勻匀伝囩妘抣沄纭芸昀畇眃秐貟郧員涢紜耘耺鄖雲愪溳筠筼蒷熉澐蕓鋆橒篔縜\",\n\"yǔn\":\"允阭夽抎狁玧陨荺殒喗鈗隕煴殞熅馻磒賱霣齫齳\",\n\"yùn\":\"孕贠运枟郓恽貟員菀鄆酝傊惲愠缊運慍暈榅煇腪韫韵褞熨緷緼蕰蕴縕薀醖醞餫藴鞰韗韞蘊韻\",\n\"zā\":\"帀匝沞迊咂拶桚紥紮鉔噈魳臜臢\",\n\"zá\":\"杂沯砸偺喒韴雑襍雜囃囋囐雥\",\n\"zǎ\":\"咋偺喒\",\n\"zāi\":\"災灾甾哉栽烖畠菑渽溨睵賳\",\n\"zǎi\":\"宰崽\",\n\"zài\":\"再在扗抂洅傤載酨儎縡\",\n\"zān\":\"兂撍糌橵篸簪簮鵤鐕鐟\",\n\"zán\":\"偺喒\",\n\"zǎn\":\"拶昝桚寁揝噆撍儧攅儹攢趱趲\",\n\"zàn\":\"暂暫賛赞錾鄼濽蹔酂瓉贊鏩鏨瓒酇囋灒讃瓚禶穳襸讚饡\",\n\"zāng\":\"匨牂羘赃賍臧賘贓髒贜\",\n\"zǎng\":\"驵駔\",\n\"zàng\":\"奘弉脏塟葬臧蔵銺臓臟\",\n\"zāo\":\"傮遭糟蹧醩\",\n\"záo\":\"凿鑿\",\n\"zǎo\":\"早枣栆蚤棗璅澡璪薻藻\",\n\"zào\":\"灶皁皂唣唕造梍喿慥煰艁噪簉燥竃竈譟趮躁\",\n\"zé\":\"则択沢咋泎责迮則唶啧帻笮舴責溭滜睪矠飵嘖嫧幘箦蔶樍歵諎赜擇澤皟瞔簀耫礋襗謮賾蠌灂齚齰鸅\",\n\"zè\":\"仄庂汄昃昗捑側崱稄\",\n\"zéi\":\"贼戝賊鲗蠈鰂鱡\",\n\"zēn\":\"撍\",\n\"zěn\":\"怎\",\n\"zèn\":\"谮譖\",\n\"zēng\":\"曽増鄫增憎缯橧璔縡矰磳竲罾繒譄鱛\",\n\"zěng\":\"\",\n\"zèng\":\"锃綜缯鋥熷甑赠繒鬵贈囎\",\n\"zi\":\"嗭\",\n\"zī\":\"孖孜甾茊兹呲咨姕姿茲栥玆畠紎赀资崰淄秶缁菑谘赼嗞孳嵫椔湽滋粢葘辎鄑孶禌觜訾貲資趑锱稵緕緇鈭镃龇輜鼒澬薋諮趦輺錙髭鲻鍿鎡璾頾頿鯔鶅齍纃鰦齜\",\n\"zí\":\"蓻\",\n\"zǐ\":\"子吇芓姉姊杍沝矷秄胏呰秭籽耔茈虸笫梓釨啙紫滓訿榟橴\",\n\"zì\":\"字自芓秄洓茡荢倳剚恣牸渍眦眥菑胔胾漬\",\n\"zōng\":\"宗枞倧骔堫嵏嵕惾棕猣腙葼朡椶潈稯綜緃樅熧緵翪蝬踨踪磫繌鍐豵蹤騌鬃騣鬉鬷鯮鯼鑁\",\n\"zǒng\":\"总倊偬捴惣揔搃焧傯蓗嵸摠潀稯総熜緫縂燪縱總\",\n\"zòng\":\"昮疭從猔碂粽潨糉緵瘲縦縱繌糭\",\n\"zōu\":\"邹驺诹郰陬掫菆棸棷鄒箃緅諏鄹鲰鯫黀騶齱齺\",\n\"zǒu\":\"赱走搊鯐\",\n\"zòu\":\"奏揍媰楱\",\n\"zū\":\"怚柤租菹葅蒩\",\n\"zú\":\"卆足倅哫崒崪族椊稡箤踤镞鎐鏃\",\n\"zǔ\":\"诅阻组俎柤爼珇祖唨組詛靻鎺\",\n\"zù\":\"\",\n\"zuān\":\"鉆劗躜鑚躦鑽\",\n\"zuǎn\":\"繤缵纂纉籫纘\",\n\"zuàn\":\"揝篹賺攥\",\n\"zuī\":\"厜朘嗺樶蟕纗\",\n\"zuí\":\"\",\n\"zuǐ\":\"咀觜嶊嘴噿濢璻\",\n\"zuì\":\"冣栬絊酔晬最祽睟稡罪辠槜酻蕞醉嶵檇鋷錊檌欈\",\n\"zūn\":\"尊噂墫嶟遵樽繜罇鶎鐏鳟鱒鷷\",\n\"zǔn\":\"僔撙繜譐\",\n\"zùn\":\"拵捘栫袸銌瀳\",\n\"zuo\":\"咗\",\n\"zuō\":\"嘬穝\",\n\"zuó\":\"苲昨柮秨莋捽笮稓筰鈼\",\n\"zuǒ\":\"左佐繓\",\n\"zuò\":\"作坐阼岝岞怍侳柞祚胙唑座袏做葄葃酢蓙飵諎糳\",\n\"zhā\":\"吒咋抯挓柤査哳紥偧紮揸渣楂飵劄摣潳皶樝觰皻譇齄齇\",\n\"zhá\":\"札甴軋闸剳蚻铡喋煠牐閘劄箚霅耫鍘譗\",\n\"zhǎ\":\"厏拃苲眨砟鲊鲝諎鮓鮺\",\n\"zhà\":\"乍吒灹诈怍咤奓柞宱痄蚱喥溠詐搾鲊榨鮓醡\",\n\"zhāi\":\"亝哜夈粂捚斋側斎摘榸齊嚌擿齋\",\n\"zhái\":\"厇宅翟擇檡\",\n\"zhǎi\":\"厏抧窄鉙\",\n\"zhài\":\"责债砦責債寨瘵\",\n\"zhān\":\"岾怗枬沾毡旃栴粘蛅飦惉詀趈詹閚谵鳽噡嶦薝邅霑氈氊瞻覱鹯旜譫饘鳣驙魙鱣鸇\",\n\"zhán\":\"讝\",\n\"zhǎn\":\"斩飐展盏斬琖搌盞嶃嶄榐辗颭嫸醆橏輾皽黵\",\n\"zhàn\":\"佔战栈桟站偡绽菚嵁棧湛戦碊僝綻嶘戰虥虦覱轏譧欃蘸驏\",\n\"zhāng\":\"弡张張章傽鄣嫜彰慞漳獐粻蔁遧暲樟璋餦蟑鏱騿鱆麞\",\n\"zhǎng\":\"仉仧兏長掌漲幥礃鞝\",\n\"zhàng\":\"丈仗扙帐杖胀账粀帳涱脹痮障墇嶂幛漲賬瘬瘴瞕\",\n\"zhāo\":\"佋钊妱巶招昭炤釗啁釽鉊鳭駋鍣皽\",\n\"zháo\":\"\",\n\"zhǎo\":\"爫找沼菬瑵\",\n\"zhào\":\"兆诏枛垗炤狣赵笊肁啅旐棹罀詔照罩箌肈肇趙曌濯燳鮡櫂瞾羄\",\n\"zhe\":\"嗻\",\n\"zhē\":\"嗻嫬遮螫\",\n\"zhé\":\"乇厇扸杔歽矺砓籷虴哲埑粍袩啠悊晢晣辄喆棏聑蛰詟搩蜇谪馲摺輒慹磔輙銸辙蟄嚞謫謺鮿轍讁讋\",\n\"zhě\":\"者乽啫锗赭踷褶鍺襵\",\n\"zhè\":\"柘浙這淛嗻蔗樜鹧蟅鷓\",\n\"zhèi\":\"\",\n\"zhēn\":\"贞针侦侲帧枮浈珎珍胗貞帪桢眞真砧祯針偵酙寊幀揕湞葴遉嫃搸斟椹楨溱獉甄禎蒖蓁鉁榛槙殝瑧碪禛潧箴樼澵臻薽錱轃鍼籈鱵\",\n\"zhén\":\"\",\n\"zhěn\":\"诊抮枕姫弫昣轸屒畛疹眕袗紾聄萙竧裖覙診軫嫃缜槙稹駗縝縥辴鬒黰\",\n\"zhèn\":\"圳阵纼甽侲挋陣鸩振朕栚紖桭眹赈塦揕絼榐瑱誫賑鋴镇震鴆鎮鎭\",\n\"zhēng\":\"凧争佂姃征怔爭糽埩峥炡狰烝眐脀钲埥崝崢掙猙睁聇铮媜揁筝徰睜蒸踭鉦徴箏綪錚徵篜鬇癥鏳\",\n\"zhěng\":\"氶抍糽拯掟晸愸撜整\",\n\"zhèng\":\"氶证诤郑政徎钲掙幁証塣諍靕鄭憕鴊證\",\n\"zhī\":\"之支卮汁芝巵汥呮泜肢栀祗秓胑胝衼倁栺疷祬脂隻梔菭椥臸搘稙綕榰蜘馶憄鳷鴲織鼅蘵\",\n\"zhí\":\"执侄妷直秇姪郦値值聀釞埴執淔职戠植犆禃絷臷跖瓡摕摭馽嬂慹漐潪踯樴膱縶職蟙蹠軄躑\",\n\"zhǐ\":\"夂止凪劧旨阯坁址帋扺汦沚纸芷坧抧杫祇祉茋咫恉指枳洔砋秖衹轵淽疻紙蚔訨趾軹黹禔筫絺酯墌徴徵槯藢襧\",\n\"zhì\":\"至芖坁志忮扻豸制厔垁帙帜斦治炙质迣郅俧峙庢庤挃柣栉洷祑陟娡徏挚捗晊桎歭狾秩致袟贽轾乿偫剬徝掷梽楖猘畤痓痔眰秲秷窒紩翐袠觗貭铚鸷傂崻彘智滞痣蛭骘寘廌搱滍稚筫置跱輊锧雉墆滯潌疐瘈聜製覟誌銍幟憄摨摯潪熫稺膣觯質踬銴鋕擳旘瀄璏緻隲駤鴙儨劕懥擲擿櫛穉螲懫織贄櫍瓆觶騭鯯礩豑鶨騺驇躓鷙鑕豒\",\n\"zhōng\":\"夂伀汷刣妐彸忪忠泈炂终柊盅衳钟舯衷終鈡幒蔠蜙锺銿螤鴤螽鍾斔鼨蹱鐘籦\",\n\"zhǒng\":\"肿冢喠尰塚歱煄腫瘇種徸踵穜\",\n\"zhòng\":\"仲众妕狆祌茽衶蚛偅眾堹媑筗衆種緟諥\",\n\"zhōu\":\"州舟诌侜周洲炿诪烐珘辀郮啁婤徟掫淍矪週鸼喌赒輈翢銂賙輖霌駲嚋盩謅鵃騆譸\",\n\"zhóu\":\"妯軸碡\",\n\"zhǒu\":\"肘帚疛胕菷晭睭箒鯞\",\n\"zhòu\":\"纣伷呪咒宙绉冑咮昼紂胄荮皱酎晝粙椆葤詋軸甃僽皺駎噣縐繇薵骤籀籕籒驟\",\n\"zhū\":\"侏诛邾洙茱株珠诸猪硃秼袾铢絑蛛誅跦槠潴蕏蝫銖橥諸豬駯鮢鴸瀦藸鼄櫧櫫鯺蠩\",\n\"zhú\":\"朮竹竺炢笁茿烛窋逐笜舳逫瘃蓫敱磩築篴斀燭蠋躅鱁劚孎灟斸曯欘爥蠾钃\",\n\"zhǔ\":\"丶主劯宔拄砫罜陼帾渚煑煮詝褚嘱濐燝麈瞩屬囑鸀矚\",\n\"zhù\":\"伫佇住纻芧苎坾拀杼注苧贮迬驻乼壴柱柷殶炷祝疰眝砫祩竚莇紵紸羜蛀尌嵀註貯跓軴铸筯鉒飳馵嗻墸箸翥樦澍鋳駐築篫麆簗櫡鑄\",\n\"zhuā\":\"抓挝撾檛膼簻髽\",\n\"zhuǎ\":\"爫\",\n\"zhuāi\":\"拽\",\n\"zhuǎi\":\"跩\",\n\"zhuài\":\"拽睉\",\n\"zhuān\":\"专叀専恮砖耑專剸鄟塼嫥漙瑼甎磗膞颛磚諯篿蟤顓鱄\",\n\"zhuǎn\":\"孨転膞竱轉\",\n\"zhuàn\":\"灷啭転堟蒃傳瑑腞僎僝赚撰篆馔篹縳襈賺簨贃譔饌囀籑\",\n\"zhuāng\":\"妆庄妝庒荘娤桩莊梉湷粧装裝樁糚\",\n\"zhuǎng\":\"奘\",\n\"zhuàng\":\"壮壯状狀壵焋僮漴撞戅戆戇\",\n\"zhuī\":\"隹骓锥錐騅鵻\",\n\"zhuǐ\":\"沝\",\n\"zhuì\":\"坠笍奞娷缀隊惴甀缒腏畷硾膇墜綴赘縋諈醊錣礈贅鑆\",\n\"zhūn\":\"圫宒忳迍肫窀谆啍諄衠\",\n\"zhǔn\":\"准埻凖準稕綧\",\n\"zhùn\":\"旽訰稕綧\",\n\"zhuō\":\"拙炪倬捉桌梲棁涿淖棳棹焯窧槕穛鐯穱\",\n\"zhuó\":\"圴彴汋犳灼卓叕妰茁斫浊丵剢捔浞烵诼酌啄啅娺聉斱斮晫椓琸硺窡罬蓔墌撯擆斲禚劅諁諑趠鋜噣濁燋篧擢斀斵濯藋櫡謶镯繳鵫灂蠗鐲籗鷟蠿籱\",\n\"zhuò\":\"\",\n\"chǎng,ān,hàn\": \"厂\",\n\"dīng,zhēng\": \"丁\",\n\"bǔ,bo\": \"卜\",\n\"jǐ,jī\": \"几\",\n\"le,liǎo\": \"了\",\n\"gān,gàn\": \"干\",\n\"dà,dài,tài\": \"大\",\n\"yǔ,yù,yú\": \"与\",\n\"shàng,shǎng\": \"上\",\n\"wàn,mò\": \"万\",\n\"gè,gě\": \"个各\",\n\"me,mó,ma,yāo\": \"么\",\n\"guǎng,ān\": \"广\",\n\"wáng,wú\": \"亡\",\n\"nǚ,rǔ\": \"女\",\n\"chā,chá,chǎ\": \"叉\",\n\"wáng,wàng\": \"王\",\n\"fū,fú\": \"夫\",\n\"zhā,zā,zhá\": \"扎\",\n\"bù,fǒu\": \"不\",\n\"qū,ōu\": \"区\",\n\"chē,jū\": \"车\",\n\"qiè,qiē\": \"切\",\n\"wǎ,wà\": \"瓦\",\n\"tún,zhūn\": \"屯\",\n\"shǎo,shào\": \"少\",\n\"zhōng,zhòng\": \"中\",\n\"nèi,nà\": \"内\",\n\"jiàn,xiàn\": \"见\",\n\"cháng,zhǎng\": \"长\",\n\"shén,shí\": \"什\",\n\"piàn,piān\": \"片\",\n\"pú,pū\": \"仆\",\n\"huà,huā\": \"化\",\n\"chóu,qiú\": \"仇\",\n\"zhuǎ,zhǎo\": \"爪\",\n\"jǐn,jìn\": \"仅\",\n\"fù,fǔ\": \"父\",\n\"cóng,zòng\": \"从\",\n\"fēn,fèn\": \"分\",\n\"shì,zhī\": \"氏\",\n\"fēng,fěng\": \"风\",\n\"gōu,gòu\": \"勾\",\n\"liù,lù\": \"六\",\n\"dǒu,dòu\": \"斗\",\n\"wèi,wéi\": \"为\",\n\"chǐ,chě\": \"尺\",\n\"yǔ,yú\": \"予\",\n\"dǎ,dá\": \"打\",\n\"zhèng,zhēng\": \"正症挣\",\n\"bā,pá\": \"扒\",\n\"jié,jiē\": \"节结\",\n\"shù,shú,zhú\": \"术\",\n\"kě,kè\": \"可\",\n\"shí,dàn\": \"石\",\n\"kǎ,qiǎ\": \"卡\",\n\"běi,bèi\": \"北\",\n\"zhàn,zhān\": \"占\",\n\"qiě,jū\": \"且\",\n\"yè,xié\": \"叶\",\n\"hào,háo\": \"号\",\n\"zhī,zhǐ\": \"只\",\n\"dāo,tāo\": \"叨\",\n\"zǎi,zǐ,zī\": \"仔\",\n\"lìng,líng,lǐng\": \"令\",\n\"lè,yuè\": \"乐\",\n\"jù,gōu\": \"句\",\n\"chù,chǔ\": \"处\",\n\"tóu,tou\": \"头\",\n\"níng,nìng,zhù\": \"宁\",\n\"zhào,shào\": \"召\",\n\"fā,fà\": \"发\",\n\"tái,tāi\": \"台苔\",\n\"káng,gāng\": \"扛\",\n\"dì,de\": \"地\",\n\"sǎo,sào\": \"扫\",\n\"chǎng,cháng\": \"场\",\n\"pǔ,pò,pō,piáo\": \"朴\",\n\"guò,guo,guō\": \"过\",\n\"yā,yà\": \"压\",\n\"yǒu,yòu\": \"有\",\n\"kuā,kuà\": \"夸\",\n\"xié,yá,yé,yú,xú\": \"邪\",\n\"jiá,jiā,gā,xiá\": \"夹\",\n\"huà,huá\": \"划\",\n\"dāng,dàng\": \"当\",\n\"tù,tǔ\": \"吐\",\n\"xià,hè\": \"吓\",\n\"tóng,tòng\": \"同\",\n\"qū,qǔ\": \"曲\",\n\"ma,má,mǎ\": \"吗\",\n\"qǐ,kǎi\": \"岂\",\n\"zhū,shú\": \"朱\",\n\"chuán,zhuàn\": \"传\",\n\"xiū,xǔ\": \"休\",\n\"rèn,rén\": \"任\",\n\"huá,huà,huā\": \"华\",\n\"jià,jiè,jie\": \"价\",\n\"fèn,bīn\": \"份\",\n\"yǎng,áng\": \"仰\",\n\"xiě,xuè\": \"血\",\n\"sì,shì\": \"似\",\n\"háng,xíng\": \"行\",\n\"huì,kuài\": \"会\",\n\"hé,gě\": \"合\",\n\"chuàng,chuāng\": \"创\",\n\"chōng,chòng\": \"冲\",\n\"qí,jì,zī,zhāi\": \"齐\",\n\"yáng,xiáng\": \"羊\",\n\"bìng,bīng\": \"并\",\n\"hàn,hán\": \"汗\",\n\"tāng,shāng\": \"汤\",\n\"xīng,xìng\": \"兴\",\n\"xǔ,hǔ\": \"许\",\n\"lùn,lún\": \"论\",\n\"nà,nǎ,nèi,nā\": \"那\",\n\"jìn,jǐn\": \"尽\",\n\"sūn,xùn\": \"孙\",\n\"xì,hū\": \"戏\",\n\"hǎo,hào\": \"好\",\n\"tā,jiě\": \"她\",\n\"guān,guàn\": \"观冠\",\n\"hóng,gōng\": \"红\",\n\"xiān,qiàn\": \"纤\",\n\"jì,jǐ\": \"纪济\",\n\"yuē,yāo\": \"约\",\n\"nòng,lòng\": \"弄\",\n\"yuǎn,yuàn\": \"远\",\n\"huài,pēi,pī,péi\": \"坏\",\n\"zhé,shé,zhē\": \"折\",\n\"qiǎng,qiāng,chēng\": \"抢\",\n\"ké,qiào\": \"壳\",\n\"fāng,fáng\": \"坊\",\n\"bǎ,bà\": \"把\",\n\"gān,gǎn\": \"杆\",\n\"sū,sù\": \"苏\",\n\"gàng,gāng\": \"杠\",\n\"gèng,gēng\": \"更\",\n\"lì,lí\": \"丽\",\n\"hái,huán\": \"还\",\n\"fǒu,pǐ\": \"否\",\n\"xiàn,xuán\": \"县\",\n\"zhù,chú\": \"助\",\n\"ya,yā\": \"呀\",\n\"chǎo,chāo\": \"吵\",\n\"yuán,yún,yùn\": \"员\",\n\"ba,bā\": \"吧\",\n\"bié,biè\": \"别\",\n\"dīng,dìng\": \"钉\",\n\"gū,gù\": \"估\",\n\"hé,hē,hè\": \"何\",\n\"tǐ,tī,bèn\": \"体\",\n\"bó,bǎi,bà\": \"伯\",\n\"yòng,yōng\": \"佣\",\n\"fó,fú,bì,bó\": \"佛\",\n\"dù,dǔ\": \"肚\",\n\"guī,jūn,qiū\": \"龟\",\n\"jiǎo,jué\": \"角\",\n\"tiáo,tiāo\": \"条\",\n\"xì,jì\": \"系\",\n\"yìng,yīng\": \"应\",\n\"zhè,zhèi\": \"这\",\n\"jiān,jiàn\": \"间监\",\n\"mēn,mèn\": \"闷\",\n\"dì,tì,tuí\": \"弟\",\n\"shā,shà\": \"沙\",\n\"shà,shā\": \"煞\",\n\"méi,mò\": \"没\",\n\"shěn,chén\": \"沈\",\n\"shí,zhì\": \"识\",\n\"niào,suī\": \"尿\",\n\"wěi,yǐ\": \"尾\",\n\"ē,ā\": \"阿\",\n\"jìn,jìng\": \"劲\",\n\"zòng,zǒng\": \"纵\",\n\"wén,wèn\": \"纹\",\n\"mǒ,mò,mā\": \"抹\",\n\"dān,dàn,dǎn\": \"担\",\n\"chāi,cā\": \"拆\",\n\"jū,gōu\": \"拘\",\n\"lā,lá\": \"拉\",\n\"bàn,pàn\": \"拌\",\n\"zé,zhái\": \"择\",\n\"qí,jī\": \"其奇\",\n\"ruò,rě\": \"若\",\n\"píng,pēng\": \"苹\",\n\"zhī,qí\": \"枝\",\n\"guì,jǔ\": \"柜\",\n\"sàng,sāng\": \"丧\",\n\"cì,cī\": \"刺\",\n\"yǔ,yù\": \"雨语\",\n\"bēn,bèn\": \"奔\",\n\"qī,qì\": \"妻\",\n\"zhuǎn,zhuàn,zhuǎi\": \"转\",\n\"xiē,suò\": \"些\",\n\"ne,ní\": \"呢\",\n\"tiě,tiē,tiè,\": \"帖\",\n\"lǐng,líng\": \"岭\",\n\"zhī,zhì\": \"知织\",\n\"hé,hè,huó,huò,hú\": \"和\",\n\"gòng,gōng\": \"供共\",\n\"wěi,wēi\": \"委\",\n\"cè,zè,zhāi\": \"侧\",\n\"pò,pǎi\": \"迫\",\n\"de,dì,dí\": \"的\",\n\"cǎi,cài\": \"采\",\n\"fú,fù\": \"服\",\n\"dǐ,de\": \"底\",\n\"jìng,chēng\": \"净\",\n\"juàn,juǎn\": \"卷\",\n\"quàn,xuàn\": \"券\",\n\"dān,shàn,chán\": \"单\",\n\"qiǎn,jiān\": \"浅\",\n\"xiè,yì\": \"泄\",\n\"pō,bó\": \"泊\",\n\"pào,pāo\": \"泡\",\n\"ní,nì\": \"泥\",\n\"zé,shì\": \"泽\",\n\"kōng,kòng,kǒng\": \"空\",\n\"láng,làng\": \"郎\",\n\"xiáng,yáng\": \"详\",\n\"lì,dài\": \"隶\",\n\"shuā,shuà\": \"刷\",\n\"jiàng,xiáng\": \"降\",\n\"cān,shēn,cēn,sān\": \"参\",\n\"dú,dài\": \"毒\",\n\"kuà,kū\": \"挎\",\n\"dǎng,dàng\": \"挡\",\n\"kuò,guā\": \"括\",\n\"shí,shè\": \"拾\",\n\"tiāo,tiǎo\": \"挑\",\n\"shèn,shén\": \"甚\",\n\"xiàng,hàng\": \"巷\",\n\"nán,nā\": \"南\",\n\"xiāng,xiàng\": \"相\",\n\"chá,zhā\": \"查\",\n\"bǎi,bó,bò\": \"柏\",\n\"yào,yāo\": \"要\",\n\"yán,yàn\": \"研\",\n\"qì,qiè\": \"砌\",\n\"bèi,bēi\": \"背\",\n\"shěng,xǐng\": \"省\",\n\"xiāo,xuē\": \"削\",\n\"hǒng,hōng,hòng\": \"哄\",\n\"mào,mò\": \"冒\",\n\"yǎ,yā\": \"哑\",\n\"sī,sāi\": \"思\",\n\"mǎ,mā,mà\": \"蚂\",\n\"huá,huā\": \"哗\",\n\"yè,yàn,yān\": \"咽\",\n\"zán,zǎ\": \"咱\",\n\"hā,hǎ,hà\": \"哈\",\n\"nǎ,něi,na,né\": \"哪\",\n\"hāi,ké\": \"咳\",\n\"gǔ,gū\": \"骨\",\n\"gāng,gàng\": \"钢\",\n\"yào,yuè\": \"钥\",\n\"kàn,kān\": \"看\",\n\"zhòng,zhǒng,chóng\": \"种\",\n\"biàn,pián\": \"便\",\n\"zhòng,chóng\": \"重\",\n\"xìn,shēn\": \"信\",\n\"zhuī,duī\": \"追\",\n\"dài,dāi\": \"待\",\n\"shí,sì,yì\": \"食\",\n\"mài,mò\": \"脉\",\n\"jiāng,jiàng\": \"将浆\",\n\"dù,duó\": \"度\",\n\"qīn,qìng\": \"亲\",\n\"chà,chā,chāi,cī\": \"差\",\n\"zhà,zhá\": \"炸\",\n\"pào,páo,bāo\": \"炮\",\n\"sǎ,xǐ\": \"洒\",\n\"xǐ,xiǎn\": \"洗\",\n\"jué,jiào\": \"觉\",\n\"biǎn,piān\": \"扁\",\n\"shuō,shuì,yuè\": \"说\",\n\"lǎo,mǔ\": \"姥\",\n\"gěi,jǐ\": \"给\",\n\"luò,lào\": \"络\",\n\"zǎi,zài\": \"载\",\n\"mái,mán\": \"埋\",\n\"shāo,shào\": \"捎稍\",\n\"dū,dōu\": \"都\",\n\"ái,āi\": \"挨\",\n\"mò,mù\": \"莫\",\n\"è,wù,ě,wū\": \"恶\",\n\"xiào,jiào\": \"校\",\n\"hé,hú\": \"核\",\n\"yūn,yùn\": \"晕\",\n\"huàng,huǎng\": \"晃\",\n\"ài,āi\": \"唉\",\n\"ā,á,ǎ,à,a\": \"啊\",\n\"bà,ba,pí\": \"罢\",\n\"zuàn,zuān\": \"钻\",\n\"qiān,yán\": \"铅\",\n\"chéng,shèng\": \"乘\",\n\"mì,bì\": \"秘泌\",\n\"chēng,chèn,chèng\": \"称\",\n\"dào,dǎo\": \"倒\",\n\"tǎng,cháng\": \"倘\",\n\"chàng,chāng\": \"倡\",\n\"chòu,xiù\": \"臭\",\n\"shè,yè,yì\": \"射\",\n\"gē,gé\": \"胳搁\",\n\"shuāi,cuī\": \"衰\",\n\"liáng,liàng\": \"凉量\",\n\"chù,xù\": \"畜\",\n\"páng,bàng\": \"旁磅\",\n\"zhǎng,zhàng\": \"涨\",\n\"yǒng,chōng\": \"涌\",\n\"qiāo,qiǎo\": \"悄\",\n\"jiā,jia,jie\": \"迦家\",\n\"dú,dòu\": \"读\",\n\"shàn,shān\": \"扇\",\n\"shān,shàn\": \"苫\",\n\"bèi,pī\": \"被\",\n\"tiáo,diào,zhōu\": \"调\",\n\"bō,bāo\": \"剥\",\n\"néng,nài\": \"能\",\n\"nán,nàn,nuó\": \"难\",\n\"pái,pǎi\": \"排\",\n\"jiào,jiāo\": \"教\",\n\"jù,jū\": \"据\",\n\"zhù,zhuó,zhe\": \"著\",\n\"jūn,jùn\": \"菌\",\n\"lè,lēi\": \"勒\",\n\"shāo,sào\": \"梢\",\n\"fù,pì\": \"副\",\n\"piào,piāo\": \"票\",\n\"shèng,chéng\": \"盛\",\n\"què,qiāo,qiǎo\": \"雀\",\n\"chí,shi\": \"匙\",\n\"mī,mí\": \"眯\",\n\"la,lā\": \"啦\",\n\"shé,yí\": \"蛇\",\n\"lèi,léi,lěi\": \"累\",\n\"zhǎn,chán\": \"崭\",\n\"quān,juàn,juān\": \"圈\",\n\"lóng,lǒng\": \"笼\",\n\"dé,děi,de\": \"得\",\n\"jiǎ,jià\": \"假\",\n\"māo,máo\": \"猫\",\n\"xuán,xuàn\": \"旋\",\n\"zhe,zhuó,zháo,zhāo\": \"着\",\n\"lǜ,shuài\": \"率\",\n\"gài,gě,hé\": \"盖\",\n\"lín,lìn\": \"淋\",\n\"qú,jù\": \"渠\",\n\"jiàn,jiān\": \"渐溅\",\n\"hùn,hún\": \"混\",\n\"sù,xiǔ,xiù\": \"宿\",\n\"tán,dàn\": \"弹\",\n\"yǐn,yìn\": \"隐\",\n\"jǐng,gěng\": \"颈\",\n\"lǜ,lù\": \"绿\",\n\"qū,cù\": \"趋\",\n\"tí,dī,dǐ\": \"提\",\n\"jiē,qì\": \"揭\",\n\"lǒu,lōu\": \"搂\",\n\"qī,jī\": \"期\",\n\"sàn,sǎn\": \"散\",\n\"gě,gé\": \"葛\",\n\"zhāo,cháo\": \"朝\",\n\"luò,là,lào\": \"落\",\n\"yǐ,yī\": \"椅\",\n\"gùn,hùn\": \"棍\",\n\"zhí,shi\": \"殖\",\n\"xià,shà\": \"厦\",\n\"liè,liě\": \"裂\",\n\"jǐng,yǐng\": \"景\",\n\"pēn,pèn\": \"喷\",\n\"pǎo,páo\": \"跑\",\n\"hē,hè,yè\": \"喝\",\n\"pù,pū\": \"铺\",\n\"zhù,zhú\": \"筑\",\n\"dá,dā\": \"答\",\n\"bǎo,bǔ,pù\": \"堡\",\n\"ào,yù\": \"奥\",\n\"fān,pān\": \"番\",\n\"là,xī\": \"腊\",\n\"gǎng,jiǎng\": \"港\",\n\"céng,zēng\": \"曾\",\n\"yú,tōu\": \"愉\",\n\"qiáng,qiǎng,jiàng\": \"强\",\n\"shǔ,zhǔ\": \"属\",\n\"zhōu,yù\": \"粥\",\n\"shè,niè\": \"摄\",\n\"tián,zhèn\": \"填\",\n\"méng,mēng,měng\": \"蒙\",\n\"jìn,jīn\": \"禁\",\n\"lù,liù\": \"碌\",\n\"tiào,táo\": \"跳\",\n\"é,yǐ\": \"蛾\",\n\"jiě,jiè,xiè\": \"解\",\n\"shù,shǔ,shuò\": \"数\",\n\"liū,liù\": \"溜\",\n\"sāi,sài,sè\": \"塞\",\n\"pì,bì\": \"辟\",\n\"fèng,féng\": \"缝\",\n\"piě,piē\": \"撇\",\n\"mó,mú\": \"模\",\n\"bǎng,bàng\": \"榜\",\n\"shang,cháng\": \"裳\",\n\"xiān,xiǎn\": \"鲜\",\n\"yí,nǐ\": \"疑\",\n\"gāo,gào\": \"膏\",\n\"piāo,piào,piǎo\": \"漂\",\n\"suō,sù\": \"缩\",\n\"qù,cù\": \"趣\",\n\"sā,sǎ\": \"撒\",\n\"tàng,tāng\": \"趟\",\n\"héng,hèng\": \"横\",\n\"mán,mén\": \"瞒\",\n\"bào,pù\": \"暴\",\n\"mó,mā\": \"摩\",\n\"hú,hū,hù\": \"糊\",\n\"pī,pǐ\": \"劈\",\n\"yàn,yān\": \"燕\",\n\"báo,bó,bò\": \"薄\",\n\"mó,mò\": \"磨\",\n\"jiǎo,zhuó\": \"缴\",\n\"cáng,zàng\": \"藏\",\n\"fán,pó\": \"繁\",\n\"bì,bei\": \"臂\",\n\"chàn,zhàn\": \"颤\",\n\"jiāng,qiáng\": \"疆\",\n\"jiáo,jué,jiào\": \"嚼\",\n\"rǎng,rāng\": \"嚷\",\n\"lù,lòu\": \"露\",\n\"náng,nāng\": \"囊\",\n\"hāng,bèn\": \"夯\",\n\"āo,wā\": \"凹\",\n\"féng,píng\": \"冯\",\n\"xū,yù\": \"吁\",\n\"lèi,lē\": \"肋\",\n\"lūn,lún\": \"抡\",\n\"jiè,gài\": \"芥\",\n\"xīn,xìn\": \"芯\",\n\"chā,chà\": \"杈\",\n\"xiāo,xiào\": \"肖\",\n\"zhī,zī\": \"吱\",\n\"ǒu,ōu,òu\": \"呕\",\n\"nà,nè\": \"呐\",\n\"qiàng,qiāng\": \"呛\",\n\"tún,dùn\": \"囤\",\n\"kēng,háng\": \"吭\",\n\"diàn,tián\": \"佃\",\n\"sì,cì\": \"伺\",\n\"diàn,tián,shèng\": \"甸\",\n\"páo,bào\": \"刨\",\n\"duì,ruì,yuè\": \"兑\",\n\"kē,kě\": \"坷\",\n\"tuò,tà,zhí\": \"拓\",\n\"fú,bì\": \"拂\",\n\"nǐng,níng,nìng\": \"拧\",\n\"ào,ǎo,niù\": \"拗\",\n\"kē,hē\": \"苛\",\n\"yān,yǎn\": \"奄\",\n\"hē,a,kē\": \"呵\",\n\"gā,kā\": \"咖\",\n\"jiǎo,yáo\": \"侥\",\n\"chà,shā\": \"刹\",\n\"nüè,yào\": \"疟\",\n\"máng,méng\": \"氓\",\n\"gē,yì\": \"疙\",\n\"jǔ,jù\": \"沮\",\n\"zú,cù\": \"卒\",\n\"wǎn,yuān\": \"宛\",\n\"mí,mǐ\": \"弥\",\n\"qì,qiè,xiè\": \"契\",\n\"xié,jiā\": \"挟\",\n\"duò,duǒ\": \"垛\",\n\"zhà,shān,shi,cè\": \"栅\",\n\"bó,bèi\": \"勃\",\n\"zhóu,zhòu\": \"轴\",\n\"liē,liě,lié,lie\": \"咧\",\n\"yo,yō\": \"哟\",\n\"qiào,xiào\": \"俏\",\n\"hóu,hòu\": \"侯\",\n\"píng,bǐng\": \"屏\",\n\"nà,nuó\": \"娜\",\n\"pá,bà\": \"耙\",\n\"qī,xī\": \"栖\",\n\"jiǎ,gǔ\": \"贾\",\n\"láo,lào\": \"唠\",\n\"bàng,bèng\": \"蚌\",\n\"gōng,zhōng\": \"蚣\",\n\"li,lǐ,lī\": \"哩\",\n\"juè,jué\": \"倔\",\n\"yīn,yān,yǐn\": \"殷\",\n\"wō,guō\": \"涡\",\n\"lào,luò\": \"烙\",\n\"niǎn,niē\": \"捻\",\n\"yè,yē\": \"掖\",\n\"chān,xiān,càn,shǎn\": \"掺\",\n\"dǎn,shàn\": \"掸\",\n\"fēi,fěi\": \"菲\",\n\"qián,gān\": \"乾\",\n\"shuò,shí\": \"硕\",\n\"luō,luó,luo\": \"啰\",\n\"hǔ,xià\": \"唬\",\n\"dāng,chēng\": \"铛\",\n\"xiǎn,xǐ\": \"铣\",\n\"jiǎo,jiáo\": \"矫\",\n\"kuǐ,guī\": \"傀\",\n\"jì,zhài\": \"祭\",\n\"tǎng,chǎng\": \"淌\",\n\"chún,zhūn\": \"淳\",\n\"wèi,yù\": \"尉\",\n\"duò,huī\": \"堕\",\n\"chuò,chāo\": \"绰\",\n\"bēng,běng,bèng\": \"绷\",\n\"zōng,zèng\": \"综\",\n\"zhuó,zuó\": \"琢\",\n\"chuǎi,chuài,chuāi,tuán,zhuī\": \"揣\",\n\"péng,bāng\": \"彭\",\n\"zhuī,chuí\": \"椎\",\n\"léng,lēng,líng\": \"棱\",\n\"qiào,qiáo\": \"翘\",\n\"zhā,chā\": \"喳\",\n\"há,gé\": \"蛤\",\n\"qiàn,kàn\": \"嵌\",\n\"yān,ā\": \"腌\",\n\"dūn,duì\": \"敦\",\n\"kuì,huì\": \"溃\",\n\"sāo,sǎo\": \"骚\",\n\"kǎi,jiē\": \"楷\",\n\"pín,bīn\": \"频\",\n\"liú,liù\": \"馏\",\n\"nì,niào\": \"溺\",\n\"jiǎo,chāo\": \"剿\",\n\"áo,āo\": \"熬\",\n\"màn,wàn\": \"蔓\",\n\"chá,chā\": \"碴\",\n\"xūn,xùn\": \"熏\",\n\"da,dá\": \"瘩\",\n\"tuì,tùn\": \"褪\",\n\"liáo,liāo\": \"撩\",\n\"cuō,zuǒ\": \"撮\",\n\"cháo,zhāo\": \"嘲\",\n\"hēi,mò\": \"嘿\",\n\"zhuàng,chuáng\": \"幢\",\n\"jī,qǐ\": \"稽\",\n\"biě,biē\": \"瘪\",\n\"liáo,lào,lǎo\": \"潦\",\n\"chéng,dèng\": \"澄\",\n\"lèi,léi\": \"擂\",\n\"mò,má\": \"蟆\",\n\"liáo,liǎo\": \"燎\",\n\"liào,liǎo\": \"瞭\",\n\"sào,sāo\": \"臊\",\n\"mí,méi\": \"糜\",\n\"huò,huō,huá\": \"豁\",\n\"pù,bào\": \"瀑\",\n\"zǎn,cuán\": \"攒\",\n\"bò,bǒ\": \"簸\",\n\"bó,bù\": \"簿\",\n}","// @see [百家姓](https://zh.wikipedia.org/wiki/%E7%99%BE%E5%AE%B6%E5%A7%93)\nmodule.exports = {\n  \"赵\": [[\"zhào\"]],\n  \"钱\": [[\"qián\"]],\n  \"孙\": [[\"sūn\"]],\n  \"李\": [[\"lǐ\"]],\n  \"周\": [[\"zhōu\"]],\n  \"吴\": [[\"wú\"]],\n  \"郑\": [[\"zhèng\"]],\n  \"王\": [[\"wáng\"]],\n  \"冯\": [[\"féng\"]],\n  \"陈\": [[\"chén\"]],\n  \"褚\": [[\"chǔ\"]],\n  \"卫\": [[\"wèi\"]],\n  \"蒋\": [[\"jiǎng\"]],\n  \"沈\": [[\"shěn\"]],\n  \"韩\": [[\"hán\"]],\n  \"杨\": [[\"yáng\"]],\n  \"朱\": [[\"zhū\"]],\n  \"秦\": [[\"qín\"]],\n  \"尤\": [[\"yóu\"]],\n  \"许\": [[\"xǔ\"]],\n  \"何\": [[\"hé\"]],\n  \"吕\": [[\"lǚ\"]],\n  \"施\": [[\"shī\"]],\n  \"张\": [[\"zhāng\"]],\n  \"孔\": [[\"kǒng\"]],\n  \"曹\": [[\"cáo\"]],\n  \"严\": [[\"yán\"]],\n  \"华\": [[\"huà\"]],\n  \"金\": [[\"jīn\"]],\n  \"魏\": [[\"wèi\"]],\n  \"陶\": [[\"táo\"]],\n  \"姜\": [[\"jiāng\"]],\n  \"戚\": [[\"qī\"]],\n  \"谢\": [[\"xiè\"]],\n  \"邹\": [[\"zōu\"]],\n  \"喻\": [[\"yù\"]],\n  \"柏\": [[\"bǎi\"]],\n  \"水\": [[\"shuǐ\"]],\n  \"窦\": [[\"dòu\"]],\n  \"章\": [[\"zhāng\"]],\n  \"云\": [[\"yún\"]],\n  \"苏\": [[\"sū\"]],\n  \"潘\": [[\"pān\"]],\n  \"葛\": [[\"gě\"]],\n  \"奚\": [[\"xī\"]],\n  \"范\": [[\"fàn\"]],\n  \"彭\": [[\"péng\"]],\n  \"郎\": [[\"láng\"]],\n  \"鲁\": [[\"lǔ\"]],\n  \"韦\": [[\"wéi\"]],\n  \"昌\": [[\"chāng\"]],\n  \"马\": [[\"mǎ\"]],\n  \"苗\": [[\"miáo\"]],\n  \"凤\": [[\"fèng\"]],\n  \"花\": [[\"huā\"]],\n  \"方\": [[\"fāng\"]],\n  \"俞\": [[\"yú\"]],\n  \"任\": [[\"rèn\"]],\n  \"袁\": [[\"yuán\"]],\n  \"柳\": [[\"liǔ\"]],\n  \"酆\": [[\"fēng\"]],\n  \"鲍\": [[\"bào\"]],\n  \"史\": [[\"shǐ\"]],\n  \"唐\": [[\"táng\"]],\n  \"费\": [[\"fèi\"]],\n  \"廉\": [[\"lián\"]],\n  \"岑\": [[\"cén\"]],\n  \"薛\": [[\"xuē\"]],\n  \"雷\": [[\"léi\"]],\n  \"贺\": [[\"hè\"]],\n  \"倪\": [[\"ní\"]],\n  \"汤\": [[\"tāng\"]],\n  \"滕\": [[\"téng\"]],\n  \"殷\": [[\"yīn\"]],\n  \"罗\": [[\"luó\"]],\n  \"毕\": [[\"bì\"]],\n  \"郝\": [[\"hǎo\"]],\n  \"邬\": [[\"wū\"]],\n  \"安\": [[\"ān\"]],\n  \"常\": [[\"cháng\"]],\n  \"乐\": [[\"yuè\"]],\n  \"于\": [[\"yú\"]],\n  \"时\": [[\"shí\"]],\n  \"傅\": [[\"fù\"]],\n  \"皮\": [[\"pí\"]],\n  \"卞\": [[\"biàn\"]],\n  \"齐\": [[\"qí\"]],\n  \"康\": [[\"kāng\"]],\n  \"伍\": [[\"wǔ\"]],\n  \"余\": [[\"yú\"]],\n  \"元\": [[\"yuán\"]],\n  \"卜\": [[\"bǔ\"]],\n  \"顾\": [[\"gù\"]],\n  \"孟\": [[\"mèng\"]],\n  \"平\": [[\"píng\"]],\n  \"黄\": [[\"huáng\"]],\n  \"和\": [[\"hé\"]],\n  \"穆\": [[\"mù\"]],\n  \"萧\": [[\"xiāo\"]],\n  \"尹\": [[\"yǐn\"]],\n  \"姚\": [[\"yáo\"]],\n  \"邵\": [[\"shào\"]],\n  \"湛\": [[\"zhàn\"]],\n  \"汪\": [[\"wāng\"]],\n  \"祁\": [[\"qí\"]],\n  \"毛\": [[\"máo\"]],\n  \"禹\": [[\"yǔ\"]],\n  \"狄\": [[\"dí\"]],\n  \"米\": [[\"mǐ\"]],\n  \"贝\": [[\"bèi\"]],\n  \"明\": [[\"míng\"]],\n  \"臧\": [[\"zāng\"]],\n  \"计\": [[\"jì\"]],\n  \"伏\": [[\"fú\"]],\n  \"成\": [[\"chéng\"]],\n  \"戴\": [[\"dài\"]],\n  \"谈\": [[\"tán\"]],\n  \"宋\": [[\"sòng\"]],\n  \"茅\": [[\"máo\"]],\n  \"庞\": [[\"páng\"]],\n  \"熊\": [[\"xióng\"]],\n  \"纪\": [[\"jì\"]],\n  \"舒\": [[\"shū\"]],\n  \"屈\": [[\"qū\"]],\n  \"项\": [[\"xiàng\"]],\n  \"祝\": [[\"zhù\"]],\n  \"董\": [[\"dǒng\"]],\n  \"梁\": [[\"liáng\"]],\n  \"杜\": [[\"dù\"]],\n  \"阮\": [[\"ruǎn\"]],\n  \"蓝\": [[\"lán\"]],\n  \"闵\": [[\"mǐn\"]],\n  \"席\": [[\"xí\"]],\n  \"季\": [[\"jì\"]],\n  \"麻\": [[\"má\"]],\n  \"强\": [[\"qiáng\"]],\n  \"贾\": [[\"jiǎ\"]],\n  \"路\": [[\"lù\"]],\n  \"娄\": [[\"lóu\"]],\n  \"危\": [[\"wēi\"]],\n  \"江\": [[\"jiāng\"]],\n  \"童\": [[\"tóng\"]],\n  \"颜\": [[\"yán\"]],\n  \"郭\": [[\"guō\"]],\n  \"梅\": [[\"méi\"]],\n  \"盛\": [[\"shèng\"]],\n  \"林\": [[\"lín\"]],\n  \"刁\": [[\"diāo\"]],\n  \"钟\": [[\"zhōng\"]],\n  \"徐\": [[\"xú\"]],\n  \"邱\": [[\"qiū\"]],\n  \"骆\": [[\"luò\"]],\n  \"高\": [[\"gāo\"]],\n  \"夏\": [[\"xià\"]],\n  \"蔡\": [[\"cài\"]],\n  \"田\": [[\"tián\"]],\n  \"樊\": [[\"fán\"]],\n  \"胡\": [[\"hú\"]],\n  \"凌\": [[\"líng\"]],\n  \"霍\": [[\"huò\"]],\n  \"虞\": [[\"yú\"]],\n  \"万\": [[\"wàn\"]],\n  \"支\": [[\"zhī\"]],\n  \"柯\": [[\"kē\"]],\n  \"昝\": [[\"zǎn\"]],\n  \"管\": [[\"guǎn\"]],\n  \"卢\": [[\"lú\"]],\n  \"莫\": [[\"mò\"]],\n  \"经\": [[\"jīng\"]],\n  \"房\": [[\"fáng\"]],\n  \"裘\": [[\"qiú\"]],\n  \"缪\": [[\"miào\"]],\n  \"干\": [[\"gān\"]],\n  \"解\": [[\"xiè\"]],\n  \"应\": [[\"yīng\"]],\n  \"宗\": [[\"zōng\"]],\n  \"丁\": [[\"dīng\"]],\n  \"宣\": [[\"xuān\"]],\n  \"贲\": [[\"bēn\"]],\n  \"邓\": [[\"dèng\"]],\n  \"郁\": [[\"yù\"]],\n  \"单\": [[\"shàn\"]],\n  \"杭\": [[\"háng\"]],\n  \"洪\": [[\"hóng\"]],\n  \"包\": [[\"bāo\"]],\n  \"诸\": [[\"zhū\"]],\n  \"左\": [[\"zuǒ\"]],\n  \"石\": [[\"shí\"]],\n  \"崔\": [[\"cuī\"]],\n  \"吉\": [[\"jí\"]],\n  \"钮\": [[\"niǔ\"]],\n  \"龚\": [[\"gōng\"]],\n  \"程\": [[\"chéng\"]],\n  \"嵇\": [[\"jī\"]],\n  \"邢\": [[\"xíng\"]],\n  \"滑\": [[\"huá\"]],\n  \"裴\": [[\"péi\"]],\n  \"陆\": [[\"lù\"]],\n  \"荣\": [[\"róng\"]],\n  \"翁\": [[\"wēng\"]],\n  \"荀\": [[\"xún\"]],\n  \"羊\": [[\"yáng\"]],\n  \"於\": [[\"yū\"]],\n  \"惠\": [[\"huì\"]],\n  \"甄\": [[\"zhēn\"]],\n  \"曲\": [[\"qū\"]],\n  \"家\": [[\"jiā\"]],\n  \"封\": [[\"fēng\"]],\n  \"芮\": [[\"ruì\"]],\n  \"羿\": [[\"yì\"]],\n  \"储\": [[\"chǔ\"]],\n  \"靳\": [[\"jìn\"]],\n  \"汲\": [[\"jí\"]],\n  \"邴\": [[\"bǐng\"]],\n  \"糜\": [[\"mí\"]],\n  \"松\": [[\"sōng\"]],\n  \"井\": [[\"jǐng\"]],\n  \"段\": [[\"duàn\"]],\n  \"富\": [[\"fù\"]],\n  \"巫\": [[\"wū\"]],\n  \"乌\": [[\"wū\"]],\n  \"焦\": [[\"jiāo\"]],\n  \"巴\": [[\"bā\"]],\n  \"弓\": [[\"gōng\"]],\n  \"牧\": [[\"mù\"]],\n  \"隗\": [[\"kuí\"]],\n  \"山\": [[\"shān\"]],\n  \"谷\": [[\"gǔ\"]],\n  \"车\": [[\"chē\"]],\n  \"侯\": [[\"hóu\"]],\n  \"宓\": [[\"mì\"]],\n  \"蓬\": [[\"péng\"]],\n  \"全\": [[\"quán\"]],\n  \"郗\": [[\"xī\"]],\n  \"班\": [[\"bān\"]],\n  \"仰\": [[\"yǎng\"]],\n  \"秋\": [[\"qiū\"]],\n  \"仲\": [[\"zhòng\"]],\n  \"伊\": [[\"yī\"]],\n  \"宫\": [[\"gōng\"]],\n  \"宁\": [[\"nìng\"]],\n  \"仇\": [[\"qiú\"]],\n  \"栾\": [[\"luán\"]],\n  \"暴\": [[\"bào\"]],\n  \"甘\": [[\"gān\"]],\n  \"钭\": [[\"tǒu\"]],\n  \"厉\": [[\"lì\"]],\n  \"戎\": [[\"róng\"]],\n  \"祖\": [[\"zǔ\"]],\n  \"武\": [[\"wǔ\"]],\n  \"符\": [[\"fú\"]],\n  \"刘\": [[\"liú\"]],\n  \"景\": [[\"jǐng\"]],\n  \"詹\": [[\"zhān\"]],\n  \"束\": [[\"shù\"]],\n  \"龙\": [[\"lóng\"]],\n  \"叶\": [[\"yè\"]],\n  \"幸\": [[\"xìng\"]],\n  \"司\": [[\"sī\"]],\n  \"韶\": [[\"sháo\"]],\n  \"郜\": [[\"gào\"]],\n  \"黎\": [[\"lí\"]],\n  \"蓟\": [[\"jì\"]],\n  \"薄\": [[\"bó\"]],\n  \"印\": [[\"yìn\"]],\n  \"宿\": [[\"sù\"]],\n  \"白\": [[\"bái\"]],\n  \"怀\": [[\"huái\"]],\n  \"蒲\": [[\"pú\"]],\n  \"邰\": [[\"tái\"]],\n  \"从\": [[\"cóng\"]],\n  \"鄂\": [[\"è\"]],\n  \"索\": [[\"suǒ\"]],\n  \"咸\": [[\"xián\"]],\n  \"籍\": [[\"jí\"]],\n  \"赖\": [[\"lài\"]],\n  \"卓\": [[\"zhuó\"]],\n  \"蔺\": [[\"lìn\"]],\n  \"屠\": [[\"tú\"]],\n  \"蒙\": [[\"méng\"]],\n  \"池\": [[\"chí\"]],\n  \"乔\": [[\"qiáo\"]],\n  \"阴\": [[\"yīn\"]],\n  \"鬱\": [[\"yù\"]],\n  \"胥\": [[\"xū\"]],\n  \"能\": [[\"nài\"]],\n  \"苍\": [[\"cāng\"]],\n  \"双\": [[\"shuāng\"]],\n  \"闻\": [[\"wén\"]],\n  \"莘\": [[\"shēn\"]],\n  \"党\": [[\"dǎng\"]],\n  \"翟\": [[\"zhái\"]],\n  \"谭\": [[\"tán\"]],\n  \"贡\": [[\"gòng\"]],\n  \"劳\": [[\"láo\"]],\n  \"逄\": [[\"páng\"]],\n  \"姬\": [[\"jī\"]],\n  \"申\": [[\"shēn\"]],\n  \"扶\": [[\"fú\"]],\n  \"堵\": [[\"dǔ\"]],\n  \"冉\": [[\"rǎn\"]],\n  \"宰\": [[\"zǎi\"]],\n  \"郦\": [[\"lì\"]],\n  \"雍\": [[\"yōng\"]],\n  \"郤\": [[\"xì\"]],\n  \"璩\": [[\"qú\"]],\n  \"桑\": [[\"sāng\"]],\n  \"桂\": [[\"guì\"]],\n  \"濮\": [[\"pú\"]],\n  \"牛\": [[\"niú\"]],\n  \"寿\": [[\"shòu\"]],\n  \"通\": [[\"tōng\"]],\n  \"边\": [[\"biān\"]],\n  \"扈\": [[\"hù\"]],\n  \"燕\": [[\"yān\"]],\n  \"冀\": [[\"jì\"]],\n  \"郏\": [[\"jiá\"]],\n  \"浦\": [[\"pǔ\"]],\n  \"尚\": [[\"shàng\"]],\n  \"农\": [[\"nóng\"]],\n  \"温\": [[\"wēn\"]],\n  \"别\": [[\"bié\"]],\n  \"庄\": [[\"zhuāng\"]],\n  \"晏\": [[\"yàn\"]],\n  \"柴\": [[\"chái\"]],\n  \"瞿\": [[\"qú\"]],\n  \"阎\": [[\"yán\"]],\n  \"充\": [[\"chōng\"]],\n  \"慕\": [[\"mù\"]],\n  \"连\": [[\"lián\"]],\n  \"茹\": [[\"rú\"]],\n  \"习\": [[\"xí\"]],\n  \"宦\": [[\"huàn\"]],\n  \"艾\": [[\"ài\"]],\n  \"鱼\": [[\"yú\"]],\n  \"容\": [[\"róng\"]],\n  \"向\": [[\"xiàng\"]],\n  \"古\": [[\"gǔ\"]],\n  \"易\": [[\"yì\"]],\n  \"慎\": [[\"shèn\"]],\n  \"戈\": [[\"gē\"]],\n  \"廖\": [[\"liào\"]],\n  \"庾\": [[\"yǔ\"]],\n  \"终\": [[\"zhōng\"]],\n  \"暨\": [[\"jì\"]],\n  \"居\": [[\"jū\"]],\n  \"衡\": [[\"héng\"]],\n  \"步\": [[\"bù\"]],\n  \"都\": [[\"dū\"]],\n  \"耿\": [[\"gěng\"]],\n  \"满\": [[\"mǎn\"]],\n  \"弘\": [[\"hóng\"]],\n  \"匡\": [[\"kuāng\"]],\n  \"国\": [[\"guó\"]],\n  \"文\": [[\"wén\"]],\n  \"寇\": [[\"kòu\"]],\n  \"广\": [[\"guǎng\"]],\n  \"禄\": [[\"lù\"]],\n  \"阙\": [[\"quē\"]],\n  \"东\": [[\"dōng\"]],\n  \"欧\": [[\"ōu\"]],\n  \"殳\": [[\"shū\"]],\n  \"沃\": [[\"wò\"]],\n  \"利\": [[\"lì\"]],\n  \"蔚\": [[\"wèi\"]],\n  \"越\": [[\"yuè\"]],\n  \"夔\": [[\"kuí\"]],\n  \"隆\": [[\"lóng\"]],\n  \"师\": [[\"shī\"]],\n  \"巩\": [[\"gǒng\"]],\n  \"厍\": [[\"shè\"]],\n  \"聂\": [[\"niè\"]],\n  \"晁\": [[\"cháo\"]],\n  \"勾\": [[\"gōu\"]],\n  \"敖\": [[\"áo\"]],\n  \"融\": [[\"róng\"]],\n  \"冷\": [[\"lěng\"]],\n  \"訾\": [[\"zǐ\"]],\n  \"辛\": [[\"xīn\"]],\n  \"阚\": [[\"kàn\"]],\n  \"那\": [[\"nā\"]],\n  \"简\": [[\"jiǎn\"]],\n  \"饶\": [[\"ráo\"]],\n  \"空\": [[\"kōng\"]],\n  \"曾\": [[\"zēng\"]],\n  \"母\": [[\"mǔ\"]],\n  \"沙\": [[\"shā\"]],\n  \"乜\": [[\"niè\"]],\n  \"养\": [[\"yǎng\"]],\n  \"鞠\": [[\"jū\"]],\n  \"须\": [[\"xū\"]],\n  \"丰\": [[\"fēng\"]],\n  \"巢\": [[\"cháo\"]],\n  \"关\": [[\"guān\"]],\n  \"蒯\": [[\"kuǎi\"]],\n  \"相\": [[\"xiàng\"]],\n  \"查\": [[\"zhā\"]],\n  \"后\": [[\"hòu\"]],\n  \"荆\": [[\"jīng\"]],\n  \"红\": [[\"hóng\"]],\n  \"游\": [[\"yóu\"]],\n  \"竺\": [[\"zhú\"]],\n  \"权\": [[\"quán\"]],\n  \"逯\": [[\"lù\"]],\n  \"盖\": [[\"gài\"]],\n  \"益\": [[\"yì\"]],\n  \"桓\": [[\"huán\"]],\n  \"公\": [[\"gōng\"]],\n  \"牟\": [[\"móu\"]],\n  \"哈\": [[\"hǎ\"]],\n  \"言\": [[\"yán\"]],\n  \"福\": [[\"fú\"]],\n};\n","// 带声调字符。\nmodule.exports = {\n  \"ā\": \"a1\",\n  \"á\": \"a2\",\n  \"ǎ\": \"a3\",\n  \"à\": \"a4\",\n  \"ē\": \"e1\",\n  \"é\": \"e2\",\n  \"ě\": \"e3\",\n  \"è\": \"e4\",\n  \"ō\": \"o1\",\n  \"ó\": \"o2\",\n  \"ǒ\": \"o3\",\n  \"ò\": \"o4\",\n  \"ī\": \"i1\",\n  \"í\": \"i2\",\n  \"ǐ\": \"i3\",\n  \"ì\": \"i4\",\n  \"ū\": \"u1\",\n  \"ú\": \"u2\",\n  \"ǔ\": \"u3\",\n  \"ù\": \"u4\",\n  \"ü\": \"v0\",\n  \"ǘ\": \"v2\",\n  \"ǚ\": \"v3\",\n  \"ǜ\": \"v4\",\n  \"ń\": \"n2\",\n  \"ň\": \"n3\",\n  \"\": \"m2\",\n};\n","\"use strict\";\n\nconst assign = require(\"object-assign\");\nconst SurnamePinyinData = require(\"../data/surname\");\nconst CompoundSurnamePinyinData = require(\"../data/compound_surname\");\n\n// XXX: Symbol when web support.\nconst PINYIN_STYLE = {\n  NORMAL: 0,       // 普通风格，不带声调。\n  TONE: 1,         // 标准风格，声调在韵母的第一个字母上。\n  TONE2: 2,        // 声调以数字形式在拼音之后，使用数字 0~4 标识。\n  TO3NE: 5,        // 声调以数字形式在声母之后，使用数字 0~4 标识。\n  INITIALS: 3,     // 仅需要声母部分。\n  FIRST_LETTER: 4, // 仅保留首字母。\n};\n// 拼音模式。\nconst PINYIN_MODE = {\n  NORMAL: 0, // 普通模式\n  SURNAME: 1, // 姓氏\n  PLACENAME: 2, // 地名\n};\nconst DEFAULT_OPTIONS = {\n  mode: PINYIN_MODE.NORMAL, // 拼音模式。\n  style: PINYIN_STYLE.TONE, // 风格。\n  segment: false,           // 分词。\n  heteronym: false,         // 多音字。\n};\n\n// 声母表。\nconst INITIALS = \"b,p,m,f,d,t,n,l,g,k,h,j,q,x,r,zh,ch,sh,z,c,s\".split(\",\");\n// 韵母表。\n//const FINALS = \"ang,eng,ing,ong,an,en,in,un,er,ai,ei,ui,ao,ou,iu,ie,ve,a,o,e,i,u,v\".split(\",\");\n// 带声调字符。\nconst PHONETIC_SYMBOL = require(\"./phonetic-symbol\");\nconst RE_PHONETIC_SYMBOL = new RegExp(\"([\" + Object.keys(PHONETIC_SYMBOL).join(\"\") + \"])\", \"g\");\nconst RE_TONE2 = /([aeoiuvnm])([0-4])$/;\nconst util = require(\"./util\");\n\n/*\n * 格式化拼音为声母（Initials）形式。\n * @param {String}\n * @return {String}\n */\nfunction initials(pinyin) {\n  for (let i = 0, l = INITIALS.length; i < l; i++){\n    if (pinyin.indexOf(INITIALS[i]) === 0) {\n      return INITIALS[i];\n    }\n  }\n  return \"\";\n}\n\nclass Pinyin {\n  constructor (dict) {\n    this._dict = dict;\n  }\n\n  // @param {String} hans 要转为拼音的目标字符串（汉字）。\n  // @param {Object} options, 可选，用于指定拼音风格，是否启用多音字。\n  // @return {Array} 返回的拼音列表。\n  convert (hans, options) {\n\n    if (typeof hans !== \"string\") {\n      return [];\n    }\n\n    options = assign({}, DEFAULT_OPTIONS, options);\n\n    let pys = [];\n    let nohans = \"\";\n\n    if (options.mode === PINYIN_MODE.SURNAME) {\n      pys.push(this.surname_pinyin(hans, options));\n    } else {\n\n      for(let i = 0, firstCharCode, words, l = hans.length; i < l; i++) {\n\n        words = hans[i];\n        firstCharCode = words.charCodeAt(0);\n\n        if(this._dict[firstCharCode]) {\n\n          // ends of non-chinese words.\n          if(nohans.length > 0) {\n            pys.push([nohans]);\n            nohans = \"\"; // reset non-chinese words.\n          }\n\n          pys.push(this.single_pinyin(words, options));\n\n        } else {\n          nohans += words;\n        }\n      }\n\n    }\n\n    // 清理最后的非中文字符串。\n    if(nohans.length > 0){\n      pys.push([nohans]);\n    }\n\n    Object.defineProperty(pys, \"compact\", {\n      value: util.compact.bind(this, pys),\n      enumerable: false,\n      configurable: false,\n    });\n\n    return pys;\n  }\n\n  // 单字拼音转换。\n  // @param {String} han, 单个汉字\n  // @return {Array} 返回拼音列表，多音字会有多个拼音项。\n  single_pinyin(han, options) {\n\n    if (typeof han !== \"string\") {\n      return [];\n    }\n    if (han.length !== 1) {\n      return this.single_pinyin(han.charAt(0), options);\n    }\n\n    let hanCode = han.charCodeAt(0);\n\n    if (!this._dict[hanCode]) {\n      return [han];\n    }\n\n    let pys = this._dict[hanCode].split(\",\");\n    if(!options.heteronym){\n      return [Pinyin.toFixed(pys[0], options.style)];\n    }\n\n    // 临时存储已存在的拼音，避免多音字拼音转换为非注音风格出现重复。\n    let py_cached = {};\n    let pinyins = [];\n    for(let i = 0, py, l = pys.length; i < l; i++){\n      py = Pinyin.toFixed(pys[i], options.style);\n      if(py_cached.hasOwnProperty(py)){\n        continue;\n      }\n      py_cached[py] = py;\n\n      pinyins.push(py);\n    }\n    return pinyins;\n  }\n\n  // 姓名转成拼音\n  surname_pinyin(hans, options) {\n    return this.compound_surname(hans, options);\n  }\n\n  // 复姓处理\n  compound_surname(hans, options) {\n    let len = hans.length;\n    let prefixIndex = 0;\n    let result = [];\n    function toFixed(item) {\n      return item.map(ch => Pinyin.toFixed(ch, options.style));\n    }\n    for (let i = 0; i < len; i++) {\n      const twowords = hans.substring(i, i + 2);\n      if (CompoundSurnamePinyinData.hasOwnProperty(twowords)) {\n        if (prefixIndex <= i - 1) {\n          result = result.concat(\n            this.single_surname(\n              hans.substring(prefixIndex, i),\n              options\n            )\n          );\n        }\n        result = result.concat(CompoundSurnamePinyinData[twowords].map(toFixed));\n\n        i = i + 2;\n        prefixIndex = i;\n      }\n    }\n    // 处理复姓后面剩余的部分。\n    result = result.concat(\n      this.single_surname(\n        hans.substring(prefixIndex, len),\n        options\n      )\n    );\n    return result;\n  }\n\n  // 单姓处理\n  single_surname(hans, options) {\n    let result = [];\n    function toFixed(item) {\n      return item.map(ch => Pinyin.toFixed(ch, options.style));\n    }\n    for (let i = 0, l = hans.length; i < l; i++) {\n      const word = hans.charAt(i);\n      if (SurnamePinyinData.hasOwnProperty(word)) {\n        result = result.concat(SurnamePinyinData[word].map(toFixed));\n      } else {\n        result.push(this.single_pinyin(word, options));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * 格式化拼音风格。\n   *\n   * @param {String} pinyin TONE 风格的拼音。\n   * @param {ENUM} style 目标转换的拼音风格。\n   * @return {String} 转换后的拼音。\n   */\n  static toFixed (pinyin, style) {\n    let tone = \"\"; // 声调。\n    let first_letter;\n    let py;\n    switch(style){\n    case PINYIN_STYLE.INITIALS:\n      return initials(pinyin);\n\n    case PINYIN_STYLE.FIRST_LETTER:\n      first_letter = pinyin.charAt(0);\n      if (PHONETIC_SYMBOL.hasOwnProperty(first_letter)) {\n        first_letter = PHONETIC_SYMBOL[first_letter].charAt(0);\n      }\n      return first_letter;\n\n    case PINYIN_STYLE.NORMAL:\n      return pinyin.replace(RE_PHONETIC_SYMBOL, function($0, $1_phonetic){\n        return PHONETIC_SYMBOL[$1_phonetic].replace(RE_TONE2, \"$1\");\n      });\n\n    case PINYIN_STYLE.TO3NE:\n      return pinyin.replace(RE_PHONETIC_SYMBOL, function($0, $1_phonetic){\n        return PHONETIC_SYMBOL[$1_phonetic];\n      });\n\n    case PINYIN_STYLE.TONE2:\n      py = pinyin.replace(RE_PHONETIC_SYMBOL, function($0, $1){\n        // 声调数值。\n        tone = PHONETIC_SYMBOL[$1].replace(RE_TONE2, \"$2\");\n\n        return PHONETIC_SYMBOL[$1].replace(RE_TONE2, \"$1\");\n      });\n      return py + tone;\n\n    case PINYIN_STYLE.TONE:\n    default:\n      return pinyin;\n    }\n  }\n\n  /**\n   * 比较两个汉字转成拼音后的排序顺序，可以用作默认的拼音排序算法。\n   *\n   * @param {String} hanA 汉字字符串 A。\n   * @return {String} hanB 汉字字符串 B。\n   * @return {Number} 返回 -1，0，或 1。\n   */\n  compare (hanA, hanB) {\n    const pinyinA = this.convert(hanA, DEFAULT_OPTIONS);\n    const pinyinB = this.convert(hanB, DEFAULT_OPTIONS);\n    return String(pinyinA).localeCompare(String(pinyinB));\n  }\n\n  compact(arr) {\n    return util.compact(arr);\n  }\n\n  static get STYLE_NORMAL () {\n    return PINYIN_STYLE.NORMAL;\n  }\n  static get STYLE_TONE () {\n    return PINYIN_STYLE.TONE;\n  }\n  static get STYLE_TONE2 () {\n    return PINYIN_STYLE.TONE2;\n  }\n  static get STYLE_TO3NE () {\n    return PINYIN_STYLE.TO3NE;\n  }\n  static get STYLE_INITIALS () {\n    return PINYIN_STYLE.INITIALS;\n  }\n  static get STYLE_FIRST_LETTER () {\n    return PINYIN_STYLE.FIRST_LETTER;\n  }\n  static get MODE_NORMAL () {\n    return PINYIN_MODE.NORMAL;\n  }\n  static get MODE_SURNAME () {\n    return PINYIN_MODE.SURNAME;\n  }\n  static get MODE_PLACENAME () {\n    return PINYIN_MODE.PLACENAME;\n  }\n  static get DEFAULT_OPTIONS () {\n    return DEFAULT_OPTIONS;\n  }\n}\n\nmodule.exports = Pinyin;\n","\"use strict\";\n\n/**\n * 组合 2 个拼音数组。\n * @param {Array<String>} a1 第一个数组，形如 [\"zhāo\", \"cháo\"]\n * @param {Array<String>} a2 字符串型数组。形如 [\"yáng\"]\n * @return {Array<String>} 组合后的一维数组，如上可得 [\"zhāoyáng\", \"cháoyáng\"]\n */\nfunction combo2array(a1, a2) {\n  const result = [];\n  if (!a1.length) {\n    return a2;\n  }\n  if (!a2.length) {\n    return a1;\n  }\n  for (let i = 0, l = a1.length; i < l; i++) {\n    for (let j = 0, m = a2.length; j < m; j++) {\n      result.push(a1[i] + a2[j]);\n    }\n  }\n  return result;\n}\n\n/**\n * 合并二维元祖。\n * @param {Array<Array<String>>} arr 二维元祖 [[\"zhāo\", \"cháo\"], [\"yáng\"], [\"dōng\"], [\"shēng\"]]\n * @return {Array<String>} 返回二维字符串组合数组。形如\n *  [\n *    [\"zhāoyáng\"], [\"dōng\"], [\"shēng\"],\n *    [\"cháoyáng\"], [\"dōng\"], [\"shēng\"]\n *  ]\n */\nfunction combo(arr) {\n  if (arr.length === 0) {\n    return [];\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n  let result = combo2array(arr[0], arr[1]);\n  for (let i = 2, l = arr.length; i < l; i++) {\n    result = combo2array(result, arr[i]);\n  }\n  return result;\n}\n\n/**\n * 组合两个拼音数组，形成一个新的二维数组\n * @param {string[]|string[][]} arr1 eg: [\"hai\", \"huan\"]\n * @param {Array<String>} arr2 eg: [\"qian\"]\n * @returns {string[][]} 组合后的二维数组，eg: [ [\"hai\", \"qian\"], [\"huan\", \"qian\"] ]\n */\nfunction compact2array(a1, a2) {\n  if (!Array.isArray(a1) || !Array.isArray(a2)) {\n    throw new Error(\"compact2array expect two array as parameters\");\n  }\n  if (!a1.length) {\n    a1 = [\"\"];\n  }\n  if (!a2.length) {\n    a2 = [\"\"];\n  }\n  const result = [];\n  for (let i = 0, l = a1.length; i < l; i++) {\n    for (let j = 0, m = a2.length; j < m; j++) {\n      if (Array.isArray(a1[i])) {\n        result.push([...a1[i], a2[j]]);\n      } else {\n        result.push([a1[i], a2[j]]);\n      }\n    }\n  }\n  return result;\n}\n\nfunction compact(arr) {\n  if (arr.length === 0) {\n    return [];\n  }\n  if (arr.length === 1) {\n    return [arr[0]];\n  }\n  let result = compact2array(arr[0], arr[1]);\n  for (let i = 2, l = arr.length; i < l; ++i) {\n    result = compact2array(result, arr[i]);\n  }\n  return result;\n}\n\nexports.combo2array = combo2array;\nexports.combo = combo;\nexports.compact2array = compact2array;\nexports.compact = compact;\n","\"use strict\";\n\n// 解压拼音库。\n// @param {Object} dict_combo, 压缩的拼音库。\n// @param {Object} 解压的拼音库。\nfunction buildPinyinCache(dict_combo){\n  let hans;\n  let uncomboed = {};\n\n  for(let py in dict_combo){\n    hans = dict_combo[py];\n    for(let i = 0, han, l = hans.length; i < l; i++){\n      han = hans.charCodeAt(i);\n      if(!uncomboed.hasOwnProperty(han)){\n        uncomboed[han] = py;\n      }else{\n        uncomboed[han] += \",\" + py;\n      }\n    }\n  }\n\n  return uncomboed;\n}\n\nconst PINYIN_DICT = buildPinyinCache(require(\"../data/dict-zi-web\"));\nconst Pinyin = require(\"./pinyin\");\nconst pinyin = new Pinyin(PINYIN_DICT);\n\nmodule.exports = pinyin.convert.bind(pinyin);\nmodule.exports.compare = pinyin.compare.bind(pinyin);\nmodule.exports.compact = pinyin.compact.bind(pinyin);\nmodule.exports.STYLE_NORMAL = Pinyin.STYLE_NORMAL;\nmodule.exports.STYLE_TONE = Pinyin.STYLE_TONE;\nmodule.exports.STYLE_TONE2 = Pinyin.STYLE_TONE2;\nmodule.exports.STYLE_TO3NE = Pinyin.STYLE_TO3NE;\nmodule.exports.STYLE_INITIALS = Pinyin.STYLE_INITIALS;\nmodule.exports.STYLE_FIRST_LETTER = Pinyin.STYLE_FIRST_LETTER;\n","import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;","import { useReducer, useRef, useMemo, useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport { ReactReduxContext } from '../components/Context';\n\nvar refEquality = function refEquality(a, b) {\n  return a === b;\n};\n\nfunction useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {\n  var _useReducer = useReducer(function (s) {\n    return s + 1;\n  }, 0),\n      forceRender = _useReducer[1];\n\n  var subscription = useMemo(function () {\n    return createSubscription(store, contextSub);\n  }, [store, contextSub]);\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef();\n  var latestStoreState = useRef();\n  var latestSelectedState = useRef();\n  var storeState = store.getState();\n  var selectedState;\n\n  try {\n    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {\n      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references\n\n      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {\n        selectedState = newSelectedState;\n      } else {\n        selectedState = latestSelectedState.current;\n      }\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\" + latestSubscriptionCallbackError.current.stack + \"\\n\\n\";\n    }\n\n    throw err;\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    latestSelector.current = selector;\n    latestStoreState.current = storeState;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(function () {\n    function checkForUpdates() {\n      try {\n        var newStoreState = store.getState(); // Avoid calling selector multiple times if the store's state has not changed\n\n        if (newStoreState === latestStoreState.current) {\n          return;\n        }\n\n        var _newSelectedState = latestSelector.current(newStoreState);\n\n        if (equalityFn(_newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n\n        latestSelectedState.current = _newSelectedState;\n        latestStoreState.current = newStoreState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n\n      forceRender();\n    }\n\n    subscription.onStateChange = checkForUpdates;\n    subscription.trySubscribe();\n    checkForUpdates();\n    return function () {\n      return subscription.tryUnsubscribe();\n    };\n  }, [store, subscription]);\n  return selectedState;\n}\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : function () {\n    return useContext(context);\n  };\n  return function useSelector(selector, equalityFn) {\n    if (equalityFn === void 0) {\n      equalityFn = refEquality;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(\"You must pass a selector to useSelector\");\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(\"You must pass a function as a selector to useSelector\");\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\"You must pass a function as an equality function to useSelector\");\n      }\n    }\n\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store,\n        contextSub = _useReduxContext.subscription;\n\n    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport var useSelector = /*#__PURE__*/createSelectorHook();","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nvar batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport var setBatch = function setBatch(newBatch) {\n  return batch = newBatch;\n}; // Supply a getter just to skip dealing with ESM bindings\n\nexport var getBatch = function getBatch() {\n  return batch;\n};","export * from './exports';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch'; // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  joinPaths,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n\n    let toPathname = path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(resolvedAction, { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n","import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\n// Contexts for data routers\nexport const DataStaticRouterContext =\n  React.createContext<StaticHandlerContext | null>(null);\nif (__DEV__) {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n  DataStaticRouterContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RenderedRoute\n        match={match}\n        routeContext={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      >\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `useLoaderData can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData[thisRoute.route.id];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  return (\n    <DataRouterContext.Provider\n      value={{\n        router,\n        navigator,\n        static: false,\n        // Do we need this?\n        basename,\n      }}\n    >\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          basename={router.basename}\n          location={router.state.location}\n          navigationType={router.state.historyAction}\n          navigator={navigator}\n        >\n          {router.state.initialized ? <Routes /> : fallbackElement}\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactElement;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n  return <>{children}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from \"react\";\nimport type {\n  Hash,\n  History,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Path,\n  Pathname,\n  Search,\n  To,\n} from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n  createPath,\n} from \"history\";\n\nexport { parsePath, createPath, NavigationType };\nexport type { Hash, Location, Path, Pathname, Search, To };\n\nfunction invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nconst NavigationContext = React.createContext<NavigationContextObject>(null!);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nconst LocationContext = React.createContext<LocationContextObject>(null!);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nconst RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\ntype ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\nfunction _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nfunction stripBasename(pathname: string, basename: string): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nconst joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nconst normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","Object","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","i","length","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","next","unsubscribe","this","legacy_createStore","combineReducers","reducers","reducerKeys","keys","finalReducers","key","process","shapeAssertionError","finalReducerKeys","forEach","assertReducerShape","e","state","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","_objectSpread","createReduxStore","bag","models","model","createModelReducer","rootReducer","createRootReducer","Redux","reduxConfig","enhancers","devtoolComposer","devtoolOptions","disabled","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancersWithDevtools","bagInitialState","initialState","modelReducers","reducerKey","actionName","isAlreadyActionName","name","combinedReducer","payload","meta","modelBaseReducer","baseReducer","forEachPlugin","onReducer","rootReducers","mergedReducers","mergeReducers","actionRootReducer","onRootReducer","createActionDispatcher","rematch","modelName","isEffect","assign","createRematchBag","config","createNamedModel","redux","method","fn","plugins","plugin","effects","createRematchStore","createEffectsMiddleware","createMiddleware","reduxStore","rematchStore","addModel","prepareModel","enhanceModel","exposed","exposedItem","isExposedFunction","params","create","onStoreCreated","modelDispatcher","reducerName","createReducerDispatcher","effectName","bind","createEffectDispatcher","onModel","count","merge","original","extra","init","initConfig","storeName","_initConfig$redux","createConfig","Action","ResultType","createPath","pathname","search","hash","charAt","parsePath","path","parsedPath","hashIndex","substr","searchIndex","matchPath","pattern","caseSensitive","end","warning","endsWith","replace","paramNames","regexpSource","_","paramName","RegExp","compilePath","matcher","match","matchedPathname","pathnameBase","captureGroups","memo","splatValue","value","decodeURIComponent","error","safelyDecodeURIComponent","invariant","message","cond","console","warn","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","matches","filter","route","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","to","includes","from","isEmptyPath","toPathname","routePathnameIndex","startsWith","toSegments","shift","fromPathname","relativePath","segments","segment","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","joinPaths","paths","AbortedDeferredError","document","createElement","validActionMethods","Set","reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","prototype","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","descriptor","for","c","d","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","SurnamePinyinData","CompoundSurnamePinyinData","PINYIN_STYLE","PINYIN_MODE","DEFAULT_OPTIONS","mode","style","heteronym","INITIALS","PHONETIC_SYMBOL","RE_PHONETIC_SYMBOL","RE_TONE2","util","Pinyin","dict","_dict","hans","options","pys","nohans","surname_pinyin","firstCharCode","words","charCodeAt","single_pinyin","compact","enumerable","configurable","han","hanCode","toFixed","py","py_cached","pinyins","hasOwnProperty","compound_surname","len","prefixIndex","result","item","ch","twowords","single_surname","word","hanA","hanB","pinyinA","convert","pinyinB","String","localeCompare","arr","pinyin","first_letter","tone","initials","$0","$1_phonetic","$1","combo2array","a1","a2","j","compact2array","isArray","combo","PINYIN_DICT","dict_combo","uncomboed","buildPinyinCache","STYLE_NORMAL","STYLE_TONE","STYLE_TONE2","STYLE_TO3NE","STYLE_INITIALS","STYLE_FIRST_LETTER","useLayoutEffect","useEffect","newBatch","batch","Link","React","ref","onClick","_ref4","relative","reloadDocument","target","preventScrollReset","rest","href","useHref","internalOnClick","_temp","replaceProp","navigate","useNavigate","location","useLocation","useResolvedPath","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","DataRouterHook","DataRouterStateHook","is","useState","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","nextValue","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useInRouterContext","basename","navigator","joinedPathname","createHref","routePathnamesJson","activeRef","current","parse","go","_temp2","AwaitRenderStatus","neverSettledPromise","Promise","hasOwn","classNames","classes","argType","inner","call","default","Navigate","arrayLikeToArray","__esModule","iter","iterator","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}